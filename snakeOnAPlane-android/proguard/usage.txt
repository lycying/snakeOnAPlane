android.annotation.SuppressLint
android.annotation.TargetApi
aurelienribon.tweenengine.BaseTween:
    108:109:public java.lang.Object delay(float)
    132:133:public void pause()
    139:140:public void resume()
    151:155:public java.lang.Object repeat(int,float)
    214:215:public java.lang.Object setCallbackTriggers(int)
    226:227:public java.lang.Object setUserData(java.lang.Object)
    239:239:public float getDelay()
    246:246:public float getDuration()
    260:260:public float getRepeatDelay()
    279:279:public java.lang.Object getUserData()
    292:293:public int getStep()
    300:300:public boolean isStarted()
    317:317:public boolean isYoyo()
    324:324:public boolean isPaused()
    protected abstract void killTarget(java.lang.Object)
    protected abstract void killTarget(java.lang.Object,int)
    protected abstract boolean containsTarget(java.lang.Object)
    protected abstract boolean containsTarget(java.lang.Object,int)
aurelienribon.tweenengine.Pool:
    33:34:public void clear()
    37:37:public int size()
    41:42:public void ensureCapacity(int)
aurelienribon.tweenengine.Timeline:
    64:64:public static int getPoolSize()
    71:72:public static void ensurePoolCapacity(int)
    154:158:public aurelienribon.tweenengine.Timeline push(aurelienribon.tweenengine.Timeline)
    169:171:public aurelienribon.tweenengine.Timeline pushPause(float)
    181:187:public aurelienribon.tweenengine.Timeline beginSequence()
    223:224:public java.util.List getChildren()
    331:332:protected void killTarget(java.lang.Object)
    336:337:protected void killTarget(java.lang.Object,int)
    341:345:protected boolean containsTarget(java.lang.Object)
    350:354:protected boolean containsTarget(java.lang.Object,int)
aurelienribon.tweenengine.Tween:
    public static final int INFINITY
    100:103:public static void setCombinedAttributesLimit(int)
    110:112:public static void setWaypointsLimit(int)
    118:118:public static java.lang.String getVersion()
    138:138:public static int getPoolSize()
    145:146:public static void ensurePoolCapacity(int)
    173:173:public static aurelienribon.tweenengine.TweenAccessor getRegisteredAccessor(java.lang.Class)
    250:255:public static aurelienribon.tweenengine.Tween from(java.lang.Object,int,float)
    288:290:public static aurelienribon.tweenengine.Tween set(java.lang.Object,int)
    316:320:public static aurelienribon.tweenengine.Tween call(aurelienribon.tweenengine.TweenCallback)
    333:335:public static aurelienribon.tweenengine.Tween mark()
    444:446:public aurelienribon.tweenengine.Tween cast(java.lang.Class)
    523:525:public varargs aurelienribon.tweenengine.Tween target(float[])
    541:543:public aurelienribon.tweenengine.Tween targetRelative(float)
    560:563:public aurelienribon.tweenengine.Tween targetRelative(float,float)
    581:585:public aurelienribon.tweenengine.Tween targetRelative(float,float,float)
    601:607:public varargs aurelienribon.tweenengine.Tween targetRelative(float[])
    621:624:public aurelienribon.tweenengine.Tween waypoint(float)
    642:646:public aurelienribon.tweenengine.Tween waypoint(float,float)
    665:670:public aurelienribon.tweenengine.Tween waypoint(float,float,float)
    687:690:public varargs aurelienribon.tweenengine.Tween waypoint(float[])
    716:716:public java.lang.Object getTarget()
    723:723:public int getType()
    730:730:public aurelienribon.tweenengine.TweenEquation getEasing()
    740:740:public float[] getTargetValues()
    747:747:public int getCombinedAttributesCount()
    754:754:public aurelienribon.tweenengine.TweenAccessor getAccessor()
    761:761:public java.lang.Class getTargetClass()
    853:854:protected void killTarget(java.lang.Object)
    858:859:protected void killTarget(java.lang.Object,int)
    863:863:protected boolean containsTarget(java.lang.Object)
    868:868:protected boolean containsTarget(java.lang.Object,int)
    884:888:private void throwWaypointsLimitReached()
aurelienribon.tweenengine.TweenCallback:
    public static final int BEGIN
    public static final int START
    public static final int END
    public static final int COMPLETE
    public static final int BACK_START
    public static final int BACK_END
    public static final int BACK_COMPLETE
aurelienribon.tweenengine.TweenEquation:
    29:29:public boolean isValueOf(java.lang.String)
aurelienribon.tweenengine.TweenEquations
aurelienribon.tweenengine.TweenManager:
    32:33:public static void setAutoRemove(aurelienribon.tweenengine.BaseTween,boolean)
    42:43:public static void setAutoStart(aurelienribon.tweenengine.BaseTween,boolean)
    68:72:public boolean containsTarget(java.lang.Object)
    80:84:public boolean containsTarget(java.lang.Object,int)
    102:106:public void killTarget(java.lang.Object)
    114:118:public void killTarget(java.lang.Object,int)
    124:125:public void ensureCapacity(int)
aurelienribon.tweenengine.TweenUtils
aurelienribon.tweenengine.equations.Back
aurelienribon.tweenengine.equations.Back$1
aurelienribon.tweenengine.equations.Back$2
aurelienribon.tweenengine.equations.Back$3
aurelienribon.tweenengine.equations.Bounce
aurelienribon.tweenengine.equations.Bounce$1
aurelienribon.tweenengine.equations.Bounce$2
aurelienribon.tweenengine.equations.Bounce$3
aurelienribon.tweenengine.equations.Circ
aurelienribon.tweenengine.equations.Circ$1
aurelienribon.tweenengine.equations.Circ$2
aurelienribon.tweenengine.equations.Circ$3
aurelienribon.tweenengine.equations.Cubic
aurelienribon.tweenengine.equations.Cubic$1
aurelienribon.tweenengine.equations.Cubic$2
aurelienribon.tweenengine.equations.Cubic$3
aurelienribon.tweenengine.equations.Elastic
aurelienribon.tweenengine.equations.Elastic$1
aurelienribon.tweenengine.equations.Elastic$2
aurelienribon.tweenengine.equations.Elastic$3
aurelienribon.tweenengine.equations.Expo
aurelienribon.tweenengine.equations.Expo$1
aurelienribon.tweenengine.equations.Expo$2
aurelienribon.tweenengine.equations.Expo$3
aurelienribon.tweenengine.equations.Linear
aurelienribon.tweenengine.equations.Linear$1
aurelienribon.tweenengine.equations.Quart
aurelienribon.tweenengine.equations.Quart$1
aurelienribon.tweenengine.equations.Quart$2
aurelienribon.tweenengine.equations.Quart$3
aurelienribon.tweenengine.equations.Quint
aurelienribon.tweenengine.equations.Quint$1
aurelienribon.tweenengine.equations.Quint$2
aurelienribon.tweenengine.equations.Quint$3
aurelienribon.tweenengine.equations.Sine
aurelienribon.tweenengine.equations.Sine$1
aurelienribon.tweenengine.equations.Sine$2
aurelienribon.tweenengine.equations.Sine$3
aurelienribon.tweenengine.primitives.MutableFloat
aurelienribon.tweenengine.primitives.MutableInteger
com.badlogic.gdx.Application:
    public static final int LOG_NONE
    public static final int LOG_DEBUG
    public static final int LOG_INFO
    public static final int LOG_ERROR
    public abstract com.badlogic.gdx.Audio getAudio()
    public abstract com.badlogic.gdx.Input getInput()
    public abstract com.badlogic.gdx.Files getFiles()
    public abstract void log(java.lang.String,java.lang.String,java.lang.Exception)
    public abstract void error(java.lang.String,java.lang.String)
    public abstract void debug(java.lang.String,java.lang.String,java.lang.Throwable)
    public abstract void setLogLevel(int)
    public abstract int getVersion()
    public abstract com.badlogic.gdx.utils.Clipboard getClipboard()
    public abstract void exit()
com.badlogic.gdx.Audio:
    public abstract com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean)
    public abstract com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean)
com.badlogic.gdx.Files:
    public abstract com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType)
    public abstract com.badlogic.gdx.files.FileHandle external(java.lang.String)
    public abstract com.badlogic.gdx.files.FileHandle absolute(java.lang.String)
    public abstract com.badlogic.gdx.files.FileHandle local(java.lang.String)
    public abstract boolean isExternalStorageAvailable()
    public abstract java.lang.String getLocalStoragePath()
    public abstract boolean isLocalStorageAvailable()
com.badlogic.gdx.Game
com.badlogic.gdx.Gdx:
    35:35:public Gdx()
com.badlogic.gdx.Graphics:
    public abstract com.badlogic.gdx.graphics.GLCommon getGLCommon()
    public abstract com.badlogic.gdx.graphics.GL10 getGL10()
    public abstract com.badlogic.gdx.graphics.GLU getGLU()
    public abstract float getRawDeltaTime()
    public abstract com.badlogic.gdx.Graphics$GraphicsType getType()
    public abstract float getPpiX()
    public abstract float getPpiY()
    public abstract float getPpcX()
    public abstract float getPpcY()
    public abstract float getDensity()
    public abstract boolean supportsDisplayModeChange()
    public abstract com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes()
    public abstract com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode()
    public abstract boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode)
    public abstract boolean setDisplayMode(int,int,boolean)
    public abstract void setTitle(java.lang.String)
    public abstract void setVSync(boolean)
    public abstract com.badlogic.gdx.Graphics$BufferFormat getBufferFormat()
    public abstract void setContinuousRendering(boolean)
    public abstract boolean isContinuousRendering()
    public abstract boolean isFullscreen()
com.badlogic.gdx.Graphics$GraphicsType
com.badlogic.gdx.Input:
    public abstract float getAccelerometerX()
    public abstract float getAccelerometerY()
    public abstract float getAccelerometerZ()
    public abstract int getX()
    public abstract int getX(int)
    public abstract int getDeltaX()
    public abstract int getDeltaX(int)
    public abstract int getY()
    public abstract int getY(int)
    public abstract int getDeltaY()
    public abstract int getDeltaY(int)
    public abstract boolean isTouched()
    public abstract boolean justTouched()
    public abstract boolean isKeyPressed(int)
    public abstract void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
    public abstract void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
    public abstract void setOnscreenKeyboardVisible(boolean)
    public abstract void vibrate(int)
    public abstract void vibrate(long[],int)
    public abstract void cancelVibrate()
    public abstract float getAzimuth()
    public abstract float getPitch()
    public abstract float getRoll()
    public abstract void getRotationMatrix(float[])
    public abstract void setCatchMenuKey(boolean)
    public abstract boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral)
    public abstract int getRotation()
    public abstract com.badlogic.gdx.Input$Orientation getNativeOrientation()
    public abstract void setCursorCatched(boolean)
    public abstract boolean isCursorCatched()
    public abstract void setCursorPosition(int,int)
com.badlogic.gdx.Input$Buttons
com.badlogic.gdx.Input$Keys
com.badlogic.gdx.Input$Peripheral
com.badlogic.gdx.Input$TextInputListener:
    public abstract void input(java.lang.String)
    public abstract void canceled()
com.badlogic.gdx.InputAdapter:
    49:49:public boolean mouseMoved(int,int)
    54:54:public boolean scrolled(int)
com.badlogic.gdx.InputMultiplexer:
    30:33:public varargs InputMultiplexer(com.badlogic.gdx.InputProcessor[])
    36:37:public void addProcessor(int,com.badlogic.gdx.InputProcessor)
    40:41:public void removeProcessor(int)
    48:49:public void removeProcessor(com.badlogic.gdx.InputProcessor)
    53:53:public int size()
    57:58:public void clear()
    61:62:public void setProcessors(com.badlogic.gdx.utils.Array)
    65:65:public com.badlogic.gdx.utils.Array getProcessors()
    106:108:public boolean mouseMoved(int,int)
    113:115:public boolean scrolled(int)
com.badlogic.gdx.InputProcessor:
    public abstract boolean mouseMoved(int,int)
    public abstract boolean scrolled(int)
com.badlogic.gdx.Preferences:
    public abstract void putBoolean(java.lang.String,boolean)
    public abstract void putInteger(java.lang.String,int)
    public abstract void putLong(java.lang.String,long)
    public abstract void putFloat(java.lang.String,float)
    public abstract void put(java.util.Map)
    public abstract boolean getBoolean(java.lang.String)
    public abstract int getInteger(java.lang.String)
    public abstract long getLong(java.lang.String)
    public abstract float getFloat(java.lang.String)
    public abstract boolean getBoolean(java.lang.String,boolean)
    public abstract int getInteger(java.lang.String,int)
    public abstract long getLong(java.lang.String,long)
    public abstract float getFloat(java.lang.String,float)
    public abstract java.lang.String getString(java.lang.String,java.lang.String)
    public abstract java.util.Map get()
    public abstract boolean contains(java.lang.String)
    public abstract void clear()
    public abstract void remove(java.lang.String)
com.badlogic.gdx.Screen
com.badlogic.gdx.Version:
    22:22:public Version()
com.badlogic.gdx.assets.AssetManager:
    177:183:public synchronized boolean containsAsset(java.lang.Object)
    209:213:public synchronized boolean isLoaded(java.lang.String,java.lang.Class)
    271:272:public synchronized void load(com.badlogic.gdx.assets.AssetDescriptor)
    277:287:private void disposeDependencies(java.lang.String)
    313:314:public synchronized boolean update(int)
    474:474:public synchronized int getLoadedAssets()
    479:479:public synchronized int getQueuedAssets()
    491:492:public synchronized void setErrorListener(com.badlogic.gdx.assets.AssetErrorListener)
    550:550:public com.badlogic.gdx.utils.Logger getLogger()
    571:595:public synchronized java.lang.String getDiagnostics()
com.badlogic.gdx.assets.RefCountedContainer:
    49:50:public void setObject(java.lang.Object)
com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter:
    82:84:public TextureAtlasLoader$TextureAtlasParameter(boolean)
com.badlogic.gdx.assets.loaders.TileAtlasLoader$TileAtlasParameter:
    public java.lang.String inputDirectory
com.badlogic.gdx.assets.loaders.TileMapRendererLoader$TileMapParameter:
    41:47:public TileMapRendererLoader$TileMapParameter(java.lang.String,int,int)
    49:56:public TileMapRendererLoader$TileMapParameter(java.lang.String,int,int,float,float)
com.badlogic.gdx.assets.loaders.resolvers.ExternalFileHandleResolver
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution
com.badlogic.gdx.audio.AudioDevice
com.badlogic.gdx.audio.AudioRecorder
com.badlogic.gdx.audio.Music:
    public abstract void pause()
    public abstract void stop()
    public abstract boolean isLooping()
    public abstract float getPosition()
com.badlogic.gdx.audio.Sound:
    public abstract long play()
    public abstract long play(float,float,float)
    public abstract long loop()
    public abstract long loop(float)
    public abstract long loop(float,float,float)
    public abstract void stop()
    public abstract void stop(long)
    public abstract void setLooping(long,boolean)
    public abstract void setPitch(long,float)
    public abstract void setVolume(long,float)
    public abstract void setPan(long,float,float)
com.badlogic.gdx.backends.android.AndroidApplication:
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard
    81:84:public void initialize(com.badlogic.gdx.ApplicationListener,boolean)
    97:120:public void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
    123:126:protected android.widget.FrameLayout$LayoutParams createLayoutParams()
    148:150:public android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,boolean)
    273:273:public int getVersion()
    295:298:public com.badlogic.gdx.utils.Clipboard getClipboard()
    319:325:public void exit()
    336:339:public void debug(java.lang.String,java.lang.String,java.lang.Throwable)
    348:349:public void log(java.lang.String,java.lang.String,java.lang.Exception)
    353:354:public void error(java.lang.String,java.lang.String)
    363:364:public void setLogLevel(int)
com.badlogic.gdx.backends.android.AndroidApplication$1
com.badlogic.gdx.backends.android.AndroidAudio:
    77:77:public com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean)
    144:144:public com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean)
com.badlogic.gdx.backends.android.AndroidAudioDevice
com.badlogic.gdx.backends.android.AndroidAudioRecorder
com.badlogic.gdx.backends.android.AndroidClipboard
com.badlogic.gdx.backends.android.AndroidFileHandle:
    52:54:public com.badlogic.gdx.files.FileHandle sibling(java.lang.String)
    95:116:public com.badlogic.gdx.files.FileHandle[] list(java.lang.String)
    159:159:public long lastModified()
com.badlogic.gdx.backends.android.AndroidFiles:
    33:36:public AndroidFiles(android.content.res.AssetManager)
    45:45:public com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType)
    60:60:public com.badlogic.gdx.files.FileHandle external(java.lang.String)
    65:65:public com.badlogic.gdx.files.FileHandle absolute(java.lang.String)
    70:71:public com.badlogic.gdx.files.FileHandle local(java.lang.String)
    81:81:public boolean isExternalStorageAvailable()
    86:86:public java.lang.String getLocalStoragePath()
    91:91:public boolean isLocalStorageAvailable()
com.badlogic.gdx.backends.android.AndroidGL10:
    36:37:public final void glActiveTexture(int)
    41:42:public final void glAlphaFunc(int,float)
    61:62:public final void glClearColor(float,float,float,float)
    66:67:public final void glClearDepthf(float)
    71:72:public final void glClearStencil(int)
    81:82:public final void glColor4f(float,float,float,float)
    86:87:public final void glColorMask(boolean,boolean,boolean,boolean)
    103:104:public final void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    108:109:public final void glCopyTexImage2D(int,int,int,int,int,int,int,int)
    113:114:public final void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)
    118:119:public final void glCullFace(int)
    128:129:public final void glDepthFunc(int)
    138:139:public final void glDepthRangef(float,float)
    173:174:public final void glFinish()
    178:179:public final void glFlush()
    183:184:public final void glFogf(int,float)
    188:189:public final void glFogfv(int,java.nio.FloatBuffer)
    193:194:public final void glFrontFace(int)
    198:199:public final void glFrustumf(float,float,float,float,float,float)
    208:208:public final int glGetError()
    213:214:public final void glGetIntegerv(int,java.nio.IntBuffer)
    223:224:public final void glHint(int,int)
    228:229:public final void glLightModelf(int,float)
    233:234:public final void glLightModelfv(int,java.nio.FloatBuffer)
    238:239:public final void glLightf(int,int,float)
    243:244:public final void glLightfv(int,int,java.nio.FloatBuffer)
    248:249:public final void glLineWidth(float)
    258:259:public final void glLoadMatrixf(java.nio.FloatBuffer)
    263:264:public final void glLogicOp(int)
    268:269:public final void glMaterialf(int,int,float)
    273:274:public final void glMaterialfv(int,int,java.nio.FloatBuffer)
    283:284:public final void glMultMatrixf(java.nio.FloatBuffer)
    288:289:public final void glMultiTexCoord4f(int,float,float,float,float)
    293:294:public final void glNormal3f(float,float,float)
    303:304:public final void glOrthof(float,float,float,float,float,float)
    313:314:public final void glPointSize(float)
    318:319:public final void glPolygonOffset(float,float)
    323:324:public final void glPopMatrix()
    328:329:public final void glPushMatrix()
    338:339:public final void glRotatef(float,float,float,float)
    343:344:public final void glSampleCoverage(float,boolean)
    348:349:public final void glScalef(float,float,float)
    358:359:public final void glShadeModel(int)
    363:364:public final void glStencilFunc(int,int,int)
    368:369:public final void glStencilMask(int)
    373:374:public final void glStencilOp(int,int,int)
    383:384:public final void glTexEnvf(int,int,float)
    388:389:public final void glTexEnvfv(int,int,java.nio.FloatBuffer)
    405:406:public final void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    410:411:public final void glTranslatef(float,float,float)
    420:421:public final void glViewport(int,int,int,int)
    425:426:public final void glDeleteTextures(int,int[],int)
    430:431:public final void glFogfv(int,float[],int)
    435:436:public final void glGenTextures(int,int[],int)
    440:441:public final void glGetIntegerv(int,int[],int)
    445:446:public final void glLightModelfv(int,float[],int)
    450:451:public final void glLightfv(int,int,float[],int)
    460:461:public final void glMaterialfv(int,int,float[],int)
    465:466:public final void glMultMatrixf(float[],int)
    470:471:public final void glTexEnvfv(int,int,float[],int)
    476:476:public void glPolygonMode(int,int)
com.badlogic.gdx.backends.android.AndroidGL11:
    55:56:public void glClipPlanef(int,java.nio.FloatBuffer)
    60:61:public void glColor4ub(byte,byte,byte,byte)
    75:76:public void glGetBooleanv(int,java.nio.IntBuffer)
    80:81:public void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    85:86:public void glGetClipPlanef(int,java.nio.FloatBuffer)
    90:91:public void glGetFloatv(int,java.nio.FloatBuffer)
    95:96:public void glGetLightfv(int,int,java.nio.FloatBuffer)
    100:101:public void glGetMaterialfv(int,int,java.nio.FloatBuffer)
    105:106:public void glGetPointerv(int,java.nio.Buffer[])
    110:111:public void glGetTexEnviv(int,int,java.nio.IntBuffer)
    115:116:public void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    120:121:public void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    125:125:public boolean glIsBuffer(int)
    130:130:public boolean glIsEnabled(int)
    135:135:public boolean glIsTexture(int)
    140:141:public void glPointParameterf(int,float)
    145:146:public void glPointParameterfv(int,java.nio.FloatBuffer)
    150:151:public void glPointSizePointerOES(int,int,java.nio.Buffer)
    155:156:public void glTexEnvi(int,int,int)
    160:161:public void glTexEnviv(int,int,java.nio.IntBuffer)
    165:166:public void glTexParameterfv(int,int,java.nio.FloatBuffer)
    170:171:public void glTexParameteri(int,int,int)
    175:176:public void glTexParameteriv(int,int,java.nio.IntBuffer)
    180:181:public void glClipPlanef(int,float[],int)
    185:186:public void glDeleteBuffers(int,int[],int)
    190:191:public void glGenBuffers(int,int[],int)
    195:196:public void glGetBooleanv(int,boolean[],int)
    200:201:public void glGetBufferParameteriv(int,int,int[],int)
    205:206:public void glGetClipPlanef(int,float[],int)
    210:211:public void glGetFloatv(int,float[],int)
    215:216:public void glGetLightfv(int,int,float[],int)
    220:221:public void glGetMaterialfv(int,int,float[],int)
    225:226:public void glGetTexEnviv(int,int,int[],int)
    230:231:public void glGetTexParameterfv(int,int,float[],int)
    235:236:public void glGetTexParameteriv(int,int,int[],int)
    240:241:public void glPointParameterfv(int,float[],int)
    245:246:public void glTexEnviv(int,int,int[],int)
    250:251:public void glTexParameterfv(int,int,float[],int)
    255:256:public void glTexParameteriv(int,int,int[],int)
com.badlogic.gdx.backends.android.AndroidGL20:
    public native void glActiveTexture(int)
    public native void glBindAttribLocation(int,int,java.lang.String)
    public native void glBlendColor(float,float,float,float)
    public native void glBlendEquation(int)
    public native void glBlendEquationSeparate(int,int)
    public native void glBlendFuncSeparate(int,int,int,int)
    public native void glClearColor(float,float,float,float)
    public native void glClearDepthf(float)
    public native void glClearStencil(int)
    public native void glColorMask(boolean,boolean,boolean,boolean)
    public native void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    public native void glCopyTexImage2D(int,int,int,int,int,int,int,int)
    public native void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)
    public native void glCullFace(int)
    public native void glDepthFunc(int)
    public native void glDepthRangef(float,float)
    public native void glDetachShader(int,int)
    public native void glFinish()
    public native void glFlush()
    public native void glFrontFace(int)
    public native void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer)
    public native void glGetBooleanv(int,java.nio.Buffer)
    public native void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    public native int glGetError()
    public native void glGetFloatv(int,java.nio.FloatBuffer)
    public native void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)
    public native void glGetIntegerv(int,java.nio.IntBuffer)
    public native void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)
    public native void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)
    public native void glGetShaderSource(int,int,java.nio.Buffer,java.lang.String)
    public native void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    public native void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    public native void glGetUniformfv(int,int,java.nio.FloatBuffer)
    public native void glGetUniformiv(int,int,java.nio.IntBuffer)
    public native void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)
    public native void glGetVertexAttribiv(int,int,java.nio.IntBuffer)
    public native void glGetVertexAttribPointerv(int,int,java.nio.Buffer)
    public native void glHint(int,int)
    public native boolean glIsBuffer(int)
    public native boolean glIsEnabled(int)
    public native boolean glIsFramebuffer(int)
    public native boolean glIsProgram(int)
    public native boolean glIsRenderbuffer(int)
    public native boolean glIsShader(int)
    public native boolean glIsTexture(int)
    public native void glLineWidth(float)
    public native void glPolygonOffset(float,float)
    public native void glReleaseShaderCompiler()
    public native void glSampleCoverage(float,boolean)
    public native void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)
    public native void glStencilFunc(int,int,int)
    public native void glStencilFuncSeparate(int,int,int,int)
    public native void glStencilMask(int)
    public native void glStencilMaskSeparate(int,int)
    public native void glStencilOp(int,int,int)
    public native void glStencilOpSeparate(int,int,int,int)
    public native void glTexParameterfv(int,int,java.nio.FloatBuffer)
    public native void glTexParameteri(int,int,int)
    public native void glTexParameteriv(int,int,java.nio.IntBuffer)
    public native void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    public native void glUniform1f(int,float)
    public native void glUniform1fv(int,int,java.nio.FloatBuffer)
    public native void glUniform1iv(int,int,java.nio.IntBuffer)
    public native void glUniform2f(int,float,float)
    public native void glUniform2fv(int,int,java.nio.FloatBuffer)
    public native void glUniform2i(int,int,int)
    public native void glUniform2iv(int,int,java.nio.IntBuffer)
    public native void glUniform3f(int,float,float,float)
    public native void glUniform3fv(int,int,java.nio.FloatBuffer)
    public native void glUniform3i(int,int,int,int)
    public native void glUniform3iv(int,int,java.nio.IntBuffer)
    public native void glUniform4f(int,float,float,float,float)
    public native void glUniform4fv(int,int,java.nio.FloatBuffer)
    public native void glUniform4i(int,int,int,int,int)
    public native void glUniform4iv(int,int,java.nio.IntBuffer)
    public native void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)
    public native void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)
    public native void glValidateProgram(int)
    public native void glVertexAttrib1f(int,float)
    public native void glVertexAttrib1fv(int,java.nio.FloatBuffer)
    public native void glVertexAttrib2f(int,float,float)
    public native void glVertexAttrib2fv(int,java.nio.FloatBuffer)
    public native void glVertexAttrib3f(int,float,float,float)
    public native void glVertexAttrib3fv(int,java.nio.FloatBuffer)
    public native void glVertexAttrib4f(int,float,float,float,float)
    public native void glVertexAttrib4fv(int,java.nio.FloatBuffer)
    public native void glViewport(int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGLU:
    27:28:public void gluLookAt(com.badlogic.gdx.graphics.GL10,float,float,float,float,float,float,float,float,float)
    32:33:public void gluOrtho2D(com.badlogic.gdx.graphics.GL10,float,float,float,float)
    37:38:public void gluPerspective(com.badlogic.gdx.graphics.GL10,float,float,float,float)
    43:45:public boolean gluProject(float,float,float,float[],int,float[],int,int[],int,float[],int)
    51:53:public boolean gluUnProject(float,float,float,float[],int,float[],int,int[],int,float[],int)
com.badlogic.gdx.backends.android.AndroidGraphics:
    199:199:public com.badlogic.gdx.graphics.GL10 getGL10()
    239:239:private static boolean isPowerOfTwo(int)
    481:481:public float getRawDeltaTime()
    487:487:public com.badlogic.gdx.Graphics$GraphicsType getType()
    515:515:public com.badlogic.gdx.graphics.GLCommon getGLCommon()
    520:520:public float getPpiX()
    525:525:public float getPpiY()
    530:530:public float getPpcX()
    535:535:public float getPpcY()
    540:540:public float getDensity()
    545:545:public com.badlogic.gdx.graphics.GLU getGLU()
    550:550:public boolean supportsDisplayModeChange()
    555:555:public boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode)
    560:560:public com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes()
    565:565:public boolean setDisplayMode(int,int,boolean)
    571:571:public void setTitle(java.lang.String)
    588:588:public com.badlogic.gdx.Graphics$BufferFormat getBufferFormat()
    593:593:public void setVSync(boolean)
    626:626:public boolean isFullscreen()
com.badlogic.gdx.backends.android.AndroidInput:
    161:161:public float getAccelerometerX()
    166:166:public float getAccelerometerY()
    171:171:public float getAccelerometerZ()
    176:218:public void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
    221:253:public void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
    257:257:public int getX()
    264:264:public int getY()
    271:271:public int getX(int)
    278:278:public int getY(int)
    291:291:public boolean isKeyPressed(int)
    461:474:public void setOnscreenKeyboardVisible(boolean)
    483:484:public void setCatchMenuKey(boolean)
    488:489:public void vibrate(int)
    493:494:public void vibrate(long[],int)
    498:499:public void cancelVibrate()
    503:503:public boolean justTouched()
    518:524:private void updateOrientation()
    532:533:public void getRotationMatrix(float[])
    537:540:public float getAzimuth()
    545:548:public float getPitch()
    553:556:public float getRoll()
    612:618:public boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral)
    666:666:public com.badlogic.gdx.Input$Orientation getNativeOrientation()
    671:671:public void setCursorCatched(boolean)
    675:675:public boolean isCursorCatched()
    680:680:public int getDeltaX()
    685:685:public int getDeltaX(int)
    690:690:public int getDeltaY()
    695:695:public int getDeltaY(int)
    700:700:public void setCursorPosition(int,int)
com.badlogic.gdx.backends.android.AndroidInput$3
com.badlogic.gdx.backends.android.AndroidInput$3$1
com.badlogic.gdx.backends.android.AndroidInput$3$1$1
com.badlogic.gdx.backends.android.AndroidInput$3$2
com.badlogic.gdx.backends.android.AndroidInput$3$2$1
com.badlogic.gdx.backends.android.AndroidInput$3$3
com.badlogic.gdx.backends.android.AndroidInput$3$3$1
com.badlogic.gdx.backends.android.AndroidInput$4
com.badlogic.gdx.backends.android.AndroidInput$4$1
com.badlogic.gdx.backends.android.AndroidInput$4$1$1
com.badlogic.gdx.backends.android.AndroidInput$4$2
com.badlogic.gdx.backends.android.AndroidInput$4$2$1
com.badlogic.gdx.backends.android.AndroidInput$5
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent:
    static final int KEY_DOWN
    static final int KEY_UP
    static final int KEY_TYPED
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent:
    static final int TOUCH_DOWN
    static final int TOUCH_UP
    static final int TOUCH_DRAGGED
com.badlogic.gdx.backends.android.AndroidMultiTouchHandler:
    95:113:private void logAction(int,int)
com.badlogic.gdx.backends.android.AndroidMusic:
    55:55:public boolean isLooping()
    97:102:public void stop()
    105:105:public float getPosition()
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard:
    android.app.Dialog dialog
    android.widget.TextView textView
    66:83:android.app.Dialog createDialog()
    87:118:public static android.widget.TextView createView(android.content.Context)
    122:168:public void setVisible(boolean)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable
com.badlogic.gdx.backends.android.AndroidPreferences:
    37:39:public void putBoolean(java.lang.String,boolean)
    43:45:public void putInteger(java.lang.String,int)
    49:51:public void putLong(java.lang.String,long)
    55:57:public void putFloat(java.lang.String,float)
    67:75:public void put(java.util.Map)
    79:79:public boolean getBoolean(java.lang.String)
    84:84:public int getInteger(java.lang.String)
    89:89:public long getLong(java.lang.String)
    94:94:public float getFloat(java.lang.String)
    104:104:public boolean getBoolean(java.lang.String,boolean)
    109:109:public int getInteger(java.lang.String,int)
    114:114:public long getLong(java.lang.String,long)
    119:119:public float getFloat(java.lang.String,float)
    124:124:public java.lang.String getString(java.lang.String,java.lang.String)
    129:129:public java.util.Map get()
    134:134:public boolean contains(java.lang.String)
    139:141:public void clear()
    153:155:public void remove(java.lang.String)
com.badlogic.gdx.backends.android.AndroidSound:
    44:44:public long play()
    56:58:public void stop()
    62:63:public void stop(long)
    67:68:public void setPitch(long,float)
    72:73:public void setVolume(long,float)
    77:77:public long loop()
    82:85:public long loop(float)
    90:91:public void setLooping(long,boolean)
    95:105:public void setPan(long,float,float)
    109:119:public long play(float,float,float)
    124:134:public long loop(float,float,float)
com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceView
com.badlogic.gdx.backends.android.surfaceview.EGLLogWrapper
com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$BaseConfigChooser
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$ComponentSizeChooser
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultContextFactory
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultWindowSurfaceFactory
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EglHelper
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThreadManager
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$LogWriter
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$SimpleEGLConfigChooser
com.badlogic.gdx.backends.android.surfaceview.GLDebugHelper
com.badlogic.gdx.backends.android.surfaceview.GLErrorWrapper
com.badlogic.gdx.backends.android.surfaceview.GLException
com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper
com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20:
    private static final boolean DEBUG
    50:54:public GLSurfaceView20(android.content.Context,boolean,int,int,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser:
    188:194:private void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
    197:228:private void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake:
    public static final int RENDERMODE_WHEN_DIRTY
    public static final int RENDERMODE_CONTINUOUSLY
    public static final int DEBUG_CHECK_GL_ERROR
    public static final int DEBUG_LOG_GL_CALLS
    private int mDebugFlags
    169:172:public GLSurfaceViewCupcake(android.content.Context,android.util.AttributeSet,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
    198:199:public void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper)
    207:208:public void setDebugFlags(int)
    213:213:public int getDebugFlags()
    271:272:public void setEGLConfigChooser(boolean)
    309:309:public int getRenderMode()
    382:385:public void queueEvent(java.lang.Runnable)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread:
    757:757:public int getRenderMode()
    822:825:public void queueEvent(java.lang.Runnable)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$LogWriter
com.badlogic.gdx.backends.android.surfaceview.GLWrapperBase
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser:
    private static final int EGL_OPENGL_ES2_BIT
    public static final int EGL_COVERAGE_BUFFERS_NV
    public static final int EGL_COVERAGE_SAMPLES_NV
    private static final java.lang.String TAG
    156:162:private void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
    165:200:private void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)
com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy
com.badlogic.gdx.files.FileHandle:
    52:55:public FileHandle(java.lang.String)
    60:63:public FileHandle(java.io.File)
    142:142:public java.io.BufferedInputStream read(int)
    148:148:public java.io.Reader reader()
    155:157:public java.io.Reader reader(java.lang.String)
    164:164:public java.io.BufferedReader reader(int)
    171:173:public java.io.BufferedReader reader(int,java.lang.String)
    180:180:public java.lang.String readString()
    186:209:public java.lang.String readString(java.lang.String)
    255:271:public int readBytes(byte[],int,int)
    279:287:public java.io.OutputStream write(boolean)
    297:319:public void write(java.io.InputStream,boolean)
    326:326:public java.io.Writer writer(boolean)
    335:347:public java.io.Writer writer(boolean,java.lang.String)
    356:357:public void writeString(java.lang.String,boolean)
    365:377:public void writeString(java.lang.String,boolean,java.lang.String)
    384:395:public void writeBytes(byte[],boolean)
    402:413:public void writeBytes(byte[],int,int,boolean)
    434:450:public com.badlogic.gdx.files.FileHandle[] list(java.lang.String)
    473:474:public com.badlogic.gdx.files.FileHandle sibling(java.lang.String)
    490:493:public void mkdirs()
    511:513:public boolean delete()
    519:521:public boolean deleteDirectory()
    533:547:public void copyTo(com.badlogic.gdx.files.FileHandle)
    553:557:public void moveTo(com.badlogic.gdx.files.FileHandle)
    582:582:public long lastModified()
    591:593:public static com.badlogic.gdx.files.FileHandle tempFile(java.lang.String)
    599:604:public static com.badlogic.gdx.files.FileHandle tempDirectory(java.lang.String)
    609:620:private static boolean deleteDirectory(java.io.File)
    625:630:private static void copyFile(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    633:643:private static void copyDirectory(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.files.FileHandleStream
com.badlogic.gdx.graphics.Camera:
    public abstract void update(boolean)
    96:98:public void normalizeUp()
    133:134:public void translate(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.Color:
    102:107:public com.badlogic.gdx.graphics.Color mul(float)
    115:120:public com.badlogic.gdx.graphics.Color add(com.badlogic.gdx.graphics.Color)
    128:133:public com.badlogic.gdx.graphics.Color sub(com.badlogic.gdx.graphics.Color)
    198:200:public static float toFloatBits(int,int,int,int)
    212:212:public static int toIntBits(int,int,int,int)
    240:240:public static int alpha(float)
    244:244:public static int luminanceAlpha(float,float)
    248:248:public static int rgb565(float,float,float)
    252:252:public static int rgba4444(float,float,float,float)
    256:256:public static int rgb888(float,float,float)
    264:264:public static int rgb565(com.badlogic.gdx.graphics.Color)
    268:268:public static int rgba4444(com.badlogic.gdx.graphics.Color)
    272:272:public static int rgb888(com.badlogic.gdx.graphics.Color)
    276:276:public static int rgba8888(com.badlogic.gdx.graphics.Color)
    285:288:public static void rgb565ToColor(com.badlogic.gdx.graphics.Color,int)
    296:300:public static void rgba4444ToColor(com.badlogic.gdx.graphics.Color,int)
    308:311:public static void rgb888ToColor(com.badlogic.gdx.graphics.Color,int)
    319:323:public static void rgba8888ToColor(com.badlogic.gdx.graphics.Color,int)
    329:329:public com.badlogic.gdx.graphics.Color tmp()
    334:334:public com.badlogic.gdx.graphics.Color cpy()
com.badlogic.gdx.graphics.FPSLogger
com.badlogic.gdx.graphics.GL10:
    public static final int GL_OES_VERSION_1_0
    public static final int GL_OES_read_format
    public static final int GL_OES_compressed_paletted_texture
    public static final int GL_DEPTH_BUFFER_BIT
    public static final int GL_STENCIL_BUFFER_BIT
    public static final int GL_COLOR_BUFFER_BIT
    public static final int GL_FALSE
    public static final int GL_TRUE
    public static final int GL_POINTS
    public static final int GL_LINES
    public static final int GL_LINE_LOOP
    public static final int GL_LINE_STRIP
    public static final int GL_TRIANGLES
    public static final int GL_TRIANGLE_STRIP
    public static final int GL_TRIANGLE_FAN
    public static final int GL_NEVER
    public static final int GL_LESS
    public static final int GL_EQUAL
    public static final int GL_LEQUAL
    public static final int GL_GREATER
    public static final int GL_NOTEQUAL
    public static final int GL_GEQUAL
    public static final int GL_ALWAYS
    public static final int GL_ZERO
    public static final int GL_ONE
    public static final int GL_SRC_COLOR
    public static final int GL_ONE_MINUS_SRC_COLOR
    public static final int GL_SRC_ALPHA
    public static final int GL_ONE_MINUS_SRC_ALPHA
    public static final int GL_DST_ALPHA
    public static final int GL_ONE_MINUS_DST_ALPHA
    public static final int GL_DST_COLOR
    public static final int GL_ONE_MINUS_DST_COLOR
    public static final int GL_SRC_ALPHA_SATURATE
    public static final int GL_FRONT
    public static final int GL_BACK
    public static final int GL_FRONT_AND_BACK
    public static final int GL_FOG
    public static final int GL_LIGHTING
    public static final int GL_TEXTURE_2D
    public static final int GL_CULL_FACE
    public static final int GL_ALPHA_TEST
    public static final int GL_BLEND
    public static final int GL_COLOR_LOGIC_OP
    public static final int GL_DITHER
    public static final int GL_STENCIL_TEST
    public static final int GL_DEPTH_TEST
    public static final int GL_POINT_SMOOTH
    public static final int GL_LINE_SMOOTH
    public static final int GL_SCISSOR_TEST
    public static final int GL_COLOR_MATERIAL
    public static final int GL_NORMALIZE
    public static final int GL_RESCALE_NORMAL
    public static final int GL_POLYGON_OFFSET_FILL
    public static final int GL_VERTEX_ARRAY
    public static final int GL_NORMAL_ARRAY
    public static final int GL_COLOR_ARRAY
    public static final int GL_TEXTURE_COORD_ARRAY
    public static final int GL_MULTISAMPLE
    public static final int GL_SAMPLE_ALPHA_TO_COVERAGE
    public static final int GL_SAMPLE_ALPHA_TO_ONE
    public static final int GL_SAMPLE_COVERAGE
    public static final int GL_NO_ERROR
    public static final int GL_INVALID_ENUM
    public static final int GL_INVALID_VALUE
    public static final int GL_INVALID_OPERATION
    public static final int GL_STACK_OVERFLOW
    public static final int GL_STACK_UNDERFLOW
    public static final int GL_OUT_OF_MEMORY
    public static final int GL_EXP
    public static final int GL_EXP2
    public static final int GL_FOG_DENSITY
    public static final int GL_FOG_START
    public static final int GL_FOG_END
    public static final int GL_FOG_MODE
    public static final int GL_FOG_COLOR
    public static final int GL_CW
    public static final int GL_CCW
    public static final int GL_SMOOTH_POINT_SIZE_RANGE
    public static final int GL_SMOOTH_LINE_WIDTH_RANGE
    public static final int GL_ALIASED_POINT_SIZE_RANGE
    public static final int GL_ALIASED_LINE_WIDTH_RANGE
    public static final int GL_IMPLEMENTATION_COLOR_READ_TYPE_OES
    public static final int GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES
    public static final int GL_MAX_LIGHTS
    public static final int GL_MAX_TEXTURE_SIZE
    public static final int GL_MAX_MODELVIEW_STACK_DEPTH
    public static final int GL_MAX_PROJECTION_STACK_DEPTH
    public static final int GL_MAX_TEXTURE_STACK_DEPTH
    public static final int GL_MAX_VIEWPORT_DIMS
    public static final int GL_MAX_ELEMENTS_VERTICES
    public static final int GL_MAX_ELEMENTS_INDICES
    public static final int GL_MAX_TEXTURE_UNITS
    public static final int GL_NUM_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_SUBPIXEL_BITS
    public static final int GL_RED_BITS
    public static final int GL_GREEN_BITS
    public static final int GL_BLUE_BITS
    public static final int GL_ALPHA_BITS
    public static final int GL_DEPTH_BITS
    public static final int GL_STENCIL_BITS
    public static final int GL_DONT_CARE
    public static final int GL_FASTEST
    public static final int GL_NICEST
    public static final int GL_PERSPECTIVE_CORRECTION_HINT
    public static final int GL_POINT_SMOOTH_HINT
    public static final int GL_LINE_SMOOTH_HINT
    public static final int GL_POLYGON_SMOOTH_HINT
    public static final int GL_FOG_HINT
    public static final int GL_LIGHT_MODEL_AMBIENT
    public static final int GL_LIGHT_MODEL_TWO_SIDE
    public static final int GL_AMBIENT
    public static final int GL_DIFFUSE
    public static final int GL_SPECULAR
    public static final int GL_POSITION
    public static final int GL_SPOT_DIRECTION
    public static final int GL_SPOT_EXPONENT
    public static final int GL_SPOT_CUTOFF
    public static final int GL_CONSTANT_ATTENUATION
    public static final int GL_LINEAR_ATTENUATION
    public static final int GL_QUADRATIC_ATTENUATION
    public static final int GL_BYTE
    public static final int GL_UNSIGNED_BYTE
    public static final int GL_SHORT
    public static final int GL_UNSIGNED_SHORT
    public static final int GL_FLOAT
    public static final int GL_CLEAR
    public static final int GL_AND
    public static final int GL_AND_REVERSE
    public static final int GL_COPY
    public static final int GL_AND_INVERTED
    public static final int GL_NOOP
    public static final int GL_XOR
    public static final int GL_OR
    public static final int GL_NOR
    public static final int GL_EQUIV
    public static final int GL_INVERT
    public static final int GL_OR_REVERSE
    public static final int GL_COPY_INVERTED
    public static final int GL_OR_INVERTED
    public static final int GL_NAND
    public static final int GL_SET
    public static final int GL_EMISSION
    public static final int GL_SHININESS
    public static final int GL_AMBIENT_AND_DIFFUSE
    public static final int GL_MODELVIEW
    public static final int GL_PROJECTION
    public static final int GL_TEXTURE
    public static final int GL_ALPHA
    public static final int GL_RGB
    public static final int GL_RGBA
    public static final int GL_LUMINANCE
    public static final int GL_LUMINANCE_ALPHA
    public static final int GL_UNPACK_ALIGNMENT
    public static final int GL_PACK_ALIGNMENT
    public static final int GL_UNSIGNED_SHORT_4_4_4_4
    public static final int GL_UNSIGNED_SHORT_5_5_5_1
    public static final int GL_UNSIGNED_SHORT_5_6_5
    public static final int GL_FLAT
    public static final int GL_SMOOTH
    public static final int GL_KEEP
    public static final int GL_REPLACE
    public static final int GL_INCR
    public static final int GL_DECR
    public static final int GL_VENDOR
    public static final int GL_RENDERER
    public static final int GL_VERSION
    public static final int GL_EXTENSIONS
    public static final int GL_MODULATE
    public static final int GL_DECAL
    public static final int GL_ADD
    public static final int GL_TEXTURE_ENV_MODE
    public static final int GL_TEXTURE_ENV_COLOR
    public static final int GL_TEXTURE_ENV
    public static final int GL_NEAREST
    public static final int GL_LINEAR
    public static final int GL_NEAREST_MIPMAP_NEAREST
    public static final int GL_LINEAR_MIPMAP_NEAREST
    public static final int GL_NEAREST_MIPMAP_LINEAR
    public static final int GL_LINEAR_MIPMAP_LINEAR
    public static final int GL_TEXTURE_MAG_FILTER
    public static final int GL_TEXTURE_MIN_FILTER
    public static final int GL_TEXTURE_WRAP_S
    public static final int GL_TEXTURE_WRAP_T
    public static final int GL_TEXTURE0
    public static final int GL_TEXTURE1
    public static final int GL_TEXTURE2
    public static final int GL_TEXTURE3
    public static final int GL_TEXTURE4
    public static final int GL_TEXTURE5
    public static final int GL_TEXTURE6
    public static final int GL_TEXTURE7
    public static final int GL_TEXTURE8
    public static final int GL_TEXTURE9
    public static final int GL_TEXTURE10
    public static final int GL_TEXTURE11
    public static final int GL_TEXTURE12
    public static final int GL_TEXTURE13
    public static final int GL_TEXTURE14
    public static final int GL_TEXTURE15
    public static final int GL_TEXTURE16
    public static final int GL_TEXTURE17
    public static final int GL_TEXTURE18
    public static final int GL_TEXTURE19
    public static final int GL_TEXTURE20
    public static final int GL_TEXTURE21
    public static final int GL_TEXTURE22
    public static final int GL_TEXTURE23
    public static final int GL_TEXTURE24
    public static final int GL_TEXTURE25
    public static final int GL_TEXTURE26
    public static final int GL_TEXTURE27
    public static final int GL_TEXTURE28
    public static final int GL_TEXTURE29
    public static final int GL_TEXTURE30
    public static final int GL_TEXTURE31
    public static final int GL_REPEAT
    public static final int GL_CLAMP_TO_EDGE
    public static final int GL_PALETTE4_RGB8_OES
    public static final int GL_PALETTE4_RGBA8_OES
    public static final int GL_PALETTE4_R5_G6_B5_OES
    public static final int GL_PALETTE4_RGBA4_OES
    public static final int GL_PALETTE4_RGB5_A1_OES
    public static final int GL_PALETTE8_RGB8_OES
    public static final int GL_PALETTE8_RGBA8_OES
    public static final int GL_PALETTE8_R5_G6_B5_OES
    public static final int GL_PALETTE8_RGBA4_OES
    public static final int GL_PALETTE8_RGB5_A1_OES
    public static final int GL_LIGHT0
    public static final int GL_LIGHT1
    public static final int GL_LIGHT2
    public static final int GL_LIGHT3
    public static final int GL_LIGHT4
    public static final int GL_LIGHT5
    public static final int GL_LIGHT6
    public static final int GL_LIGHT7
    public static final int GL_POINT
    public static final int GL_LINE
    public static final int GL_FILL
    public abstract void glAlphaFunc(int,float)
    public abstract void glColor4f(float,float,float,float)
    public abstract void glDeleteTextures(int,int[],int)
    public abstract void glFogf(int,float)
    public abstract void glFogfv(int,float[],int)
    public abstract void glFogfv(int,java.nio.FloatBuffer)
    public abstract void glFrustumf(float,float,float,float,float,float)
    public abstract void glGenTextures(int,int[],int)
    public abstract void glGetIntegerv(int,int[],int)
    public abstract void glLightModelf(int,float)
    public abstract void glLightModelfv(int,float[],int)
    public abstract void glLightModelfv(int,java.nio.FloatBuffer)
    public abstract void glLightf(int,int,float)
    public abstract void glLightfv(int,int,float[],int)
    public abstract void glLightfv(int,int,java.nio.FloatBuffer)
    public abstract void glLoadMatrixf(java.nio.FloatBuffer)
    public abstract void glLogicOp(int)
    public abstract void glMaterialf(int,int,float)
    public abstract void glMaterialfv(int,int,float[],int)
    public abstract void glMaterialfv(int,int,java.nio.FloatBuffer)
    public abstract void glMultMatrixf(float[],int)
    public abstract void glMultMatrixf(java.nio.FloatBuffer)
    public abstract void glMultiTexCoord4f(int,float,float,float,float)
    public abstract void glNormal3f(float,float,float)
    public abstract void glOrthof(float,float,float,float,float,float)
    public abstract void glPointSize(float)
    public abstract void glPopMatrix()
    public abstract void glPushMatrix()
    public abstract void glRotatef(float,float,float,float)
    public abstract void glSampleCoverage(float,boolean)
    public abstract void glScalef(float,float,float)
    public abstract void glShadeModel(int)
    public abstract void glTexEnvf(int,int,float)
    public abstract void glTexEnvfv(int,int,float[],int)
    public abstract void glTexEnvfv(int,int,java.nio.FloatBuffer)
    public abstract void glTranslatef(float,float,float)
    public abstract void glPolygonMode(int,int)
com.badlogic.gdx.graphics.GL11:
    public static final int GL_OES_VERSION_1_0
    public static final int GL_MAX_ELEMENTS_VERTICES
    public static final int GL_MAX_ELEMENTS_INDICES
    public static final int GL_POLYGON_SMOOTH_HINT
    public static final int GL_VERSION_ES_CM_1_0
    public static final int GL_VERSION_ES_CL_1_0
    public static final int GL_VERSION_ES_CM_1_1
    public static final int GL_VERSION_ES_CL_1_1
    public static final int GL_CLIP_PLANE0
    public static final int GL_CLIP_PLANE1
    public static final int GL_CLIP_PLANE2
    public static final int GL_CLIP_PLANE3
    public static final int GL_CLIP_PLANE4
    public static final int GL_CLIP_PLANE5
    public static final int GL_CURRENT_COLOR
    public static final int GL_CURRENT_NORMAL
    public static final int GL_CURRENT_TEXTURE_COORDS
    public static final int GL_POINT_SIZE
    public static final int GL_POINT_SIZE_MIN
    public static final int GL_POINT_SIZE_MAX
    public static final int GL_POINT_FADE_THRESHOLD_SIZE
    public static final int GL_POINT_DISTANCE_ATTENUATION
    public static final int GL_LINE_WIDTH
    public static final int GL_CULL_FACE_MODE
    public static final int GL_FRONT_FACE
    public static final int GL_SHADE_MODEL
    public static final int GL_DEPTH_RANGE
    public static final int GL_DEPTH_WRITEMASK
    public static final int GL_DEPTH_CLEAR_VALUE
    public static final int GL_DEPTH_FUNC
    public static final int GL_STENCIL_CLEAR_VALUE
    public static final int GL_STENCIL_FUNC
    public static final int GL_STENCIL_VALUE_MASK
    public static final int GL_STENCIL_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_PASS
    public static final int GL_STENCIL_REF
    public static final int GL_STENCIL_WRITEMASK
    public static final int GL_MATRIX_MODE
    public static final int GL_VIEWPORT
    public static final int GL_MODELVIEW_STACK_DEPTH
    public static final int GL_PROJECTION_STACK_DEPTH
    public static final int GL_TEXTURE_STACK_DEPTH
    public static final int GL_MODELVIEW_MATRIX
    public static final int GL_PROJECTION_MATRIX
    public static final int GL_TEXTURE_MATRIX
    public static final int GL_ALPHA_TEST_FUNC
    public static final int GL_ALPHA_TEST_REF
    public static final int GL_BLEND_DST
    public static final int GL_BLEND_SRC
    public static final int GL_LOGIC_OP_MODE
    public static final int GL_SCISSOR_BOX
    public static final int GL_COLOR_CLEAR_VALUE
    public static final int GL_COLOR_WRITEMASK
    public static final int GL_MAX_CLIP_PLANES
    public static final int GL_POLYGON_OFFSET_UNITS
    public static final int GL_POLYGON_OFFSET_FACTOR
    public static final int GL_TEXTURE_BINDING_2D
    public static final int GL_VERTEX_ARRAY_SIZE
    public static final int GL_VERTEX_ARRAY_TYPE
    public static final int GL_VERTEX_ARRAY_STRIDE
    public static final int GL_NORMAL_ARRAY_TYPE
    public static final int GL_NORMAL_ARRAY_STRIDE
    public static final int GL_COLOR_ARRAY_SIZE
    public static final int GL_COLOR_ARRAY_TYPE
    public static final int GL_COLOR_ARRAY_STRIDE
    public static final int GL_TEXTURE_COORD_ARRAY_SIZE
    public static final int GL_TEXTURE_COORD_ARRAY_TYPE
    public static final int GL_TEXTURE_COORD_ARRAY_STRIDE
    public static final int GL_VERTEX_ARRAY_POINTER
    public static final int GL_NORMAL_ARRAY_POINTER
    public static final int GL_COLOR_ARRAY_POINTER
    public static final int GL_TEXTURE_COORD_ARRAY_POINTER
    public static final int GL_SAMPLE_BUFFERS
    public static final int GL_SAMPLES
    public static final int GL_SAMPLE_COVERAGE_VALUE
    public static final int GL_SAMPLE_COVERAGE_INVERT
    public static final int GL_GENERATE_MIPMAP_HINT
    public static final int GL_GENERATE_MIPMAP
    public static final int GL_ACTIVE_TEXTURE
    public static final int GL_CLIENT_ACTIVE_TEXTURE
    public static final int GL_ARRAY_BUFFER
    public static final int GL_ELEMENT_ARRAY_BUFFER
    public static final int GL_ARRAY_BUFFER_BINDING
    public static final int GL_ELEMENT_ARRAY_BUFFER_BINDING
    public static final int GL_VERTEX_ARRAY_BUFFER_BINDING
    public static final int GL_NORMAL_ARRAY_BUFFER_BINDING
    public static final int GL_COLOR_ARRAY_BUFFER_BINDING
    public static final int GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING
    public static final int GL_STATIC_DRAW
    public static final int GL_DYNAMIC_DRAW
    public static final int GL_BUFFER_SIZE
    public static final int GL_BUFFER_USAGE
    public static final int GL_SUBTRACT
    public static final int GL_COMBINE
    public static final int GL_COMBINE_RGB
    public static final int GL_COMBINE_ALPHA
    public static final int GL_RGB_SCALE
    public static final int GL_ADD_SIGNED
    public static final int GL_INTERPOLATE
    public static final int GL_CONSTANT
    public static final int GL_PRIMARY_COLOR
    public static final int GL_PREVIOUS
    public static final int GL_OPERAND0_RGB
    public static final int GL_OPERAND1_RGB
    public static final int GL_OPERAND2_RGB
    public static final int GL_OPERAND0_ALPHA
    public static final int GL_OPERAND1_ALPHA
    public static final int GL_OPERAND2_ALPHA
    public static final int GL_ALPHA_SCALE
    public static final int GL_SRC0_RGB
    public static final int GL_SRC1_RGB
    public static final int GL_SRC2_RGB
    public static final int GL_SRC0_ALPHA
    public static final int GL_SRC1_ALPHA
    public static final int GL_SRC2_ALPHA
    public static final int GL_DOT3_RGB
    public static final int GL_DOT3_RGBA
    public static final int GL_POINT_SIZE_ARRAY_OES
    public static final int GL_POINT_SIZE_ARRAY_TYPE_OES
    public static final int GL_POINT_SIZE_ARRAY_STRIDE_OES
    public static final int GL_POINT_SIZE_ARRAY_POINTER_OES
    public static final int GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES
    public static final int GL_POINT_SPRITE_OES
    public static final int GL_COORD_REPLACE_OES
    public static final int GL_OES_point_size_array
    public static final int GL_OES_point_sprite
    public abstract void glClipPlanef(int,float[],int)
    public abstract void glClipPlanef(int,java.nio.FloatBuffer)
    public abstract void glGetClipPlanef(int,float[],int)
    public abstract void glGetClipPlanef(int,java.nio.FloatBuffer)
    public abstract void glGetFloatv(int,float[],int)
    public abstract void glGetFloatv(int,java.nio.FloatBuffer)
    public abstract void glGetLightfv(int,int,float[],int)
    public abstract void glGetLightfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetMaterialfv(int,int,float[],int)
    public abstract void glGetMaterialfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetTexParameterfv(int,int,float[],int)
    public abstract void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glPointParameterf(int,float)
    public abstract void glPointParameterfv(int,float[],int)
    public abstract void glPointParameterfv(int,java.nio.FloatBuffer)
    public abstract void glTexParameterfv(int,int,float[],int)
    public abstract void glTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glColor4ub(byte,byte,byte,byte)
    public abstract void glDeleteBuffers(int,int[],int)
    public abstract void glGetBooleanv(int,boolean[],int)
    public abstract void glGetBooleanv(int,java.nio.IntBuffer)
    public abstract void glGetBufferParameteriv(int,int,int[],int)
    public abstract void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGenBuffers(int,int[],int)
    public abstract void glGetPointerv(int,java.nio.Buffer[])
    public abstract void glGetTexEnviv(int,int,int[],int)
    public abstract void glGetTexEnviv(int,int,java.nio.IntBuffer)
    public abstract void glGetTexParameteriv(int,int,int[],int)
    public abstract void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract boolean glIsBuffer(int)
    public abstract boolean glIsEnabled(int)
    public abstract boolean glIsTexture(int)
    public abstract void glTexEnvi(int,int,int)
    public abstract void glTexEnviv(int,int,int[],int)
    public abstract void glTexEnviv(int,int,java.nio.IntBuffer)
    public abstract void glTexParameteri(int,int,int)
    public abstract void glTexParameteriv(int,int,int[],int)
    public abstract void glTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glPointSizePointerOES(int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.GL20:
    public static final int GL_ES_VERSION_2_0
    public static final int GL_DEPTH_BUFFER_BIT
    public static final int GL_STENCIL_BUFFER_BIT
    public static final int GL_COLOR_BUFFER_BIT
    public static final int GL_FALSE
    public static final int GL_TRUE
    public static final int GL_POINTS
    public static final int GL_LINES
    public static final int GL_LINE_LOOP
    public static final int GL_LINE_STRIP
    public static final int GL_TRIANGLES
    public static final int GL_TRIANGLE_STRIP
    public static final int GL_TRIANGLE_FAN
    public static final int GL_ZERO
    public static final int GL_ONE
    public static final int GL_SRC_COLOR
    public static final int GL_ONE_MINUS_SRC_COLOR
    public static final int GL_SRC_ALPHA
    public static final int GL_ONE_MINUS_SRC_ALPHA
    public static final int GL_DST_ALPHA
    public static final int GL_ONE_MINUS_DST_ALPHA
    public static final int GL_DST_COLOR
    public static final int GL_ONE_MINUS_DST_COLOR
    public static final int GL_SRC_ALPHA_SATURATE
    public static final int GL_FUNC_ADD
    public static final int GL_BLEND_EQUATION
    public static final int GL_BLEND_EQUATION_RGB
    public static final int GL_BLEND_EQUATION_ALPHA
    public static final int GL_FUNC_SUBTRACT
    public static final int GL_FUNC_REVERSE_SUBTRACT
    public static final int GL_BLEND_DST_RGB
    public static final int GL_BLEND_SRC_RGB
    public static final int GL_BLEND_DST_ALPHA
    public static final int GL_BLEND_SRC_ALPHA
    public static final int GL_CONSTANT_COLOR
    public static final int GL_ONE_MINUS_CONSTANT_COLOR
    public static final int GL_CONSTANT_ALPHA
    public static final int GL_ONE_MINUS_CONSTANT_ALPHA
    public static final int GL_BLEND_COLOR
    public static final int GL_ARRAY_BUFFER
    public static final int GL_ELEMENT_ARRAY_BUFFER
    public static final int GL_ARRAY_BUFFER_BINDING
    public static final int GL_ELEMENT_ARRAY_BUFFER_BINDING
    public static final int GL_STREAM_DRAW
    public static final int GL_STATIC_DRAW
    public static final int GL_DYNAMIC_DRAW
    public static final int GL_BUFFER_SIZE
    public static final int GL_BUFFER_USAGE
    public static final int GL_CURRENT_VERTEX_ATTRIB
    public static final int GL_FRONT
    public static final int GL_BACK
    public static final int GL_FRONT_AND_BACK
    public static final int GL_TEXTURE_2D
    public static final int GL_CULL_FACE
    public static final int GL_BLEND
    public static final int GL_DITHER
    public static final int GL_STENCIL_TEST
    public static final int GL_DEPTH_TEST
    public static final int GL_SCISSOR_TEST
    public static final int GL_POLYGON_OFFSET_FILL
    public static final int GL_SAMPLE_ALPHA_TO_COVERAGE
    public static final int GL_SAMPLE_COVERAGE
    public static final int GL_NO_ERROR
    public static final int GL_INVALID_ENUM
    public static final int GL_INVALID_VALUE
    public static final int GL_INVALID_OPERATION
    public static final int GL_OUT_OF_MEMORY
    public static final int GL_CW
    public static final int GL_CCW
    public static final int GL_LINE_WIDTH
    public static final int GL_ALIASED_POINT_SIZE_RANGE
    public static final int GL_ALIASED_LINE_WIDTH_RANGE
    public static final int GL_CULL_FACE_MODE
    public static final int GL_FRONT_FACE
    public static final int GL_DEPTH_RANGE
    public static final int GL_DEPTH_WRITEMASK
    public static final int GL_DEPTH_CLEAR_VALUE
    public static final int GL_DEPTH_FUNC
    public static final int GL_STENCIL_CLEAR_VALUE
    public static final int GL_STENCIL_FUNC
    public static final int GL_STENCIL_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_PASS
    public static final int GL_STENCIL_REF
    public static final int GL_STENCIL_VALUE_MASK
    public static final int GL_STENCIL_WRITEMASK
    public static final int GL_STENCIL_BACK_FUNC
    public static final int GL_STENCIL_BACK_FAIL
    public static final int GL_STENCIL_BACK_PASS_DEPTH_FAIL
    public static final int GL_STENCIL_BACK_PASS_DEPTH_PASS
    public static final int GL_STENCIL_BACK_REF
    public static final int GL_STENCIL_BACK_VALUE_MASK
    public static final int GL_STENCIL_BACK_WRITEMASK
    public static final int GL_VIEWPORT
    public static final int GL_SCISSOR_BOX
    public static final int GL_COLOR_CLEAR_VALUE
    public static final int GL_COLOR_WRITEMASK
    public static final int GL_UNPACK_ALIGNMENT
    public static final int GL_PACK_ALIGNMENT
    public static final int GL_MAX_TEXTURE_SIZE
    public static final int GL_MAX_TEXTURE_UNITS
    public static final int GL_MAX_VIEWPORT_DIMS
    public static final int GL_SUBPIXEL_BITS
    public static final int GL_RED_BITS
    public static final int GL_GREEN_BITS
    public static final int GL_BLUE_BITS
    public static final int GL_ALPHA_BITS
    public static final int GL_DEPTH_BITS
    public static final int GL_STENCIL_BITS
    public static final int GL_POLYGON_OFFSET_UNITS
    public static final int GL_POLYGON_OFFSET_FACTOR
    public static final int GL_TEXTURE_BINDING_2D
    public static final int GL_SAMPLE_BUFFERS
    public static final int GL_SAMPLES
    public static final int GL_SAMPLE_COVERAGE_VALUE
    public static final int GL_SAMPLE_COVERAGE_INVERT
    public static final int GL_NUM_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_DONT_CARE
    public static final int GL_FASTEST
    public static final int GL_NICEST
    public static final int GL_GENERATE_MIPMAP_HINT
    public static final int GL_BYTE
    public static final int GL_UNSIGNED_BYTE
    public static final int GL_SHORT
    public static final int GL_UNSIGNED_SHORT
    public static final int GL_INT
    public static final int GL_UNSIGNED_INT
    public static final int GL_FLOAT
    public static final int GL_FIXED
    public static final int GL_DEPTH_COMPONENT
    public static final int GL_ALPHA
    public static final int GL_RGB
    public static final int GL_RGBA
    public static final int GL_LUMINANCE
    public static final int GL_LUMINANCE_ALPHA
    public static final int GL_UNSIGNED_SHORT_4_4_4_4
    public static final int GL_UNSIGNED_SHORT_5_5_5_1
    public static final int GL_UNSIGNED_SHORT_5_6_5
    public static final int GL_FRAGMENT_SHADER
    public static final int GL_VERTEX_SHADER
    public static final int GL_MAX_VERTEX_ATTRIBS
    public static final int GL_MAX_VERTEX_UNIFORM_VECTORS
    public static final int GL_MAX_VARYING_VECTORS
    public static final int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
    public static final int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
    public static final int GL_MAX_TEXTURE_IMAGE_UNITS
    public static final int GL_MAX_FRAGMENT_UNIFORM_VECTORS
    public static final int GL_SHADER_TYPE
    public static final int GL_DELETE_STATUS
    public static final int GL_LINK_STATUS
    public static final int GL_VALIDATE_STATUS
    public static final int GL_ATTACHED_SHADERS
    public static final int GL_ACTIVE_UNIFORMS
    public static final int GL_ACTIVE_UNIFORM_MAX_LENGTH
    public static final int GL_ACTIVE_ATTRIBUTES
    public static final int GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
    public static final int GL_SHADING_LANGUAGE_VERSION
    public static final int GL_CURRENT_PROGRAM
    public static final int GL_NEVER
    public static final int GL_LESS
    public static final int GL_EQUAL
    public static final int GL_LEQUAL
    public static final int GL_GREATER
    public static final int GL_NOTEQUAL
    public static final int GL_GEQUAL
    public static final int GL_ALWAYS
    public static final int GL_KEEP
    public static final int GL_REPLACE
    public static final int GL_INCR
    public static final int GL_DECR
    public static final int GL_INVERT
    public static final int GL_INCR_WRAP
    public static final int GL_DECR_WRAP
    public static final int GL_VENDOR
    public static final int GL_RENDERER
    public static final int GL_VERSION
    public static final int GL_EXTENSIONS
    public static final int GL_NEAREST
    public static final int GL_LINEAR
    public static final int GL_NEAREST_MIPMAP_NEAREST
    public static final int GL_LINEAR_MIPMAP_NEAREST
    public static final int GL_NEAREST_MIPMAP_LINEAR
    public static final int GL_LINEAR_MIPMAP_LINEAR
    public static final int GL_TEXTURE_MAG_FILTER
    public static final int GL_TEXTURE_MIN_FILTER
    public static final int GL_TEXTURE_WRAP_S
    public static final int GL_TEXTURE_WRAP_T
    public static final int GL_TEXTURE
    public static final int GL_TEXTURE_CUBE_MAP
    public static final int GL_TEXTURE_BINDING_CUBE_MAP
    public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_X
    public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_X
    public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_Y
    public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
    public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_Z
    public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
    public static final int GL_MAX_CUBE_MAP_TEXTURE_SIZE
    public static final int GL_TEXTURE0
    public static final int GL_TEXTURE1
    public static final int GL_TEXTURE2
    public static final int GL_TEXTURE3
    public static final int GL_TEXTURE4
    public static final int GL_TEXTURE5
    public static final int GL_TEXTURE6
    public static final int GL_TEXTURE7
    public static final int GL_TEXTURE8
    public static final int GL_TEXTURE9
    public static final int GL_TEXTURE10
    public static final int GL_TEXTURE11
    public static final int GL_TEXTURE12
    public static final int GL_TEXTURE13
    public static final int GL_TEXTURE14
    public static final int GL_TEXTURE15
    public static final int GL_TEXTURE16
    public static final int GL_TEXTURE17
    public static final int GL_TEXTURE18
    public static final int GL_TEXTURE19
    public static final int GL_TEXTURE20
    public static final int GL_TEXTURE21
    public static final int GL_TEXTURE22
    public static final int GL_TEXTURE23
    public static final int GL_TEXTURE24
    public static final int GL_TEXTURE25
    public static final int GL_TEXTURE26
    public static final int GL_TEXTURE27
    public static final int GL_TEXTURE28
    public static final int GL_TEXTURE29
    public static final int GL_TEXTURE30
    public static final int GL_TEXTURE31
    public static final int GL_ACTIVE_TEXTURE
    public static final int GL_REPEAT
    public static final int GL_CLAMP_TO_EDGE
    public static final int GL_MIRRORED_REPEAT
    public static final int GL_FLOAT_VEC2
    public static final int GL_FLOAT_VEC3
    public static final int GL_FLOAT_VEC4
    public static final int GL_INT_VEC2
    public static final int GL_INT_VEC3
    public static final int GL_INT_VEC4
    public static final int GL_BOOL
    public static final int GL_BOOL_VEC2
    public static final int GL_BOOL_VEC3
    public static final int GL_BOOL_VEC4
    public static final int GL_FLOAT_MAT2
    public static final int GL_FLOAT_MAT3
    public static final int GL_FLOAT_MAT4
    public static final int GL_SAMPLER_2D
    public static final int GL_SAMPLER_CUBE
    public static final int GL_VERTEX_ATTRIB_ARRAY_ENABLED
    public static final int GL_VERTEX_ATTRIB_ARRAY_SIZE
    public static final int GL_VERTEX_ATTRIB_ARRAY_STRIDE
    public static final int GL_VERTEX_ATTRIB_ARRAY_TYPE
    public static final int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
    public static final int GL_VERTEX_ATTRIB_ARRAY_POINTER
    public static final int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
    public static final int GL_IMPLEMENTATION_COLOR_READ_TYPE
    public static final int GL_IMPLEMENTATION_COLOR_READ_FORMAT
    public static final int GL_COMPILE_STATUS
    public static final int GL_INFO_LOG_LENGTH
    public static final int GL_SHADER_SOURCE_LENGTH
    public static final int GL_SHADER_COMPILER
    public static final int GL_SHADER_BINARY_FORMATS
    public static final int GL_NUM_SHADER_BINARY_FORMATS
    public static final int GL_LOW_FLOAT
    public static final int GL_MEDIUM_FLOAT
    public static final int GL_HIGH_FLOAT
    public static final int GL_LOW_INT
    public static final int GL_MEDIUM_INT
    public static final int GL_HIGH_INT
    public static final int GL_FRAMEBUFFER
    public static final int GL_RENDERBUFFER
    public static final int GL_RGBA4
    public static final int GL_RGB5_A1
    public static final int GL_RGB565
    public static final int GL_DEPTH_COMPONENT16
    public static final int GL_STENCIL_INDEX
    public static final int GL_STENCIL_INDEX8
    public static final int GL_RENDERBUFFER_WIDTH
    public static final int GL_RENDERBUFFER_HEIGHT
    public static final int GL_RENDERBUFFER_INTERNAL_FORMAT
    public static final int GL_RENDERBUFFER_RED_SIZE
    public static final int GL_RENDERBUFFER_GREEN_SIZE
    public static final int GL_RENDERBUFFER_BLUE_SIZE
    public static final int GL_RENDERBUFFER_ALPHA_SIZE
    public static final int GL_RENDERBUFFER_DEPTH_SIZE
    public static final int GL_RENDERBUFFER_STENCIL_SIZE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
    public static final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
    public static final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
    public static final int GL_COLOR_ATTACHMENT0
    public static final int GL_DEPTH_ATTACHMENT
    public static final int GL_STENCIL_ATTACHMENT
    public static final int GL_NONE
    public static final int GL_FRAMEBUFFER_COMPLETE
    public static final int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
    public static final int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
    public static final int GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS
    public static final int GL_FRAMEBUFFER_UNSUPPORTED
    public static final int GL_FRAMEBUFFER_BINDING
    public static final int GL_RENDERBUFFER_BINDING
    public static final int GL_MAX_RENDERBUFFER_SIZE
    public static final int GL_INVALID_FRAMEBUFFER_OPERATION
    public static final int GL_VERTEX_PROGRAM_POINT_SIZE
    public static final int GL_COVERAGE_BUFFER_BIT_NV
    public abstract void glBindAttribLocation(int,int,java.lang.String)
    public abstract void glBlendColor(float,float,float,float)
    public abstract void glBlendEquation(int)
    public abstract void glBlendEquationSeparate(int,int)
    public abstract void glBlendFuncSeparate(int,int,int,int)
    public abstract void glDetachShader(int,int)
    public abstract void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer)
    public abstract void glGetBooleanv(int,java.nio.Buffer)
    public abstract void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetFloatv(int,java.nio.FloatBuffer)
    public abstract void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)
    public abstract void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)
    public abstract void glGetShaderSource(int,int,java.nio.Buffer,java.lang.String)
    public abstract void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetUniformfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetUniformiv(int,int,java.nio.IntBuffer)
    public abstract void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetVertexAttribiv(int,int,java.nio.IntBuffer)
    public abstract void glGetVertexAttribPointerv(int,int,java.nio.Buffer)
    public abstract boolean glIsBuffer(int)
    public abstract boolean glIsEnabled(int)
    public abstract boolean glIsFramebuffer(int)
    public abstract boolean glIsProgram(int)
    public abstract boolean glIsRenderbuffer(int)
    public abstract boolean glIsShader(int)
    public abstract boolean glIsTexture(int)
    public abstract void glReleaseShaderCompiler()
    public abstract void glSampleCoverage(float,boolean)
    public abstract void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)
    public abstract void glStencilFuncSeparate(int,int,int,int)
    public abstract void glStencilMaskSeparate(int,int)
    public abstract void glStencilOpSeparate(int,int,int,int)
    public abstract void glTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glTexParameteri(int,int,int)
    public abstract void glTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glUniform1f(int,float)
    public abstract void glUniform1fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform1iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform2f(int,float,float)
    public abstract void glUniform2fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform2i(int,int,int)
    public abstract void glUniform2iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform3f(int,float,float,float)
    public abstract void glUniform3fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform3i(int,int,int,int)
    public abstract void glUniform3iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform4f(int,float,float,float,float)
    public abstract void glUniform4fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform4i(int,int,int,int,int)
    public abstract void glUniform4iv(int,int,java.nio.IntBuffer)
    public abstract void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glValidateProgram(int)
    public abstract void glVertexAttrib1f(int,float)
    public abstract void glVertexAttrib1fv(int,java.nio.FloatBuffer)
    public abstract void glVertexAttrib2f(int,float,float)
    public abstract void glVertexAttrib2fv(int,java.nio.FloatBuffer)
    public abstract void glVertexAttrib3f(int,float,float,float)
    public abstract void glVertexAttrib3fv(int,java.nio.FloatBuffer)
    public abstract void glVertexAttrib4f(int,float,float,float,float)
    public abstract void glVertexAttrib4fv(int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GLCommon:
    public static final int GL_GENERATE_MIPMAP
    public static final int GL_TEXTURE_MAX_ANISOTROPY_EXT
    public static final int GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
    public abstract void glActiveTexture(int)
    public abstract void glClearColor(float,float,float,float)
    public abstract void glClearDepthf(float)
    public abstract void glClearStencil(int)
    public abstract void glColorMask(boolean,boolean,boolean,boolean)
    public abstract void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    public abstract void glCopyTexImage2D(int,int,int,int,int,int,int,int)
    public abstract void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)
    public abstract void glCullFace(int)
    public abstract void glDepthFunc(int)
    public abstract void glDepthRangef(float,float)
    public abstract void glFinish()
    public abstract void glFlush()
    public abstract void glFrontFace(int)
    public abstract int glGetError()
    public abstract void glGetIntegerv(int,java.nio.IntBuffer)
    public abstract void glHint(int,int)
    public abstract void glLineWidth(float)
    public abstract void glPolygonOffset(float,float)
    public abstract void glStencilFunc(int,int,int)
    public abstract void glStencilMask(int)
    public abstract void glStencilOp(int,int,int)
    public abstract void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    public abstract void glViewport(int,int,int,int)
com.badlogic.gdx.graphics.GLU:
    public abstract void gluLookAt(com.badlogic.gdx.graphics.GL10,float,float,float,float,float,float,float,float,float)
    public abstract void gluOrtho2D(com.badlogic.gdx.graphics.GL10,float,float,float,float)
    public abstract void gluPerspective(com.badlogic.gdx.graphics.GL10,float,float,float,float)
    public abstract boolean gluProject(float,float,float,float[],int,float[],int,int[],int,float[],int)
    public abstract boolean gluUnProject(float,float,float,float[],int,float[],int,int[],int,float[],int)
com.badlogic.gdx.graphics.Mesh:
    111:123:public Mesh(boolean,int,int,com.badlogic.gdx.graphics.VertexAttributes)
    157:158:public void setVertices(float[])
    173:180:public void getVertices(float[])
    195:196:public void setIndices(short[],int,int)
    201:208:public void getIndices(short[])
    222:222:public int getMaxVertices()
    227:227:public int getMaxIndices()
    232:232:public int getVertexSize()
    294:295:public void render(int)
    447:449:public com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox()
    457:487:public void calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    538:573:public void scale(float,float,float)
com.badlogic.gdx.graphics.OrthographicCamera:
    40:45:public OrthographicCamera(float,float)
    53:59:public OrthographicCamera(float,float,float)
    62:82:public void findDirectionForIsoView(float,float,int)
    85:96:private float calculateAngle(float)
    100:105:private com.badlogic.gdx.math.Vector3 calculateDirection(float)
    124:135:public void update(boolean)
    141:142:public void setToOrtho(boolean)
    150:158:public void setToOrtho(boolean,float,float)
    163:164:public void rotate(float)
    170:171:public void translate(float,float)
    176:177:public void translate(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.graphics.PerspectiveCamera:
    38:43:public PerspectiveCamera(float,float,float)
    61:72:public void update(boolean)
com.badlogic.gdx.graphics.Pixmap:
    106:107:public static void setFilter(com.badlogic.gdx.graphics.Pixmap$Filter)
    123:129:public Pixmap(byte[],int,int)
    146:148:public Pixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap)
    153:154:public void setColor(int)
    169:170:public void setColor(com.badlogic.gdx.graphics.Color)
    191:192:public void drawLine(int,int,int,int)
    202:203:public void drawRectangle(int,int,int,int)
    211:212:public void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int)
    253:254:public void fillRectangle(int,int,int,int)
    262:263:public void drawCircle(int,int,int)
    271:272:public void fillCircle(int,int,int)
    280:280:public int getPixel(int,int)
    305:306:public void drawPixel(int,int)
    314:315:public void drawPixel(int,int,int)
com.badlogic.gdx.graphics.Pixmap$Filter
com.badlogic.gdx.graphics.PixmapIO:
    35:35:public PixmapIO()
    41:42:public static void writeCIM(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
    55:59:public static void writePNG(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.PixmapIO$CIM:
    private static final int BUFFER_SIZE
    62:62:private PixmapIO$CIM()
    68:107:public static void write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.PixmapIO$PNG
com.badlogic.gdx.graphics.Texture:
    118:119:public Texture(java.lang.String)
    122:123:public Texture(com.badlogic.gdx.files.FileHandle)
    142:143:public Texture(com.badlogic.gdx.graphics.Pixmap,boolean)
    146:147:public Texture(com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap$Format,boolean)
    243:245:public void bind(int)
    254:259:public void draw(com.badlogic.gdx.graphics.Pixmap,int,int)
    293:293:public boolean isManaged()
    337:338:public static void setEnforcePotImages(boolean)
    417:418:public static void setAssetManager(com.badlogic.gdx.assets.AssetManager)
    433:433:public static int getNumManagedTextures()
com.badlogic.gdx.graphics.TextureDict
com.badlogic.gdx.graphics.TextureRef
com.badlogic.gdx.graphics.VertexAttribute:
    51:51:public static com.badlogic.gdx.graphics.VertexAttribute Position()
    55:55:public static com.badlogic.gdx.graphics.VertexAttribute TexCoords(int)
    59:59:public static com.badlogic.gdx.graphics.VertexAttribute Normal()
    63:63:public static com.badlogic.gdx.graphics.VertexAttribute Color()
    67:67:public static com.badlogic.gdx.graphics.VertexAttribute ColorUnpacked()
com.badlogic.gdx.graphics.VertexAttributes$Usage
com.badlogic.gdx.graphics.g2d.Animation
com.badlogic.gdx.graphics.g2d.BitmapFont:
    private static final int LOG2_PAGE_SIZE
    private static final int PAGE_SIZE
    private static final int PAGES
    270:272:public BitmapFont(boolean)
    547:547:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float)
    558:610:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    617:617:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence)
    623:623:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
    668:668:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getMultiLineBounds(java.lang.CharSequence)
    674:687:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getMultiLineBounds(java.lang.CharSequence,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
    695:695:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getWrappedBounds(java.lang.CharSequence,float)
    702:744:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getWrappedBounds(java.lang.CharSequence,float,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
    753:790:public void computeGlyphAdvancesAndPositions(java.lang.CharSequence,com.badlogic.gdx.utils.FloatArray,com.badlogic.gdx.utils.FloatArray)
    796:825:public int computeVisibleGlyphs(java.lang.CharSequence,int,int,float)
    829:830:public void setColor(float)
    837:839:public void setColor(float,float,float,float)
    844:850:public com.badlogic.gdx.graphics.Color getColor()
    854:863:public void setScale(float,float)
    870:871:public void setScale(float)
    875:876:public void scale(float)
    879:879:public float getScaleX()
    883:883:public float getScaleY()
    887:887:public com.badlogic.gdx.graphics.g2d.TextureRegion getRegion()
    892:892:public float getLineHeight()
    897:897:public float getSpaceWidth()
    902:902:public float getXHeight()
    908:908:public float getCapHeight()
    913:913:public float getAscent()
    919:919:public float getDescent()
    924:924:public boolean isFlipped()
    935:947:public void setFixedWidthGlyphs(java.lang.CharSequence)
    952:952:public boolean containsCharacter(char)
    958:959:public void setUseIntegerPositions(boolean)
    963:963:public boolean usesIntegerPositions()
    967:967:public com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData getData()
    1003:1010:static boolean isWhitespace(char)
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData:
    255:255:public com.badlogic.gdx.files.FileHandle getFontFile()
com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds:
    1021:1023:public BitmapFont$TextBounds(com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
    1026:1028:public void set(com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
com.badlogic.gdx.graphics.g2d.BitmapFontCache
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap:
    public static final int GDX2D_FORMAT_ALPHA
    public static final int GDX2D_FORMAT_LUMINANCE_ALPHA
    public static final int GDX2D_FORMAT_RGB888
    public static final int GDX2D_FORMAT_RGBA8888
    public static final int GDX2D_FORMAT_RGB565
    public static final int GDX2D_FORMAT_RGBA4444
    public static final int GDX2D_SCALE_NEAREST
    public static final int GDX2D_SCALE_LINEAR
    public static final int GDX2D_BLEND_NONE
    public static final int GDX2D_BLEND_SRC_OVER
    65:82:public Gdx2DPixmap(java.io.InputStream,int)
    94:100:public Gdx2DPixmap(java.nio.ByteBuffer,long[])
    111:112:public void setPixel(int,int,int)
    115:115:public int getPixel(int,int)
    119:120:public void drawLine(int,int,int,int,int)
    123:124:public void drawRect(int,int,int,int,int)
    127:128:public void drawCircle(int,int,int,int)
    131:132:public void fillRect(int,int,int,int,int)
    135:136:public void fillCircle(int,int,int,int)
    149:151:public static com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(java.io.InputStream,int)
    157:159:public static com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(int,int,int)
    217:231:public java.lang.String getFormatString()
    private static native void setPixel(long,int,int,int)
    private static native int getPixel(long,int,int)
    private static native void drawLine(long,int,int,int,int,int)
    private static native void drawRect(long,int,int,int,int,int)
    private static native void drawCircle(long,int,int,int,int)
    private static native void fillRect(long,int,int,int,int,int)
    private static native void fillCircle(long,int,int,int,int)
com.badlogic.gdx.graphics.g2d.NinePatch:
    public static final int TOP_LEFT
    public static final int TOP_CENTER
    public static final int TOP_RIGHT
    public static final int MIDDLE_LEFT
    public static final int MIDDLE_CENTER
    public static final int MIDDLE_RIGHT
    public static final int BOTTOM_LEFT
    public static final int BOTTOM_CENTER
    public static final int BOTTOM_RIGHT
    46:47:public NinePatch(com.badlogic.gdx.graphics.Texture,int,int,int,int)
    94:96:public NinePatch(com.badlogic.gdx.graphics.Texture,com.badlogic.gdx.graphics.Color)
    99:100:public NinePatch(com.badlogic.gdx.graphics.Texture)
    103:105:public NinePatch(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.graphics.Color)
    116:148:public varargs NinePatch(com.badlogic.gdx.graphics.g2d.TextureRegion[])
    151:152:public NinePatch(com.badlogic.gdx.graphics.g2d.NinePatch)
    308:309:public void setColor(com.badlogic.gdx.graphics.Color)
    312:312:public com.badlogic.gdx.graphics.Color getColor()
    320:321:public void setLeftWidth(float)
    328:329:public void setRightWidth(float)
    336:337:public void setTopHeight(float)
    344:345:public void setBottomHeight(float)
    348:348:public float getMiddleWidth()
    352:353:public void setMiddleWidth(float)
    356:356:public float getMiddleHeight()
    360:361:public void setMiddleHeight(float)
com.badlogic.gdx.graphics.g2d.ParticleEffect
com.badlogic.gdx.graphics.g2d.ParticleEffectPool
com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect
com.badlogic.gdx.graphics.g2d.ParticleEmitter
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$1
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$ParticleBox2D
com.badlogic.gdx.graphics.g2d.PixmapPacker
com.badlogic.gdx.graphics.g2d.PixmapPacker$1
com.badlogic.gdx.graphics.g2d.PixmapPacker$2
com.badlogic.gdx.graphics.g2d.PixmapPacker$ManagedPixmapTextureData
com.badlogic.gdx.graphics.g2d.PixmapPacker$Node
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page
com.badlogic.gdx.graphics.g2d.PolygonRegion
com.badlogic.gdx.graphics.g2d.PolygonSprite
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch
com.badlogic.gdx.graphics.g2d.Sprite:
    static final int VERTEX_SIZE
    static final int SPRITE_SIZE
    private com.badlogic.gdx.math.Rectangle bounds
    56:57:public Sprite(com.badlogic.gdx.graphics.Texture)
    63:64:public Sprite(com.badlogic.gdx.graphics.Texture,int,int)
    69:76:public Sprite(com.badlogic.gdx.graphics.Texture,int,int,int,int)
    90:95:public Sprite(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int)
    189:190:public void setX(float)
    196:197:public void setY(float)
    202:211:public void translateX(float)
    216:225:public void translateY(float)
    269:274:public void setColor(float)
    290:292:public void rotate(float)
    327:330:public void setScale(float)
    340:343:public void scale(float)
    420:448:public com.badlogic.gdx.math.Rectangle getBoundingRectangle()
    532:535:public void setU(float)
    538:541:public void setV(float)
    544:547:public void setU2(float)
    550:553:public void setV2(float)
    577:598:public void scroll(float,float)
com.badlogic.gdx.graphics.g2d.SpriteBatch:
    public static final int X1
    public static final int Y1
    public static final int C1
    public static final int U1
    public static final int V1
    public static final int X2
    public static final int Y2
    public static final int C2
    public static final int U2
    public static final int V2
    public static final int X3
    public static final int Y3
    public static final int C3
    public static final int U3
    public static final int V3
    public static final int X4
    public static final int Y4
    public static final int C4
    public static final int U4
    public static final int V4
    148:149:public SpriteBatch(int,int)
    288:289:public void setColor(com.badlogic.gdx.graphics.Color)
    338:458:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean)
    477:525:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean)
    538:574:public void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int)
    625:657:public void draw(com.badlogic.gdx.graphics.Texture,float,float)
    661:698:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float)
    901:1027:public void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean)
    1071:1073:public void disableBlending()
    1077:1079:public void enableBlending()
    1086:1089:public void setBlendFunction(int,int)
    1102:1102:public com.badlogic.gdx.math.Matrix4 getProjectionMatrix()
    1182:1197:public void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.g2d.SpriteCache:
    private boolean drawing
    132:133:public void setColor(com.badlogic.gdx.graphics.Color)
    137:139:public void setColor(float,float,float,float)
    144:145:public void setColor(float)
    148:154:public com.badlogic.gdx.graphics.Color getColor()
    170:179:public void beginCache(int)
    229:231:public void clear()
    253:301:public void add(com.badlogic.gdx.graphics.Texture,float,float)
    306:354:public void add(com.badlogic.gdx.graphics.Texture,float,float,int,int,float,float,float,float,float)
    358:412:public void add(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int)
    418:483:public void add(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean)
    631:632:public void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float)
    636:688:public void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float)
    695:818:public void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float)
    822:833:public void add(com.badlogic.gdx.graphics.g2d.Sprite)
    837:871:public void begin()
    875:889:public void end()
    893:918:public void draw(int)
    924:959:public void draw(int,int,int)
    968:968:public com.badlogic.gdx.math.Matrix4 getProjectionMatrix()
    972:974:public void setProjectionMatrix(com.badlogic.gdx.math.Matrix4)
    977:977:public com.badlogic.gdx.math.Matrix4 getTransformMatrix()
    981:983:public void setTransformMatrix(com.badlogic.gdx.math.Matrix4)
    1039:1040:public void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.g2d.TextureAtlas:
    196:197:public TextureAtlas(java.lang.String)
    201:202:public TextureAtlas(com.badlogic.gdx.files.FileHandle)
    207:208:public TextureAtlas(com.badlogic.gdx.files.FileHandle,boolean)
    211:212:public TextureAtlas(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    260:267:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.Texture,int,int,int,int)
    272:272:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.g2d.TextureRegion)
    294:300:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String,int)
    318:321:public com.badlogic.gdx.utils.Array createSprites()
    339:345:public com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String,int)
    353:358:public com.badlogic.gdx.utils.Array createSprites(java.lang.String)
    379:387:public com.badlogic.gdx.graphics.g2d.NinePatch createPatch(java.lang.String)
    392:392:public java.util.Set getTextures()
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite:
    634:634:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion getAtlasRegion()
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData:
    185:185:public com.badlogic.gdx.utils.Array getRegions()
com.badlogic.gdx.graphics.g2d.TextureRegion:
    44:47:public TextureRegion(com.badlogic.gdx.graphics.Texture,int,int)
    56:59:public TextureRegion(com.badlogic.gdx.graphics.Texture,float,float,float,float)
    62:64:public TextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion)
    75:77:public void setRegion(com.badlogic.gdx.graphics.Texture)
    115:116:public void setTexture(com.badlogic.gdx.graphics.Texture)
    123:125:public void setU(float)
    132:134:public void setV(float)
    141:143:public void setU2(float)
    150:152:public void setV2(float)
    159:160:public void setRegionX(int)
    167:168:public void setRegionY(int)
    176:177:public void setRegionWidth(int)
    185:186:public void setRegionHeight(int)
    202:202:public boolean isFlipX()
    206:206:public boolean isFlipY()
    214:224:public void scroll(float,float)
    234:251:public com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(int,int)
    263:264:public static com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(com.badlogic.gdx.graphics.Texture,int,int)
com.badlogic.gdx.graphics.g2d.tiled.SimpleTileAtlas:
    33:62:public SimpleTileAtlas(com.badlogic.gdx.graphics.g2d.tiled.TiledMap,com.badlogic.gdx.files.FileHandle)
    67:76:private static com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(com.badlogic.gdx.graphics.Texture,int,int,int,int,int,int)
com.badlogic.gdx.graphics.g2d.tiled.TileAtlas:
    128:131:public void flipRegions(boolean,boolean)
com.badlogic.gdx.graphics.g2d.tiled.TileMapRenderer:
    private static final int FLAG_FLIP_X
    private static final int FLAG_FLIP_Y
    private static final int FLAG_ROTATE
    private static final int MASK_CLEAR
    private int initialRow
    private int initialCol
    private int currentRow
    private int currentCol
    private int lastRow
    private int lastCol
    private int currentLayer
    105:106:public TileMapRenderer(com.badlogic.gdx.graphics.g2d.tiled.TiledMap,com.badlogic.gdx.graphics.g2d.tiled.TileAtlas,int,int,com.badlogic.gdx.graphics.glutils.ShaderProgram)
    153:156:public TileMapRenderer(int[][][],com.badlogic.gdx.graphics.g2d.tiled.TileAtlas,int,int,float,float,com.badlogic.gdx.utils.IntArray,int,int)
    174:177:public TileMapRenderer(int[][][],com.badlogic.gdx.graphics.g2d.tiled.TileAtlas,int,int,float,float,com.badlogic.gdx.utils.IntArray,int,int,com.badlogic.gdx.graphics.glutils.ShaderProgram)
    347:348:public void render()
    353:354:public void render(float,float,float,float)
    359:360:public void render(com.badlogic.gdx.graphics.OrthographicCamera)
    369:373:public void render(com.badlogic.gdx.graphics.OrthographicCamera,int[])
    393:430:public void render(float,float,float,float,int[])
    433:443:private int getLayerWidthInBlocks(int,int)
    447:457:private int getLayerHeightInBlocks(int)
    461:461:public com.badlogic.gdx.math.Matrix4 getProjectionMatrix()
    465:465:public com.badlogic.gdx.math.Matrix4 getTransformMatrix()
    471:471:public int getRow(int)
    477:477:public int getCol(int)
    483:483:public int getInitialRow()
    489:489:public int getInitialCol()
    495:495:public int getLastRow()
    501:501:public int getLastCol()
    505:505:public float getUnitsPerTileX()
    509:509:public float getUnitsPerTileY()
    513:513:public int getMapHeightUnits()
    517:517:public int getMapWidthUnits()
    521:525:private static int parseIntWithDefault(java.lang.String,int)
    536:536:public com.badlogic.gdx.graphics.g2d.tiled.TiledMap getMap()
    540:540:public com.badlogic.gdx.graphics.g2d.tiled.TileAtlas getAtlas()
com.badlogic.gdx.graphics.g2d.tiled.TileSet:
    32:40:protected TileSet(com.badlogic.gdx.graphics.g2d.tiled.TileSet)
com.badlogic.gdx.graphics.g2d.tiled.TiledLayer:
    39:40:public int getWidth()
    44:44:public int getHeight()
com.badlogic.gdx.graphics.g2d.tiled.TiledLoader:
    32:32:public TiledLoader()
    37:37:public static com.badlogic.gdx.graphics.g2d.tiled.TiledMap createMap(java.lang.String)
com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Polyline:
    76:77:public TiledLoader$1$Polyline(com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1)
com.badlogic.gdx.graphics.g2d.tiled.TiledMap:
    63:69:public java.lang.String getTileProperty(int,java.lang.String)
com.badlogic.gdx.graphics.g3d.Animation
com.badlogic.gdx.graphics.g3d.Animator
com.badlogic.gdx.graphics.g3d.Animator$WrapMode
com.badlogic.gdx.graphics.g3d.Material
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$1
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$2
com.badlogic.gdx.graphics.g3d.decals.Decal
com.badlogic.gdx.graphics.g3d.decals.DecalBatch
com.badlogic.gdx.graphics.g3d.decals.DecalBatch$1
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial
com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.GroupPlug
com.badlogic.gdx.graphics.g3d.decals.GroupStrategy
com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator
com.badlogic.gdx.graphics.g3d.keyframed.Keyframe
com.badlogic.gdx.graphics.g3d.keyframed.KeyframeAnimation
com.badlogic.gdx.graphics.g3d.keyframed.KeyframeAnimator
com.badlogic.gdx.graphics.g3d.keyframed.KeyframedModel
com.badlogic.gdx.graphics.g3d.loaders.ModelLoaderOld
com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animation
com.badlogic.gdx.graphics.g3d.loaders.md5.MD5AnimationInfo
com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animator
com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Jni
com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Joints
com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Loader
com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Loader$BaseFrameJoint
com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Loader$JointInfo
com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Mesh
com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Model
com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Quaternion
com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Renderer
com.badlogic.gdx.graphics.g3d.loaders.obj.ObjLoader
com.badlogic.gdx.graphics.glutils.ETC1:
    35:35:public ETC1()
    147:150:public static com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImage(com.badlogic.gdx.graphics.Pixmap)
    158:161:public static com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImagePKM(com.badlogic.gdx.graphics.Pixmap)
    public static native int getCompressedDataSize(int,int)
    public static native void formatHeader(java.nio.ByteBuffer,int,int,int)
    private static native java.nio.ByteBuffer encodeImage(java.nio.ByteBuffer,int,int,int,int)
    private static native java.nio.ByteBuffer encodeImagePKM(java.nio.ByteBuffer,int,int,int,int)
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data:
    52:57:public ETC1$ETC1Data(int,int,java.nio.ByteBuffer,int)
    95:119:public void write(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.glutils.ETC1TextureData:
    38:39:public ETC1TextureData(com.badlogic.gdx.files.FileHandle)
    46:49:public ETC1TextureData(com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data,boolean)
com.badlogic.gdx.graphics.glutils.FileTextureData:
    128:128:public com.badlogic.gdx.files.FileHandle getFileHandle()
com.badlogic.gdx.graphics.glutils.FrameBuffer:
    84:92:public FrameBuffer(com.badlogic.gdx.graphics.Pixmap$Format,int,int,boolean)
    179:181:public void begin()
    185:187:public void end()
    190:194:private void addManagedFrameBuffer(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.FrameBuffer)
    226:226:public com.badlogic.gdx.graphics.Texture getColorBufferTexture()
    231:231:public int getHeight()
    236:236:public int getWidth()
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer:
    public abstract void texCoord(float,float)
    public abstract void normal(float,float,float)
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer10:
    136:140:public void normal(float,float,float)
    146:149:public void texCoord(float,float)
    216:217:public void vertex(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20:
    49:51:public ImmediateModeRenderer20(boolean,boolean,int)
    90:93:public void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    105:109:public void texCoord(float,float)
    112:116:public void normal(float,float,float)
com.badlogic.gdx.graphics.glutils.IndexBufferObject:
    84:93:public IndexBufferObject(int)
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData:
    84:93:public IndexBufferObjectSubData(int)
com.badlogic.gdx.graphics.glutils.MipMapGenerator:
    29:29:public MipMapGenerator()
    33:34:public static void setUseHardwareMipMap(boolean)
com.badlogic.gdx.graphics.glutils.ShaderProgram:
    public static final java.lang.String POSITION_ATTRIBUTE
    public static final java.lang.String NORMAL_ATTRIBUTE
    public static final java.lang.String COLOR_ATTRIBUTE
    public static final java.lang.String TEXCOORD_ATTRIBUTE
    public static final java.lang.String TANGENT_ATTRIBUTE
    public static final java.lang.String BINORMAL_ATTRIBUTE
    165:166:public ShaderProgram(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    302:305:public void setUniformi(int,int)
    314:318:public void setUniformi(java.lang.String,int,int)
    321:324:public void setUniformi(int,int,int)
    334:338:public void setUniformi(java.lang.String,int,int,int)
    341:344:public void setUniformi(int,int,int,int)
    355:359:public void setUniformi(java.lang.String,int,int,int,int)
    362:365:public void setUniformi(int,int,int,int,int)
    373:377:public void setUniformf(java.lang.String,float)
    380:383:public void setUniformf(int,float)
    392:396:public void setUniformf(java.lang.String,float,float)
    399:402:public void setUniformf(int,float,float)
    412:416:public void setUniformf(java.lang.String,float,float,float)
    419:422:public void setUniformf(int,float,float,float)
    433:437:public void setUniformf(java.lang.String,float,float,float,float)
    440:443:public void setUniformf(int,float,float,float,float)
    446:453:public void setUniform1fv(java.lang.String,float[],int,int)
    456:462:public void setUniform1fv(int,float[],int,int)
    465:472:public void setUniform2fv(java.lang.String,float[],int,int)
    475:481:public void setUniform2fv(int,float[],int,int)
    484:491:public void setUniform3fv(java.lang.String,float[],int,int)
    494:500:public void setUniform3fv(int,float[],int,int)
    503:510:public void setUniform4fv(java.lang.String,float[],int,int)
    513:519:public void setUniform4fv(int,float[],int,int)
    546:547:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4)
    550:555:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4,boolean)
    563:564:public void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3)
    573:580:public void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3,boolean)
    583:584:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3)
    587:593:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3,boolean)
    601:602:public void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector2)
    605:606:public void setUniformf(int,com.badlogic.gdx.math.Vector2)
    614:615:public void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector3)
    618:619:public void setUniformf(int,com.badlogic.gdx.math.Vector3)
    627:628:public void setUniformf(java.lang.String,com.badlogic.gdx.graphics.Color)
    631:632:public void setUniformf(int,com.badlogic.gdx.graphics.Color)
    653:656:public void setVertexAttribute(int,int,int,boolean,int,java.nio.Buffer)
    677:680:public void setVertexAttribute(int,int,int,boolean,int,int)
    719:722:public void disableVertexAttribute(int)
    736:739:public void enableVertexAttribute(int)
    793:796:public void setAttributef(java.lang.String,float,float,float,float)
    799:804:private void ensureBufferCapacity(int)
    850:850:public boolean hasAttribute(java.lang.String)
    856:860:public int getAttributeType(java.lang.String)
    866:870:public int getAttributeLocation(java.lang.String)
    876:876:public boolean hasUniform(java.lang.String)
    882:886:public int getUniformType(java.lang.String)
    892:896:public int getUniformLocation(java.lang.String)
    901:901:public java.lang.String[] getAttributes()
    906:906:public java.lang.String[] getUniforms()
com.badlogic.gdx.graphics.glutils.ShapeRenderer:
    148:150:public void setTransformMatrix(com.badlogic.gdx.math.Matrix4)
    182:184:public void scale(float,float,float)
    210:215:public void point(float,float,float)
    225:232:public void line(float,float,float,float,float,float)
    240:248:public void line(float,float,float,float)
    257:279:public void rect(float,float,float,float)
    314:330:public void filledRect(float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color)
    339:403:public void box(float,float,float,float,float,float)
    407:408:public void circle(float,float,float)
    411:437:public void circle(float,float,float,int)
    479:496:public void triangle(float,float,float,float,float,float)
    531:534:public void flush()
com.badlogic.gdx.graphics.glutils.VertexArray:
    88:88:public int getNumMaxVertices()
com.badlogic.gdx.graphics.glutils.VertexBufferObject:
    115:115:public int getNumMaxVertices()
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData:
    123:123:public int getNumMaxVertices()
    297:299:public void invalidate()
    326:326:public int getBufferHandle()
com.badlogic.gdx.graphics.glutils.VertexData:
    public abstract int getNumMaxVertices()
com.badlogic.gdx.input.GestureDetector:
    210:210:public boolean isLongPressed()
    216:217:public boolean isLongPressed(float)
    225:228:public void reset()
    231:232:public void setTapSquareSize(int)
    236:237:public void setTapCountInterval(float)
    240:241:public void setLongPressSeconds(float)
    244:245:public void setMaxFlingDelay(long)
com.badlogic.gdx.input.GestureDetector$VelocityTracker:
    396:402:private float getSum(float[],int)
com.badlogic.gdx.input.RemoteInput
com.badlogic.gdx.input.RemoteInput$EventTrigger
com.badlogic.gdx.input.RemoteInput$KeyEvent
com.badlogic.gdx.input.RemoteInput$TouchEvent
com.badlogic.gdx.input.RemoteSender
com.badlogic.gdx.math.CatmullRomSpline
com.badlogic.gdx.math.Circle
com.badlogic.gdx.math.EarClippingTriangulator
com.badlogic.gdx.math.Frustum:
    79:83:public boolean pointInFrustum(com.badlogic.gdx.math.Vector3)
    92:95:public boolean sphereInFrustum(com.badlogic.gdx.math.Vector3,float)
    104:107:public boolean sphereInFrustumWithoutNearFar(com.badlogic.gdx.math.Vector3,float)
    115:127:public boolean boundsInFrustum(com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.math.Interpolation:
    25:25:public float apply(float,float,float)
com.badlogic.gdx.math.Interpolation$Bounce:
    238:239:public Interpolation$Bounce(float[],float[])
com.badlogic.gdx.math.Interpolation$BounceIn:
    328:329:public Interpolation$BounceIn(float[],float[])
com.badlogic.gdx.math.Interpolation$BounceOut:
    260:265:public Interpolation$BounceOut(float[],float[])
com.badlogic.gdx.math.Intersector:
    30:30:public Intersector()
    39:57:public static float getLowestPositiveRoot(float,float,float)
    73:85:public static boolean isPointInTriangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    89:95:public static boolean intersectSegmentPlane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)
    102:102:public static int pointLineSide(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    108:108:public static int pointLineSide(float,float,float,float,float,float)
    117:129:public static boolean isPointInPolygon(java.util.List,com.badlogic.gdx.math.Vector2)
    140:157:public static float distanceLinePoint(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    162:163:public static float distanceLinePoint(float,float,float,float,float,float)
    174:190:public static boolean intersectSegmentCircle(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float)
    204:215:public static float intersectSegmentCircleDisplace(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2)
    252:264:public static float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)
    279:302:public static boolean intersectRayTriangle(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    318:358:public static boolean intersectRaySphere(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3)
    370:406:public static boolean intersectRayBoundsFast(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox)
    422:446:public static boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],com.badlogic.gdx.math.Vector3)
    459:487:public static boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],short[],int,com.badlogic.gdx.math.Vector3)
    498:520:public static boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,java.util.List,com.badlogic.gdx.math.Vector3)
    530:530:public static boolean intersectRectangles(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle)
    543:555:public static boolean intersectLines(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    567:579:public static boolean intersectSegments(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    583:583:static float det(float,float,float,float)
    587:587:static double detd(double,double,double,double)
    591:595:public static boolean overlapCircles(com.badlogic.gdx.math.Circle,com.badlogic.gdx.math.Circle)
    599:602:public static boolean overlapRectangles(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle)
    606:626:public static boolean overlapCircleRectangle(com.badlogic.gdx.math.Circle,com.badlogic.gdx.math.Rectangle)
    635:635:public static boolean overlapConvexPolygons(com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Polygon)
    646:646:public static boolean overlapConvexPolygons(com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Intersector$MinimumTranslationVector)
    657:796:public static boolean overlapConvexPolygons(float[],float[],com.badlogic.gdx.math.Intersector$MinimumTranslationVector)
    819:914:public static void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)
    919:929:private static void splitEdge(float[],int,int,int,com.badlogic.gdx.math.Plane,float[],int)
    932:941:public static void main(java.lang.String[])
com.badlogic.gdx.math.Intersector$MinimumTranslationVector
com.badlogic.gdx.math.Intersector$SplitTriangle
com.badlogic.gdx.math.MathUtils:
    public static final float PI
    private static final int SIN_BITS
    private static final int SIN_MASK
    private static final int SIN_COUNT
    private static final float radFull
    private static final float degFull
    private static final float radToIndex
    private static final float degToIndex
    public static final float radiansToDegrees
    public static final float radDeg
    public static final float degreesToRadians
    public static final float degRad
    private static final int ATAN2_BITS
    private static final int ATAN2_BITS2
    private static final int ATAN2_MASK
    private static final int ATAN2_COUNT
    private static final int BIG_ENOUGH_INT
    private static final double BIG_ENOUGH_FLOOR
    private static final double CEIL
    private static final double BIG_ENOUGH_ROUND
    27:27:public MathUtils()
    109:128:public static final float atan2(float,float)
    142:142:public static final int random(int,int)
    146:146:public static final boolean randomBoolean()
    150:150:public static final float random()
    155:155:public static final float random(float)
    160:160:public static final float random(float,float)
    184:186:public static int clamp(int,int,int)
    190:192:public static short clamp(short,short,short)
    213:213:public static int floor(float)
    219:219:public static int floorPositive(float)
    231:231:public static int ceilPositive(float)
    237:237:public static int round(float)
    242:242:public static int roundPositive(float)
com.badlogic.gdx.math.MathUtils$Atan2
com.badlogic.gdx.math.MathUtils$Cos:
    54:54:private MathUtils$Cos()
com.badlogic.gdx.math.MathUtils$Sin:
    44:44:private MathUtils$Sin()
com.badlogic.gdx.math.Matrix3:
    private static final long serialVersionUID
    private static final float DEGREE_TO_RAD
    public static final int M00
    public static final int M01
    public static final int M02
    public static final int M10
    public static final int M11
    public static final int M12
    public static final int M20
    public static final int M21
    public static final int M22
    45:47:public Matrix3(com.badlogic.gdx.math.Matrix3)
    101:117:public com.badlogic.gdx.math.Matrix3 setToRotation(float)
    144:156:public com.badlogic.gdx.math.Matrix3 setToTranslation(com.badlogic.gdx.math.Vector2)
    165:174:public com.badlogic.gdx.math.Matrix3 setToScaling(float,float)
    184:184:public float det()
    191:216:public com.badlogic.gdx.math.Matrix3 inv()
    231:240:public com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix4)
    247:249:public com.badlogic.gdx.math.Matrix3 trn(com.badlogic.gdx.math.Vector2)
    266:268:public com.badlogic.gdx.math.Matrix3 trn(com.badlogic.gdx.math.Vector3)
    297:309:public com.badlogic.gdx.math.Matrix3 translate(com.badlogic.gdx.math.Vector2)
    361:371:public com.badlogic.gdx.math.Matrix3 scale(com.badlogic.gdx.math.Vector2)
    377:377:public float[] getValues()
    384:386:public com.badlogic.gdx.math.Matrix3 scl(float)
    393:395:public com.badlogic.gdx.math.Matrix3 scl(com.badlogic.gdx.math.Vector2)
    402:404:public com.badlogic.gdx.math.Matrix3 scl(com.badlogic.gdx.math.Vector3)
    411:423:public com.badlogic.gdx.math.Matrix3 transpose()
com.badlogic.gdx.math.Matrix4:
    private static final long serialVersionUID
    public static final int M00
    public static final int M01
    public static final int M02
    public static final int M03
    public static final int M10
    public static final int M11
    public static final int M12
    public static final int M13
    public static final int M20
    public static final int M21
    public static final int M22
    public static final int M23
    public static final int M30
    public static final int M31
    public static final int M32
    public static final int M33
    62:64:public Matrix4(com.badlogic.gdx.math.Matrix4)
    69:71:public Matrix4(float[])
    75:77:public Matrix4(com.badlogic.gdx.math.Quaternion)
    141:157:public com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    162:162:public com.badlogic.gdx.math.Matrix4 cpy()
    170:173:public com.badlogic.gdx.math.Matrix4 trn(com.badlogic.gdx.math.Vector3)
    183:186:public com.badlogic.gdx.math.Matrix4 trn(float,float,float)
    191:191:public float[] getValues()
    211:227:public com.badlogic.gdx.math.Matrix4 tra()
    258:317:public com.badlogic.gdx.math.Matrix4 inv()
    322:322:public float det()
    389:390:public com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float,float,float)
    455:459:public com.badlogic.gdx.math.Matrix4 setToTranslation(float,float,float)
    469:476:public com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    491:498:public com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(float,float,float,float,float,float)
    522:524:public com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float)
    535:536:public com.badlogic.gdx.math.Matrix4 setFromEulerAngles(float,float,float)
    544:548:public com.badlogic.gdx.math.Matrix4 setToScaling(com.badlogic.gdx.math.Vector3)
    558:562:public com.badlogic.gdx.math.Matrix4 setToScaling(float,float,float)
    616:621:public com.badlogic.gdx.math.Matrix4 setToWorld(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    635:637:public void lerp(com.badlogic.gdx.math.Matrix4,float)
    662:665:public com.badlogic.gdx.math.Matrix4 scl(com.badlogic.gdx.math.Vector3)
    669:672:public com.badlogic.gdx.math.Matrix4 scl(float,float,float)
    676:679:public com.badlogic.gdx.math.Matrix4 scl(float)
    683:686:public void getTranslation(com.badlogic.gdx.math.Vector3)
    689:690:public void getRotation(com.badlogic.gdx.math.Quaternion)
    694:697:public com.badlogic.gdx.math.Matrix4 toNormalMatrix()
    public static native void mulVec(float[],float[])
    public static native void mulVec(float[],float[],int,int,int)
    public static native void prj(float[],float[])
    public static native void rot(float[],float[])
    public static native void rot(float[],float[],int,int,int)
    public static native float det(float[])
    960:960:public com.badlogic.gdx.math.Matrix4 translate(com.badlogic.gdx.math.Vector3)
    998:1000:public com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Vector3,float)
    1034:1052:public com.badlogic.gdx.math.Matrix4 scale(float,float,float)
com.badlogic.gdx.math.Plane:
    private static final long serialVersionUID
    51:54:public Plane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    87:89:public void set(float,float,float,float)
    96:96:public float distance(com.badlogic.gdx.math.Vector3)
    123:130:public com.badlogic.gdx.math.Plane$PlaneSide testPoint(float,float,float)
    139:140:public boolean isFrontFacing(com.badlogic.gdx.math.Vector3)
    158:160:public void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    163:165:public void set(float,float,float,float,float,float)
    171:173:public void set(com.badlogic.gdx.math.Plane)
com.badlogic.gdx.math.Polygon
com.badlogic.gdx.math.Quaternion:
    private static final long serialVersionUID
    private static final float NORMALIZATION_TOLERANCE
    52:54:public Quaternion(com.badlogic.gdx.math.Quaternion)
    60:62:public Quaternion(com.badlogic.gdx.math.Vector3,float)
    82:82:public com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Quaternion)
    99:99:public com.badlogic.gdx.math.Quaternion cpy()
    104:104:public float len()
    118:134:public com.badlogic.gdx.math.Quaternion setEulerAngles(float,float,float)
    160:163:public com.badlogic.gdx.math.Quaternion conjugate()
    171:178:public void transform(com.badlogic.gdx.math.Vector3)
    185:193:public com.badlogic.gdx.math.Quaternion mul(com.badlogic.gdx.math.Quaternion)
    201:209:public com.badlogic.gdx.math.Quaternion mulLeft(com.badlogic.gdx.math.Quaternion)
    260:260:public com.badlogic.gdx.math.Quaternion setFromAxis(com.badlogic.gdx.math.Vector3,float)
    271:274:public com.badlogic.gdx.math.Quaternion setFromAxis(float,float,float,float)
    284:284:public com.badlogic.gdx.math.Quaternion setFromMatrix(com.badlogic.gdx.math.Matrix4)
    310:347:public com.badlogic.gdx.math.Quaternion setFromAxes(float,float,float,float,float,float,float,float,float)
    356:394:public com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion,float)
    413:413:public float dot(com.badlogic.gdx.math.Quaternion)
    420:424:public com.badlogic.gdx.math.Quaternion mul(float)
com.badlogic.gdx.math.Rectangle:
    private static final long serialVersionUID
    50:55:public Rectangle(com.badlogic.gdx.math.Rectangle)
    59:59:public float getX()
    65:66:public void setX(float)
    70:70:public float getY()
    76:77:public void setY(float)
    81:81:public float getWidth()
    87:88:public void setWidth(float)
    92:92:public float getHeight()
    98:99:public void setHeight(float)
    104:110:public boolean contains(com.badlogic.gdx.math.Rectangle)
    117:117:public boolean overlaps(com.badlogic.gdx.math.Rectangle)
    137:141:public void set(com.badlogic.gdx.math.Rectangle)
    146:155:public void merge(com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.math.Vector2:
    private static final long serialVersionUID
    55:57:public Vector2(com.badlogic.gdx.math.Vector2)
    61:61:public com.badlogic.gdx.math.Vector2 cpy()
    66:66:public float len()
    71:71:public float len2()
    97:99:public com.badlogic.gdx.math.Vector2 sub(com.badlogic.gdx.math.Vector2)
    105:110:public com.badlogic.gdx.math.Vector2 nor()
    127:129:public com.badlogic.gdx.math.Vector2 add(float,float)
    135:135:public float dot(com.badlogic.gdx.math.Vector2)
    150:152:public com.badlogic.gdx.math.Vector2 mul(float,float)
    167:169:public float dst(float,float)
    175:177:public float dst2(com.badlogic.gdx.math.Vector2)
    184:186:public float dst2(float,float)
    198:200:public com.badlogic.gdx.math.Vector2 sub(float,float)
    209:209:public com.badlogic.gdx.math.Vector2 tmp()
    216:220:public com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Matrix3)
    227:227:public float crs(com.badlogic.gdx.math.Vector2)
    235:235:public float crs(float,float)
    241:243:public float angle()
    249:259:public com.badlogic.gdx.math.Vector2 rotate(float)
    269:271:public com.badlogic.gdx.math.Vector2 lerp(com.badlogic.gdx.math.Vector2,float)
    299:302:public boolean epsilonEquals(com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.math.Vector3:
    private static final long serialVersionUID
    71:73:public Vector3(float[])
    101:101:public com.badlogic.gdx.math.Vector3 set(float[])
    130:130:com.badlogic.gdx.math.Vector3 tmp3()
    155:155:public com.badlogic.gdx.math.Vector3 add(float)
    180:180:public com.badlogic.gdx.math.Vector3 sub(float)
    207:207:public float len2()
    213:213:public boolean idt(com.badlogic.gdx.math.Vector3)
    261:261:public com.badlogic.gdx.math.Vector3 crs(float,float,float)
    292:293:public com.badlogic.gdx.math.Vector3 rot(com.badlogic.gdx.math.Matrix4)
    299:299:public boolean isUnit()
    304:304:public boolean isZero()
    314:316:public com.badlogic.gdx.math.Vector3 lerp(com.badlogic.gdx.math.Vector3,float)
    326:340:public com.badlogic.gdx.math.Vector3 slerp(com.badlogic.gdx.math.Vector3,float)
    355:355:public float dot(float,float,float)
    364:372:public float dst2(com.badlogic.gdx.math.Vector3)
    382:390:public float dst2(float,float,float)
    394:394:public float dst(float,float,float)
    426:430:public boolean epsilonEquals(com.badlogic.gdx.math.Vector3,float)
    436:439:public boolean epsilonEquals(float,float,float,float)
    448:451:public com.badlogic.gdx.math.Vector3 scale(float,float,float)
com.badlogic.gdx.math.WindowedMean:
    83:83:public float getOldest()
    88:88:public float getLatest()
    93:101:public float standardDeviation()
com.badlogic.gdx.math.collision.BoundingBox
com.badlogic.gdx.math.collision.Ray:
    private static final long serialVersionUID
    43:43:public com.badlogic.gdx.math.collision.Ray cpy()
    51:51:public com.badlogic.gdx.math.Vector3 getEndPoint(float)
    61:65:public com.badlogic.gdx.math.collision.Ray mul(com.badlogic.gdx.math.Matrix4)
    79:81:public com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    94:96:public com.badlogic.gdx.math.collision.Ray set(float,float,float,float,float,float)
    105:107:public com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.collision.Ray)
com.badlogic.gdx.math.collision.Segment
com.badlogic.gdx.math.collision.Sphere
com.badlogic.gdx.physics.box2d.Body:
    private final com.badlogic.gdx.physics.box2d.World world
    private final com.badlogic.gdx.physics.box2d.Transform transform
    private final com.badlogic.gdx.math.Vector2 worldCenter
    private final com.badlogic.gdx.math.Vector2 localCenter
    private final com.badlogic.gdx.math.Vector2 linearVelocity
    private final com.badlogic.gdx.physics.box2d.MassData massData
    private final com.badlogic.gdx.math.Vector2 localPoint
    private final com.badlogic.gdx.math.Vector2 worldVector
    public final com.badlogic.gdx.math.Vector2 localPoint2
    public final com.badlogic.gdx.math.Vector2 localVector
    public final com.badlogic.gdx.math.Vector2 linVelWorld
    public final com.badlogic.gdx.math.Vector2 linVelLoc
    53:56:protected Body(com.badlogic.gdx.physics.box2d.World,long)
    60:66:protected void reset(long)
    74:80:public com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.FixtureDef)
    private native long jniCreateFixture(long,long,float,float,float,boolean,short,short,short)
    108:113:public com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.Shape,float)
    private native long jniCreateFixture(long,long,float)
    128:132:public void destroyFixture(com.badlogic.gdx.physics.box2d.Fixture)
    private native void jniDestroyFixture(long,long)
    154:155:public void setTransform(float,float,float)
    166:167:public void setTransform(float,float,float,boolean)
    private native void jniSetTransform(long,float,float,float,boolean)
    182:183:public com.badlogic.gdx.physics.box2d.Transform getTransform()
    private native void jniGetTransform(long,float[])
    228:231:public com.badlogic.gdx.math.Vector2 getWorldCenter()
    private native void jniGetWorldCenter(long,float[])
    245:248:public com.badlogic.gdx.math.Vector2 getLocalCenter()
    private native void jniGetLocalCenter(long,float[])
    260:261:public void setLinearVelocity(com.badlogic.gdx.math.Vector2)
    265:266:public void setLinearVelocity(float,float)
    private native void jniSetLinearVelocity(long,float,float)
    277:280:public com.badlogic.gdx.math.Vector2 getLinearVelocity()
    private native void jniGetLinearVelocity(long,float[])
    292:293:public void setAngularVelocity(float)
    private native void jniSetAngularVelocity(long,float)
    302:302:public float getAngularVelocity()
    private native float jniGetAngularVelocity(long)
    315:316:public void applyForce(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    325:326:public void applyForce(float,float,float,float)
    private native void jniApplyForce(long,float,float,float,float)
    336:337:public void applyForceToCenter(com.badlogic.gdx.math.Vector2)
    343:344:public void applyForceToCenter(float,float)
    private native void jniApplyForceToCenter(long,float,float)
    355:356:public void applyTorque(float)
    private native void jniApplyTorque(long,float)
    368:369:public void applyLinearImpulse(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    378:379:public void applyLinearImpulse(float,float,float,float)
    private native void jniApplyLinearImpulse(long,float,float,float,float)
    389:390:public void applyAngularImpulse(float)
    private native void jniApplyAngularImpulse(long,float)
    400:400:public float getMass()
    private native float jniGetMass(long)
    411:411:public float getInertia()
    private native float jniGetInertia(long)
    424:429:public com.badlogic.gdx.physics.box2d.MassData getMassData()
    private native void jniGetMassData(long,float[])
    446:447:public void setMassData(com.badlogic.gdx.physics.box2d.MassData)
    private native void jniSetMassData(long,float,float,float,float)
    462:463:public void resetMassData()
    private native void jniResetMassData(long)
    476:479:public com.badlogic.gdx.math.Vector2 getWorldPoint(com.badlogic.gdx.math.Vector2)
    private native void jniGetWorldPoint(long,float,float,float[])
    495:498:public com.badlogic.gdx.math.Vector2 getWorldVector(com.badlogic.gdx.math.Vector2)
    private native void jniGetWorldVector(long,float,float,float[])
    514:517:public com.badlogic.gdx.math.Vector2 getLocalPoint(com.badlogic.gdx.math.Vector2)
    private native void jniGetLocalPoint(long,float,float,float[])
    533:536:public com.badlogic.gdx.math.Vector2 getLocalVector(com.badlogic.gdx.math.Vector2)
    private native void jniGetLocalVector(long,float,float,float[])
    552:555:public com.badlogic.gdx.math.Vector2 getLinearVelocityFromWorldPoint(com.badlogic.gdx.math.Vector2)
    private native void jniGetLinearVelocityFromWorldPoint(long,float,float,float[])
    571:574:public com.badlogic.gdx.math.Vector2 getLinearVelocityFromLocalPoint(com.badlogic.gdx.math.Vector2)
    private native void jniGetLinearVelocityFromLocalPoint(long,float,float,float[])
    586:586:public float getLinearDamping()
    private native float jniGetLinearDamping(long)
    596:597:public void setLinearDamping(float)
    private native void jniSetLinearDamping(long,float)
    606:606:public float getAngularDamping()
    private native float jniGetAngularDamping(long)
    616:617:public void setAngularDamping(float)
    private native void jniSetAngularDamping(long,float)
    626:627:public void setType(com.badlogic.gdx.physics.box2d.BodyDef$BodyType)
    private native void jniSetType(long,int)
    651:655:public com.badlogic.gdx.physics.box2d.BodyDef$BodyType getType()
    private native int jniGetType(long)
    665:666:public void setBullet(boolean)
    private native void jniSetBullet(long,boolean)
    675:675:public boolean isBullet()
    private native boolean jniIsBullet(long)
    685:686:public void setSleepingAllowed(boolean)
    private native void jniSetSleepingAllowed(long,boolean)
    695:695:public boolean isSleepingAllowed()
    private native boolean jniIsSleepingAllowed(long)
    706:707:public void setAwake(boolean)
    private native void jniSetAwake(long,boolean)
    717:717:public boolean isAwake()
    private native boolean jniIsAwake(long)
    732:733:public void setActive(boolean)
    private native void jniSetActive(long,boolean)
    742:742:public boolean isActive()
    private native boolean jniIsActive(long)
    752:753:public void setFixedRotation(boolean)
    private native void jniSetFixedRotation(long,boolean)
    762:762:public boolean isFixedRotation()
    private native boolean jniIsFixedRotation(long)
    790:790:public float getGravityScale()
    private native float jniGetGravityScale(long)
    800:801:public void setGravityScale(float)
    private native void jniSetGravityScale(long,float)
    810:810:public com.badlogic.gdx.physics.box2d.World getWorld()
    815:815:public java.lang.Object getUserData()
com.badlogic.gdx.physics.box2d.BodyDef
com.badlogic.gdx.physics.box2d.BodyDef$BodyType
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer
com.badlogic.gdx.physics.box2d.ChainShape
com.badlogic.gdx.physics.box2d.CircleShape
com.badlogic.gdx.physics.box2d.Contact
com.badlogic.gdx.physics.box2d.ContactFilter
com.badlogic.gdx.physics.box2d.ContactImpulse
com.badlogic.gdx.physics.box2d.ContactListener
com.badlogic.gdx.physics.box2d.DestructionListener
com.badlogic.gdx.physics.box2d.EdgeShape
com.badlogic.gdx.physics.box2d.Filter
com.badlogic.gdx.physics.box2d.Fixture:
    private com.badlogic.gdx.physics.box2d.Body body
    protected com.badlogic.gdx.physics.box2d.Shape shape
    private final short[] tmp
    private final com.badlogic.gdx.physics.box2d.Filter filter
    42:45:protected Fixture(com.badlogic.gdx.physics.box2d.Body,long)
    48:52:protected void reset(com.badlogic.gdx.physics.box2d.Body,long)
    57:68:public com.badlogic.gdx.physics.box2d.Shape$Type getType()
    private native int jniGetType(long)
    88:111:public com.badlogic.gdx.physics.box2d.Shape getShape()
    private native long jniGetShape(long)
    121:122:public void setSensor(boolean)
    private native void jniSetSensor(long,boolean)
    132:132:public boolean isSensor()
    private native boolean jniIsSensor(long)
    143:144:public void setFilterData(com.badlogic.gdx.physics.box2d.Filter)
    private native void jniSetFilterData(long,short,short,short)
    160:164:public com.badlogic.gdx.physics.box2d.Filter getFilterData()
    private native void jniGetFilterData(long,short[])
    178:179:public void refilter()
    private native void jniRefilter(long)
    188:188:public com.badlogic.gdx.physics.box2d.Body getBody()
    194:194:public boolean testPoint(com.badlogic.gdx.math.Vector2)
    201:201:public boolean testPoint(float,float)
    private native boolean jniTestPoint(long,float,float)
    236:237:public void setDensity(float)
    private native void jniSetDensity(long,float)
    246:246:public float getDensity()
    private native float jniGetDensity(long)
    256:256:public float getFriction()
    private native float jniGetFriction(long)
    266:267:public void setFriction(float)
    private native void jniSetFriction(long,float)
    276:276:public float getRestitution()
    private native float jniGetRestitution(long)
    286:287:public void setRestitution(float)
    private native void jniSetRestitution(long,float)
    306:306:public java.lang.Object getUserData()
com.badlogic.gdx.physics.box2d.FixtureDef
com.badlogic.gdx.physics.box2d.Joint:
    private final com.badlogic.gdx.physics.box2d.World world
    private final float[] tmp
    private final com.badlogic.gdx.math.Vector2 anchorA
    private final com.badlogic.gdx.math.Vector2 anchorB
    private final com.badlogic.gdx.math.Vector2 reactionForce
    44:47:protected Joint(com.badlogic.gdx.physics.box2d.World,long)
    51:55:public com.badlogic.gdx.physics.box2d.JointDef$JointType getType()
    private native int jniGetType(long)
    65:65:public com.badlogic.gdx.physics.box2d.Body getBodyA()
    private native long jniGetBodyA(long)
    75:75:public com.badlogic.gdx.physics.box2d.Body getBodyB()
    private native long jniGetBodyB(long)
    87:90:public com.badlogic.gdx.math.Vector2 getAnchorA()
    private native void jniGetAnchorA(long,float[])
    104:107:public com.badlogic.gdx.math.Vector2 getAnchorB()
    private native void jniGetAnchorB(long,float[])
    121:124:public com.badlogic.gdx.math.Vector2 getReactionForce(float)
    private native void jniGetReactionForce(long,float,float[])
    136:136:public float getReactionTorque(float)
    private native float jniGetReactionTorque(long,float)
    155:155:public boolean isActive()
    private native boolean jniIsActive(long)
com.badlogic.gdx.physics.box2d.JointDef
com.badlogic.gdx.physics.box2d.JointDef$JointType
com.badlogic.gdx.physics.box2d.JointEdge:
    26:29:protected JointEdge(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Joint)
com.badlogic.gdx.physics.box2d.Manifold
com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint
com.badlogic.gdx.physics.box2d.Manifold$ManifoldType
com.badlogic.gdx.physics.box2d.MassData
com.badlogic.gdx.physics.box2d.PolygonShape
com.badlogic.gdx.physics.box2d.QueryCallback
com.badlogic.gdx.physics.box2d.RayCastCallback
com.badlogic.gdx.physics.box2d.Shape
com.badlogic.gdx.physics.box2d.Shape$Type
com.badlogic.gdx.physics.box2d.Transform
com.badlogic.gdx.physics.box2d.World:
    protected final com.badlogic.gdx.utils.Pool freeFixtures
    protected com.badlogic.gdx.physics.box2d.ContactFilter contactFilter
    protected com.badlogic.gdx.physics.box2d.ContactListener contactListener
    final float[] tmpGravity
    final com.badlogic.gdx.math.Vector2 gravity
    private com.badlogic.gdx.physics.box2d.QueryCallback queryCallback
    private long[] contactAddrs
    private final java.util.ArrayList contacts
    private final java.util.ArrayList freeContacts
    private final com.badlogic.gdx.physics.box2d.Contact contact
    private final com.badlogic.gdx.physics.box2d.Manifold manifold
    private final com.badlogic.gdx.physics.box2d.ContactImpulse impulse
    private com.badlogic.gdx.physics.box2d.RayCastCallback rayCastCallback
    private com.badlogic.gdx.math.Vector2 rayPoint
    private com.badlogic.gdx.math.Vector2 rayNormal
    221:229:public World(com.badlogic.gdx.math.Vector2,boolean)
    private native long newWorld(float,float,boolean)
    251:251:public void setDestructionListener(com.badlogic.gdx.physics.box2d.DestructionListener)
    256:258:public void setContactFilter(com.badlogic.gdx.physics.box2d.ContactFilter)
    private native void setUseDefaultContactFilter(boolean)
    267:268:public void setContactListener(com.badlogic.gdx.physics.box2d.ContactListener)
    273:279:public com.badlogic.gdx.physics.box2d.Body createBody(com.badlogic.gdx.physics.box2d.BodyDef)
    private native long jniCreateBody(long,int,float,float,float,float,float,float,float,float,boolean,boolean,boolean,boolean,boolean,float)
    333:352:public com.badlogic.gdx.physics.box2d.Joint createJoint(com.badlogic.gdx.physics.box2d.JointDef)
    356:411:private long createProperJoint(com.badlogic.gdx.physics.box2d.JointDef)
    private native long jniCreateWheelJoint(long,long,long,boolean,float,float,float,float,float,float,boolean,float,float,float,float)
    private native long jniCreateRopeJoint(long,long,long,boolean,float,float,float,float,float)
    private native long jniCreateDistanceJoint(long,long,long,boolean,float,float,float,float,float,float,float)
    private native long jniCreateFrictionJoint(long,long,long,boolean,float,float,float,float,float,float)
    private native long jniCreateGearJoint(long,long,long,boolean,long,long,float)
    private native long jniCreateMouseJoint(long,long,long,boolean,float,float,float,float,float)
    private native long jniCreatePrismaticJoint(long,long,long,boolean,float,float,float,float,float,float,float,boolean,float,float,boolean,float,float)
    private native long jniCreatePulleyJoint(long,long,long,boolean,float,float,float,float,float,float,float,float,float,float,float)
    private native long jniCreateRevoluteJoint(long,long,long,boolean,float,float,float,float,float,boolean,float,float,boolean,float,float)
    private native long jniCreateWeldJoint(long,long,long,boolean,float,float,float,float,float)
    620:621:public void clearForces()
    private native void jniClearForces(long)
    630:631:public void setWarmStarting(boolean)
    private native void jniSetWarmStarting(long,boolean)
    640:641:public void setContinuousPhysics(boolean)
    private native void jniSetContiousPhysics(long,boolean)
    650:650:public int getProxyCount()
    private native int jniGetProxyCount(long)
    660:660:public int getBodyCount()
    private native int jniGetBodyCount(long)
    670:670:public int getJointCount()
    private native int jniGetJointcount(long)
    680:680:public int getContactCount()
    private native int jniGetContactCount(long)
    690:691:public void setGravity(com.badlogic.gdx.math.Vector2)
    private native void jniSetGravity(long,float,float)
    703:706:public com.badlogic.gdx.math.Vector2 getGravity()
    private native void jniGetGravity(long,float[])
    718:718:public boolean isLocked()
    private native boolean jniIsLocked(long)
    728:729:public void setAutoClearForces(boolean)
    private native void jniSetAutoClearForces(long,boolean)
    738:738:public boolean getAutoClearForces()
    private native boolean jniGetAutoClearForces(long)
    753:755:public void QueryAABB(com.badlogic.gdx.physics.box2d.QueryCallback,float,float,float,float)
    private native void jniQueryAABB(long,float,float,float,float)
    793:814:public java.util.List getContactList()
    819:819:public java.util.Iterator getBodies()
    824:824:public java.util.Iterator getJoints()
    private native void jniGetContactList(long,long[])
    853:864:private boolean contactFilter(long,long)
    873:875:private void beginContact(long)
    878:880:private void endContact(long)
    883:886:private void preSolve(long,long)
    889:892:private void postSolve(long,long)
    895:898:private boolean reportFixture(long)
    public static native void setVelocityThreshold(float)
    public static native float getVelocityThreshold()
    917:919:public void rayCast(com.badlogic.gdx.physics.box2d.RayCastCallback,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    private native void jniRayCast(long,float,float,float,float)
    933:940:private float reportRayFixture(long,float,float,float,float,float)
com.badlogic.gdx.physics.box2d.World$1
com.badlogic.gdx.physics.box2d.World$2
com.badlogic.gdx.physics.box2d.WorldManifold
com.badlogic.gdx.physics.box2d.joints.DistanceJoint
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef
com.badlogic.gdx.physics.box2d.joints.FrictionJoint
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef
com.badlogic.gdx.physics.box2d.joints.GearJoint
com.badlogic.gdx.physics.box2d.joints.GearJointDef
com.badlogic.gdx.physics.box2d.joints.MouseJoint
com.badlogic.gdx.physics.box2d.joints.MouseJointDef
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef
com.badlogic.gdx.physics.box2d.joints.PulleyJoint
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef
com.badlogic.gdx.physics.box2d.joints.RopeJoint
com.badlogic.gdx.physics.box2d.joints.RopeJointDef
com.badlogic.gdx.physics.box2d.joints.WeldJoint
com.badlogic.gdx.physics.box2d.joints.WeldJointDef
com.badlogic.gdx.physics.box2d.joints.WheelJoint
com.badlogic.gdx.physics.box2d.joints.WheelJointDef
com.badlogic.gdx.scenes.scene2d.Action:
    43:43:public com.badlogic.gdx.scenes.scene2d.Actor getActor()
    76:76:public com.badlogic.gdx.utils.Pool getPool()
com.badlogic.gdx.scenes.scene2d.Actor:
    195:195:public boolean removeListener(com.badlogic.gdx.scenes.scene2d.EventListener)
    199:199:public com.badlogic.gdx.utils.Array getListeners()
    210:210:public boolean removeCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener)
    214:214:public com.badlogic.gdx.utils.Array getCaptureListeners()
    223:224:public void removeAction(com.badlogic.gdx.scenes.scene2d.Action)
    227:227:public com.badlogic.gdx.utils.Array getActions()
    261:262:public boolean isAscendantOf(com.badlogic.gdx.scenes.scene2d.Actor)
    271:271:public boolean hasParent()
    300:301:public void setVisible(boolean)
    348:348:public float getTop()
    353:353:public float getRight()
    364:366:public void size(float)
    370:372:public void size(float,float)
    376:380:public void setBounds(float,float,float,float)
    434:436:public void scale(float)
    440:442:public void scale(float,float)
    454:455:public void rotate(float)
    458:459:public void setColor(com.badlogic.gdx.graphics.Color)
    462:463:public void setColor(float,float,float,float)
    471:471:public java.lang.String getName()
    477:478:public void setName(java.lang.String)
    482:483:public void toFront()
    487:488:public void toBack()
    494:504:public void setZIndex(int)
    509:511:public int getZIndex()
    525:533:public com.badlogic.gdx.math.Vector2 localToStageCoordinates(com.badlogic.gdx.math.Vector2)
    539:543:public com.badlogic.gdx.math.Vector2 localToParentCoordinates(com.badlogic.gdx.math.Vector2)
    548:554:public com.badlogic.gdx.math.Vector2 localToAscendantCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.scenes.scene2d.Event:
    44:47:public void cancel()
    91:92:public void setBubbles(boolean)
    116:116:public boolean isCapture()
com.badlogic.gdx.scenes.scene2d.Group:
    225:233:public void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor)
    238:244:public void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor)
    249:258:public void addActorAfter(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor)
    288:298:public com.badlogic.gdx.scenes.scene2d.Actor findActor(java.lang.String)
    310:314:public boolean swapActor(int,int)
    319:323:public boolean swapActor(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor)
    347:353:public com.badlogic.gdx.math.Vector2 localToDescendantCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.scenes.scene2d.InputEvent:
    106:107:public void setScrollAmount(int)
com.badlogic.gdx.scenes.scene2d.Stage:
    72:73:public Stage()
    77:81:public Stage(float,float,boolean)
    158:159:public void act()
    326:343:public boolean mouseMoved(int,int)
    349:357:public boolean scrolled(int)
    417:426:public void removeTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,int,int)
    433:434:public void cancelTouchFocus()
    470:471:public void addAction(com.badlogic.gdx.scenes.scene2d.Action)
    482:482:public boolean addListener(com.badlogic.gdx.scenes.scene2d.EventListener)
    488:488:public boolean removeListener(com.badlogic.gdx.scenes.scene2d.EventListener)
    494:494:public boolean addCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener)
    500:500:public boolean removeCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener)
    505:507:public void clear()
    511:514:public void unfocusAll()
    525:539:public void setKeyboardFocus(com.badlogic.gdx.scenes.scene2d.Actor)
    544:544:public com.badlogic.gdx.scenes.scene2d.Actor getKeyboardFocus()
    569:569:public com.badlogic.gdx.scenes.scene2d.Actor getScrollFocus()
    587:587:public float getGutterWidth()
    593:593:public float getGutterHeight()
    597:597:public com.badlogic.gdx.graphics.g2d.SpriteBatch getSpriteBatch()
    638:642:public com.badlogic.gdx.math.Vector2 stageToScreenCoordinates(com.badlogic.gdx.math.Vector2)
    648:649:public com.badlogic.gdx.math.Vector2 toScreenCoordinates(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.scenes.scene2d.actions.Actions:
    29:29:public Actions()
    39:42:public static com.badlogic.gdx.scenes.scene2d.actions.AddAction add(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Action)
    47:47:public static com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo(float,float)
    64:64:public static com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float)
    68:68:public static com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float,float)
    81:81:public static com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float)
    85:85:public static com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float,float)
    89:93:public static com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float,float,com.badlogic.gdx.math.Interpolation)
    98:98:public static com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float)
    102:102:public static com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float,float)
    106:110:public static com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float,float,com.badlogic.gdx.math.Interpolation)
    115:115:public static com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float)
    132:132:public static com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float)
    136:136:public static com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float,float)
    140:144:public static com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float,float,com.badlogic.gdx.math.Interpolation)
    149:149:public static com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float)
    166:166:public static com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float)
    170:170:public static com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float,float)
    174:178:public static com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float,float,com.badlogic.gdx.math.Interpolation)
    183:183:public static com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color)
    202:202:public static com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float)
    226:230:public static com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeOut(float,com.badlogic.gdx.math.Interpolation)
    240:244:public static com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeIn(float,com.badlogic.gdx.math.Interpolation)
    248:248:public static com.badlogic.gdx.scenes.scene2d.actions.VisibleAction show()
    252:252:public static com.badlogic.gdx.scenes.scene2d.actions.VisibleAction hide()
    256:258:public static com.badlogic.gdx.scenes.scene2d.actions.VisibleAction visible(boolean)
    262:264:public static com.badlogic.gdx.scenes.scene2d.actions.TouchableAction touchable(com.badlogic.gdx.scenes.scene2d.Touchable)
    268:268:public static com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction removeActor()
    272:274:public static com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction removeActor(com.badlogic.gdx.scenes.scene2d.Actor)
    278:280:public static com.badlogic.gdx.scenes.scene2d.actions.DelayAction delay(float)
    284:287:public static com.badlogic.gdx.scenes.scene2d.actions.DelayAction delay(float,com.badlogic.gdx.scenes.scene2d.Action)
    291:293:public static com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action)
    304:308:public static com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    312:317:public static com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    321:327:public static com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    331:334:public static varargs com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action[])
    338:338:public static com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence()
    342:344:public static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action)
    355:359:public static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    363:368:public static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    372:378:public static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    382:385:public static varargs com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action[])
    389:389:public static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel()
    393:396:public static com.badlogic.gdx.scenes.scene2d.actions.RepeatAction repeat(int,com.badlogic.gdx.scenes.scene2d.Action)
    413:415:public static com.badlogic.gdx.scenes.scene2d.actions.LayoutAction layout(boolean)
    419:421:public static com.badlogic.gdx.scenes.scene2d.actions.AfterAction after(com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.AddAction
com.badlogic.gdx.scenes.scene2d.actions.AfterAction
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction:
    44:44:public com.badlogic.gdx.graphics.Color getColor()
    50:51:public void setColor(com.badlogic.gdx.graphics.Color)
    54:54:public float getAlpha()
com.badlogic.gdx.scenes.scene2d.actions.ColorAction:
    52:52:public com.badlogic.gdx.graphics.Color getColor()
    58:59:public void setColor(com.badlogic.gdx.graphics.Color)
    62:62:public com.badlogic.gdx.graphics.Color getEndColor()
com.badlogic.gdx.scenes.scene2d.actions.DelayAction
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction:
    33:33:public com.badlogic.gdx.scenes.scene2d.Action getAction()
com.badlogic.gdx.scenes.scene2d.actions.FloatAction
com.badlogic.gdx.scenes.scene2d.actions.IntAction
com.badlogic.gdx.scenes.scene2d.actions.LayoutAction
com.badlogic.gdx.scenes.scene2d.actions.MoveByAction:
    34:34:public float getAmountX()
    38:39:public void setAmountX(float)
    42:42:public float getAmountY()
    46:47:public void setAmountY(float)
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction:
    40:40:public float getX()
    44:45:public void setX(float)
    48:48:public float getY()
    52:53:public void setY(float)
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction:
    63:63:public com.badlogic.gdx.utils.Array getActions()
com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction:
    public static final int FOREVER
    39:40:public void finish()
    54:54:public int getCount()
com.badlogic.gdx.scenes.scene2d.actions.RotateByAction
com.badlogic.gdx.scenes.scene2d.actions.RotateToAction:
    33:33:public float getRotation()
com.badlogic.gdx.scenes.scene2d.actions.RunnableAction:
    51:51:public java.lang.Runnable getRunnable()
com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction:
    40:42:public void setScale(float)
    45:45:public float getX()
    49:50:public void setX(float)
    53:53:public float getY()
    57:58:public void setY(float)
com.badlogic.gdx.scenes.scene2d.actions.SizeByAction
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction:
    32:34:public TemporalAction(float)
    36:39:public TemporalAction(float,com.badlogic.gdx.math.Interpolation)
    74:75:public void finish()
    90:90:public float getTime()
    95:96:public void setTime(float)
    99:99:public float getDuration()
    108:108:public com.badlogic.gdx.math.Interpolation getInterpolation()
    116:116:public boolean isReverse()
    121:122:public void setReverse(boolean)
com.badlogic.gdx.scenes.scene2d.actions.TouchableAction
com.badlogic.gdx.scenes.scene2d.actions.VisibleAction
com.badlogic.gdx.scenes.scene2d.ui.Button
com.badlogic.gdx.scenes.scene2d.ui.Button$1
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup
com.badlogic.gdx.scenes.scene2d.ui.CheckBox
com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle
com.badlogic.gdx.scenes.scene2d.ui.Dialog
com.badlogic.gdx.scenes.scene2d.ui.Dialog$1
com.badlogic.gdx.scenes.scene2d.ui.Dialog$2
com.badlogic.gdx.scenes.scene2d.ui.Image:
    48:49:public Image(com.badlogic.gdx.graphics.g2d.NinePatch)
    59:60:public Image(com.badlogic.gdx.graphics.Texture)
    64:65:public Image(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    76:77:public Image(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.utils.Scaling)
    155:155:public com.badlogic.gdx.scenes.scene2d.utils.Drawable getDrawable()
    159:161:public void setScaling(com.badlogic.gdx.utils.Scaling)
    164:165:public void setAlign(int)
    186:186:public float getImageX()
    190:190:public float getImageY()
    194:194:public float getImageWidth()
    198:198:public float getImageHeight()
com.badlogic.gdx.scenes.scene2d.ui.ImageButton
com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle
com.badlogic.gdx.scenes.scene2d.ui.Label
com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle
com.badlogic.gdx.scenes.scene2d.ui.List
com.badlogic.gdx.scenes.scene2d.ui.List$1
com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane:
    86:87:public ScrollPane(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.ui.Skin)
    91:92:public ScrollPane(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    244:247:public void setStyle(com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle)
    252:252:public com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle getStyle()
    577:577:public void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor)
    581:581:public void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor)
    603:603:public float getScrollX()
    612:612:public float getScrollY()
    616:616:public float getVisualScrollX()
    620:620:public float getVisualScrollY()
    640:647:public void setFlickScroll(boolean)
    652:659:public void scrollTo(float,float,float,float)
    664:671:public void scrollToCenter(float,float,float,float)
    675:675:public float getMaxX()
    680:680:public float getMaxY()
    684:684:public float getScrollBarHeight()
    688:688:public float getScrollBarWidth()
    692:692:public boolean isScrollX()
    696:696:public boolean isScrollY()
    706:706:public boolean isPanning()
    710:710:public boolean isFlinging()
    714:715:public void setVelocityX(float)
    719:722:public float getVelocityX()
    726:727:public void setVelocityY(float)
    731:731:public float getVelocityY()
    737:739:public void setOverscroll(boolean,boolean)
    744:747:public void setupOverscroll(float,float,float)
    752:754:public void setForceOverscroll(boolean,boolean)
    758:759:public void setFlingTime(float)
    768:772:public void setFadeScrollBars(boolean)
    775:777:public void setupFadeScrollBars(float,float)
    780:781:public void setSmoothScrolling(boolean)
    787:789:public void setScrollbarsOnTop(boolean)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle:
    805:811:public ScrollPane$ScrollPaneStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    813:819:public ScrollPane$ScrollPaneStyle(com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$1
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList$1
com.badlogic.gdx.scenes.scene2d.ui.Skin:
    65:73:public Skin(com.badlogic.gdx.files.FileHandle)
    85:88:public Skin(com.badlogic.gdx.graphics.g2d.TextureAtlas)
    109:110:public void add(java.lang.String,java.lang.Object)
    126:126:public java.lang.Object get(java.lang.Class)
    154:156:public boolean has(java.lang.String,java.lang.Class)
    161:161:public com.badlogic.gdx.utils.ObjectMap getAll(java.lang.Class)
    165:165:public com.badlogic.gdx.graphics.Color getColor(java.lang.String)
    169:169:public com.badlogic.gdx.graphics.g2d.BitmapFont getFont(java.lang.String)
    188:202:public com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable getTiledDrawable(java.lang.String)
    295:298:public java.lang.String find(java.lang.Object)
    303:303:public com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String)
    308:308:public com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String,float,float,float,float)
    318:321:public com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    326:326:public com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable,float,float,float,float)
    366:386:public void setEnabled(com.badlogic.gdx.scenes.scene2d.Actor,boolean)
    390:390:public com.badlogic.gdx.graphics.g2d.TextureAtlas getAtlas()
    497:502:private static java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Skin$TintedDrawable:
    public java.lang.String name
    public com.badlogic.gdx.graphics.Color color
com.badlogic.gdx.scenes.scene2d.ui.Slider
com.badlogic.gdx.scenes.scene2d.ui.Slider$1
com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle
com.badlogic.gdx.scenes.scene2d.ui.SplitPane
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$1
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle
com.badlogic.gdx.scenes.scene2d.ui.Stack
com.badlogic.gdx.scenes.scene2d.ui.Table:
    164:164:public com.badlogic.gdx.scenes.scene2d.utils.Drawable getBackground()
    177:180:public void setClip(boolean)
    184:184:public int getRow(float)
    196:197:public com.esotericsoftware.tablelayout.Cell add(java.lang.String)
    202:203:public com.esotericsoftware.tablelayout.Cell add(java.lang.String,java.lang.String)
    208:209:public com.esotericsoftware.tablelayout.Cell add(java.lang.String,java.lang.String,com.badlogic.gdx.graphics.Color)
    214:215:public com.esotericsoftware.tablelayout.Cell add(java.lang.String,java.lang.String,java.lang.String)
    220:220:public com.esotericsoftware.tablelayout.Cell add()
    232:237:public varargs com.esotericsoftware.tablelayout.Cell stack(com.badlogic.gdx.scenes.scene2d.Actor[])
    249:249:public com.esotericsoftware.tablelayout.Cell columnDefaults(int)
    254:254:public com.esotericsoftware.tablelayout.Cell defaults()
    264:265:public void reset()
    269:269:public com.esotericsoftware.tablelayout.Cell getCell(com.badlogic.gdx.scenes.scene2d.Actor)
    274:274:public java.util.List getCells()
    284:285:public com.badlogic.gdx.scenes.scene2d.ui.Table pad(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    290:291:public com.badlogic.gdx.scenes.scene2d.ui.Table padTop(com.esotericsoftware.tablelayout.Value)
    296:297:public com.badlogic.gdx.scenes.scene2d.ui.Table padLeft(com.esotericsoftware.tablelayout.Value)
    302:303:public com.badlogic.gdx.scenes.scene2d.ui.Table padBottom(com.esotericsoftware.tablelayout.Value)
    308:309:public com.badlogic.gdx.scenes.scene2d.ui.Table padRight(com.esotericsoftware.tablelayout.Value)
    314:315:public com.badlogic.gdx.scenes.scene2d.ui.Table pad(float)
    319:320:public com.badlogic.gdx.scenes.scene2d.ui.Table pad(float,float,float,float)
    350:351:public com.badlogic.gdx.scenes.scene2d.ui.Table align(int)
    356:357:public com.badlogic.gdx.scenes.scene2d.ui.Table center()
    362:363:public com.badlogic.gdx.scenes.scene2d.ui.Table top()
    368:369:public com.badlogic.gdx.scenes.scene2d.ui.Table left()
    374:375:public com.badlogic.gdx.scenes.scene2d.ui.Table bottom()
    380:381:public com.badlogic.gdx.scenes.scene2d.ui.Table right()
    386:387:public com.badlogic.gdx.scenes.scene2d.ui.Table debug()
    392:393:public com.badlogic.gdx.scenes.scene2d.ui.Table debugTable()
    398:399:public com.badlogic.gdx.scenes.scene2d.ui.Table debugCell()
    404:405:public com.badlogic.gdx.scenes.scene2d.ui.Table debugWidget()
    410:411:public com.badlogic.gdx.scenes.scene2d.ui.Table debug(com.esotericsoftware.tablelayout.BaseTableLayout$Debug)
    415:415:public com.esotericsoftware.tablelayout.BaseTableLayout$Debug getDebug()
    419:419:public com.esotericsoftware.tablelayout.Value getPadTopValue()
    423:423:public float getPadTop()
    427:427:public com.esotericsoftware.tablelayout.Value getPadLeftValue()
    431:431:public float getPadLeft()
    435:435:public com.esotericsoftware.tablelayout.Value getPadBottomValue()
    439:439:public float getPadBottom()
    443:443:public com.esotericsoftware.tablelayout.Value getPadRightValue()
    447:447:public float getPadRight()
    452:452:public float getPadX()
    457:457:public float getPadY()
    461:461:public int getAlign()
    465:466:public void setSkin(com.badlogic.gdx.scenes.scene2d.ui.Skin)
    470:471:public void setRound(boolean)
    477:479:public static void drawDebug(com.badlogic.gdx.scenes.scene2d.Stage)
    482:487:private static void drawDebug(com.badlogic.gdx.utils.Array,com.badlogic.gdx.graphics.g2d.SpriteBatch)
com.badlogic.gdx.scenes.scene2d.ui.TableLayout:
    private com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer debugRenderer
    112:114:public void invalidateHierarchy()
    117:120:private void toStageCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2)
    123:178:public void drawDebug(com.badlogic.gdx.graphics.g2d.SpriteBatch)
com.badlogic.gdx.scenes.scene2d.ui.TableToolkit:
    81:81:public float getWidth(com.badlogic.gdx.scenes.scene2d.Actor)
    85:85:public float getHeight(com.badlogic.gdx.scenes.scene2d.Actor)
    1:1:public bridge synthetic float getHeight(java.lang.Object)
    1:1:public bridge synthetic float getWidth(java.lang.Object)
com.badlogic.gdx.scenes.scene2d.ui.TextButton
com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle
com.badlogic.gdx.scenes.scene2d.ui.TextField
com.badlogic.gdx.scenes.scene2d.ui.TextField$1
com.badlogic.gdx.scenes.scene2d.ui.TextField$DefaultOnscreenKeyboard
com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask
com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter$DigitsOnlyFilter
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle
com.badlogic.gdx.scenes.scene2d.ui.Touchpad
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$1
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle
com.badlogic.gdx.scenes.scene2d.ui.Tree
com.badlogic.gdx.scenes.scene2d.ui.Tree$1
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node
com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup
com.badlogic.gdx.scenes.scene2d.ui.Widget:
    65:67:public void setLayoutEnabled(boolean)
    97:97:public boolean needsLayout()
    112:120:public void pack()
    123:124:public void setFillParent(boolean)
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup:
    66:69:public void setLayoutEnabled(boolean)
    72:80:private void setLayoutEnabled(com.badlogic.gdx.scenes.scene2d.Group,boolean)
    110:110:public boolean needsLayout()
    128:136:public void pack()
    139:140:public void setFillParent(boolean)
com.badlogic.gdx.scenes.scene2d.ui.Window
com.badlogic.gdx.scenes.scene2d.ui.Window$1
com.badlogic.gdx.scenes.scene2d.ui.Window$2
com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener:
    137:137:public com.badlogic.gdx.scenes.scene2d.Actor getTouchDownTarget()
com.badlogic.gdx.scenes.scene2d.utils.Align
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent
com.badlogic.gdx.scenes.scene2d.utils.ClickListener:
    91:95:public void cancel()
    101:101:public void dragStart(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
    104:104:public void drag(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
    107:107:public void dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
    121:121:public boolean isPressed()
    126:126:public boolean isOver()
    130:131:public void setTapSquareSize(float)
    134:134:public float getTapSquareSize()
    139:140:public void setTapCountInterval(float)
    144:144:public int getTapCount()
    148:148:public float getTouchDownX()
    152:152:public float getTouchDownY()
    156:156:public int getButton()
    161:162:public void setButton(int)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$1
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target
com.badlogic.gdx.scenes.scene2d.utils.DragListener
com.badlogic.gdx.scenes.scene2d.utils.Drawable:
    public abstract void setLeftWidth(float)
    public abstract void setRightWidth(float)
    public abstract void setTopHeight(float)
    public abstract void setBottomHeight(float)
    public abstract void setMinWidth(float)
    public abstract void setMinHeight(float)
com.badlogic.gdx.scenes.scene2d.utils.FocusListener:
    private static synthetic int[] $SWITCH_TABLE$com$badlogic$gdx$scenes$scene2d$utils$FocusListener$FocusEvent$Type
    25:25:public FocusListener()
    27:37:public boolean handle(com.badlogic.gdx.scenes.scene2d.Event)
    42:42:public void keyboardFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean)
    46:46:public void scrollFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean)
    25:25:static synthetic int[] $SWITCH_TABLE$com$badlogic$gdx$scenes$scene2d$utils$FocusListener$FocusEvent$Type()
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent:
    55:55:public boolean isFocused()
    63:63:public com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type getType()
com.badlogic.gdx.scenes.scene2d.utils.Layout:
    public abstract void layout()
    public abstract void pack()
    public abstract void setFillParent(boolean)
    public abstract void setLayoutEnabled(boolean)
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack:
    33:33:public ScissorStack()
    119:125:public static com.badlogic.gdx.math.Rectangle getViewport()
    135:141:public static void toWindowCoordinates(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable:
    36:38:public TextureRegionDrawable(com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable)
com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable:
    16:17:public TiledDrawable(com.badlogic.gdx.graphics.g2d.TextureRegion)
    20:21:public TiledDrawable(com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable)
com.badlogic.gdx.utils.Array:
    67:68:public Array(java.lang.Class)
    74:77:public Array(com.badlogic.gdx.utils.Array)
    83:84:public Array(java.lang.Object[])
    91:94:public Array(boolean,java.lang.Object[])
    113:114:public void addAll(java.lang.Object[])
    130:132:public void set(int,java.lang.Object)
    135:143:public void insert(int,java.lang.Object)
    146:152:public void swap(int,int)
    181:189:public int lastIndexOf(java.lang.Object,boolean)
    241:241:public java.lang.Object first()
    254:255:public void shrink()
    261:263:public java.lang.Object[] ensureCapacity(int)
    278:279:public void sort()
    287:293:public void reverse()
    296:302:public void shuffle()
    317:321:public void truncate(int)
    325:326:public java.lang.Object random()
    330:330:public java.lang.Object[] toArray()
    354:362:public java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.Array$ArrayIterable
com.badlogic.gdx.utils.Array$ArrayIterator:
    388:389:public void reset()
com.badlogic.gdx.utils.ArrayMap
com.badlogic.gdx.utils.ArrayMap$Entries
com.badlogic.gdx.utils.ArrayMap$Keys
com.badlogic.gdx.utils.ArrayMap$Values
com.badlogic.gdx.utils.AtomicQueue
com.badlogic.gdx.utils.Base64Coder:
    private static final java.lang.String systemLineSeparator
    63:63:public static java.lang.String encodeString(java.lang.String)
    72:72:public static java.lang.String encodeLines(byte[])
    84:96:public static java.lang.String encodeLines(byte[],int,int,int,java.lang.String)
    104:104:public static char[] encode(byte[])
    113:113:public static char[] encode(byte[],int)
    123:144:public static char[] encode(byte[],int,int)
    153:153:public static java.lang.String decodeString(java.lang.String)
    163:169:public static byte[] decodeLines(java.lang.String)
    230:231:private Base64Coder()
com.badlogic.gdx.utils.BinaryHeap
com.badlogic.gdx.utils.BinaryHeap$Node
com.badlogic.gdx.utils.BooleanArray
com.badlogic.gdx.utils.BufferUtils:
    32:32:public BufferUtils()
    65:67:public static void copy(byte[],int,java.nio.Buffer,int)
    79:81:public static void copy(short[],int,java.nio.Buffer,int)
    93:95:public static void copy(char[],int,java.nio.Buffer,int)
    107:109:public static void copy(int[],int,java.nio.Buffer,int)
    121:123:public static void copy(long[],int,java.nio.Buffer,int)
    135:137:public static void copy(float[],int,java.nio.Buffer,int)
    149:151:public static void copy(double[],int,java.nio.Buffer,int)
    163:166:public static void copy(java.nio.Buffer,java.nio.Buffer,int)
    169:184:private static int positionInBytes(java.nio.Buffer)
    188:203:private static int bytesToElements(java.nio.Buffer,int)
    207:222:private static int elementsToBytes(java.nio.Buffer,int)
    232:234:public static java.nio.DoubleBuffer newDoubleBuffer(int)
    244:246:public static java.nio.ShortBuffer newShortBuffer(int)
    250:252:public static java.nio.CharBuffer newCharBuffer(int)
    262:264:public static java.nio.LongBuffer newLongBuffer(int)
    305:309:public static java.nio.ByteBuffer newUnsafeByteBuffer(java.nio.ByteBuffer)
    316:316:public static int getAllocatedBytesUnsafe()
    public static native void clear(java.nio.ByteBuffer,int)
    private static native void copyJni(byte[],int,java.nio.Buffer,int,int)
    private static native void copyJni(char[],int,java.nio.Buffer,int,int)
    private static native void copyJni(short[],int,java.nio.Buffer,int,int)
    private static native void copyJni(int[],int,java.nio.Buffer,int,int)
    private static native void copyJni(long[],int,java.nio.Buffer,int,int)
    private static native void copyJni(float[],int,java.nio.Buffer,int,int)
    private static native void copyJni(double[],int,java.nio.Buffer,int,int)
    private static native void copyJni(java.nio.Buffer,int,java.nio.Buffer,int,int)
com.badlogic.gdx.utils.CharArray
com.badlogic.gdx.utils.Clipboard
com.badlogic.gdx.utils.ComparableTimSort
com.badlogic.gdx.utils.DataInput
com.badlogic.gdx.utils.DataOutput
com.badlogic.gdx.utils.DelayedRemovalArray:
    37:38:public DelayedRemovalArray(com.badlogic.gdx.utils.Array)
    41:42:public DelayedRemovalArray(boolean,int,java.lang.Class)
    45:46:public DelayedRemovalArray(boolean,int)
    49:50:public DelayedRemovalArray(boolean,java.lang.Object[])
    53:54:public DelayedRemovalArray(java.lang.Class)
    61:62:public DelayedRemovalArray(java.lang.Object[])
    105:107:public void set(int,java.lang.Object)
    110:112:public void insert(int,java.lang.Object)
    115:117:public void swap(int,int)
    130:132:public void sort()
    140:142:public void reverse()
    145:147:public void shuffle()
    150:152:public void truncate(int)
com.badlogic.gdx.utils.FloatArray
com.badlogic.gdx.utils.GdxBuild
com.badlogic.gdx.utils.GdxRuntimeException:
    private static final long serialVersionUID
com.badlogic.gdx.utils.GwtModuleGenerator
com.badlogic.gdx.utils.IdentityMap
com.badlogic.gdx.utils.IdentityMap$Entries
com.badlogic.gdx.utils.IdentityMap$Entry
com.badlogic.gdx.utils.IdentityMap$Keys
com.badlogic.gdx.utils.IdentityMap$MapIterator
com.badlogic.gdx.utils.IdentityMap$Values
com.badlogic.gdx.utils.IntArray:
    52:57:public IntArray(com.badlogic.gdx.utils.IntArray)
    62:63:public IntArray(int[])
    70:73:public IntArray(boolean,int[])
    82:83:public void addAll(com.badlogic.gdx.utils.IntArray)
    86:89:public void addAll(com.badlogic.gdx.utils.IntArray,int,int)
    92:93:public void addAll(int[])
    96:101:public void addAll(int[],int,int)
    109:111:public void set(int,int)
    125:131:public void swap(int,int)
    142:145:public int indexOf(int)
    149:152:public int lastIndexOf(int)
    156:163:public boolean removeValue(int)
    168:176:public int removeIndex(int)
    186:186:public int peek()
    191:191:public int first()
    195:196:public void clear()
    208:210:public int[] ensureCapacity(int)
    222:223:public void sort()
    226:232:public void reverse()
    235:241:public void shuffle()
    246:247:public void truncate(int)
    251:252:public int random()
    256:258:public int[] toArray()
    276:284:public java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.IntMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private static final int EMPTY
    private com.badlogic.gdx.utils.IntMap$Entries entries
    private com.badlogic.gdx.utils.IntMap$Values values
    private com.badlogic.gdx.utils.IntMap$Keys keys
    63:64:public IntMap(int)
    160:162:public void putAll(com.badlogic.gdx.utils.IntMap)
    302:311:public java.lang.Object get(int,java.lang.Object)
    387:397:public void clear()
    404:419:public boolean containsValue(java.lang.Object,boolean)
    423:432:public boolean containsKey(int)
    436:439:private boolean containsKeyStash(int)
    447:462:public int findKey(java.lang.Object,boolean,int)
    468:470:public void ensureCapacity(int)
    536:540:public com.badlogic.gdx.utils.IntMap$Entries entries()
    546:550:public com.badlogic.gdx.utils.IntMap$Values values()
    556:560:public com.badlogic.gdx.utils.IntMap$Keys keys()
com.badlogic.gdx.utils.IntMap$Entries
com.badlogic.gdx.utils.IntMap$Entry
com.badlogic.gdx.utils.IntMap$Keys
com.badlogic.gdx.utils.IntMap$MapIterator
com.badlogic.gdx.utils.IntMap$Values
com.badlogic.gdx.utils.Json:
    private static final boolean debug
    private com.badlogic.gdx.utils.JsonWriter writer
    58:60:public Json(com.badlogic.gdx.utils.JsonWriter$OutputType)
    63:64:public void setIgnoreUnknownFields(boolean)
    67:68:public void setOutputType(com.badlogic.gdx.utils.JsonWriter$OutputType)
    71:73:public void addClassTag(java.lang.String,java.lang.Class)
    76:81:public java.lang.Class getClass(java.lang.String)
    86:88:public java.lang.String getTag(java.lang.Class)
    102:102:public com.badlogic.gdx.utils.Json$Serializer getSerializer(java.lang.Class)
    110:115:public void setElementType(java.lang.Class,java.lang.String,java.lang.Class)
    149:149:public java.lang.String toJson(java.lang.Object)
    153:153:public java.lang.String toJson(java.lang.Object,java.lang.Class)
    157:159:public java.lang.String toJson(java.lang.Object,java.lang.Class,java.lang.Class)
    163:164:public void toJson(java.lang.Object,com.badlogic.gdx.files.FileHandle)
    167:168:public void toJson(java.lang.Object,java.lang.Class,com.badlogic.gdx.files.FileHandle)
    171:183:public void toJson(java.lang.Object,java.lang.Class,java.lang.Class,com.badlogic.gdx.files.FileHandle)
    186:187:public void toJson(java.lang.Object,java.io.Writer)
    190:191:public void toJson(java.lang.Object,java.lang.Class,java.io.Writer)
    194:204:public void toJson(java.lang.Object,java.lang.Class,java.lang.Class,java.io.Writer)
    207:239:public void writeFields(java.lang.Object)
    242:274:private java.lang.Object[] getDefaultValues(java.lang.Class)
    278:279:public void writeField(java.lang.Object,java.lang.String)
    282:283:public void writeField(java.lang.Object,java.lang.String,java.lang.Class)
    286:287:public void writeField(java.lang.Object,java.lang.String,java.lang.String)
    290:311:public void writeField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class)
    315:320:public void writeValue(java.lang.String,java.lang.Object)
    324:329:public void writeValue(java.lang.String,java.lang.Object,java.lang.Class)
    333:338:public void writeValue(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Class)
    341:342:public void writeValue(java.lang.Object)
    345:346:public void writeValue(java.lang.Object,java.lang.Class)
    350:467:public void writeValue(java.lang.Object,java.lang.Class,java.lang.Class)
    471:476:public void writeObjectStart(java.lang.String)
    480:485:public void writeObjectStart(java.lang.String,java.lang.Class,java.lang.Class)
    489:493:public void writeObjectStart()
    497:502:public void writeObjectStart(java.lang.Class,java.lang.Class)
    506:510:public void writeObjectEnd()
    514:519:public void writeArrayStart(java.lang.String)
    523:527:public void writeArrayStart()
    531:535:public void writeArrayEnd()
    538:547:public void writeType(java.lang.Class)
    550:550:public java.lang.Object fromJson(java.lang.Class,java.io.Reader)
    554:554:public java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.io.Reader)
    558:558:public java.lang.Object fromJson(java.lang.Class,java.io.InputStream)
    562:562:public java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.io.InputStream)
    575:577:public java.lang.Object fromJson(java.lang.Class,java.lang.Class,com.badlogic.gdx.files.FileHandle)
    582:582:public java.lang.Object fromJson(java.lang.Class,char[],int,int)
    586:586:public java.lang.Object fromJson(java.lang.Class,java.lang.Class,char[],int,int)
    590:590:public java.lang.Object fromJson(java.lang.Class,java.lang.String)
    594:594:public java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.lang.String)
    598:599:public void readField(java.lang.Object,java.lang.String,java.lang.Object)
    602:603:public void readField(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Object)
    606:607:public void readField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Object)
    610:632:public void readField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class,java.lang.Object)
    678:679:public java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)
    683:686:public java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object,java.lang.Object)
    690:690:public java.lang.Object readValue(java.lang.Class,java.lang.Class,java.lang.Object,java.lang.Object)
    818:819:private java.lang.String convertToString(java.lang.Object)
    847:847:public java.lang.String prettyPrint(java.lang.Object)
    851:851:public java.lang.String prettyPrint(java.lang.String)
    855:855:public java.lang.String prettyPrint(java.lang.Object,int)
    859:861:public java.lang.String prettyPrint(java.lang.String,int)
    865:932:private void prettyPrint(java.lang.Object,com.badlogic.gdx.utils.StringBuilder,int,int)
    935:939:private static boolean isFlat(com.badlogic.gdx.utils.ObjectMap)
    943:948:private static boolean isFlat(com.badlogic.gdx.utils.Array)
    952:954:private static void indent(int,com.badlogic.gdx.utils.StringBuilder)
com.badlogic.gdx.utils.Json$ReadOnlySerializer:
    973:973:public void write(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class)
    public abstract java.lang.Object read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class)
com.badlogic.gdx.utils.Json$Serializable:
    public abstract void write(com.badlogic.gdx.utils.Json)
com.badlogic.gdx.utils.Json$Serializer:
    public abstract void write(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class)
com.badlogic.gdx.utils.JsonReader:
    static final int json_start
    static final int json_first_final
    static final int json_error
    static final int json_en_object
    static final int json_en_array
    static final int json_en_main
    37:38:public java.lang.Object parse(java.lang.String)
com.badlogic.gdx.utils.JsonWriter:
    private com.badlogic.gdx.utils.JsonWriter$OutputType outputType
    32:34:public JsonWriter(java.io.Writer)
    37:38:public void setOutputType(com.badlogic.gdx.utils.JsonWriter$OutputType)
    41:49:public com.badlogic.gdx.utils.JsonWriter name(java.lang.String)
    53:65:public com.badlogic.gdx.utils.JsonWriter object()
    69:81:public com.badlogic.gdx.utils.JsonWriter array()
    85:101:public com.badlogic.gdx.utils.JsonWriter value(java.lang.Object)
    105:105:public com.badlogic.gdx.utils.JsonWriter object(java.lang.String)
    109:109:public com.badlogic.gdx.utils.JsonWriter array(java.lang.String)
    113:113:public com.badlogic.gdx.utils.JsonWriter set(java.lang.String,java.lang.Object)
com.badlogic.gdx.utils.JsonWriter$JsonObject:
    boolean needsComma
    141:144:JsonWriter$JsonObject(com.badlogic.gdx.utils.JsonWriter,boolean)
com.badlogic.gdx.utils.JsonWriter$OutputType:
    private static synthetic int[] $SWITCH_TABLE$com$badlogic$gdx$utils$JsonWriter$OutputType
    163:166:public java.lang.String quoteValue(java.lang.String)
    170:179:public java.lang.String quoteName(java.lang.String)
    151:151:static synthetic int[] $SWITCH_TABLE$com$badlogic$gdx$utils$JsonWriter$OutputType()
com.badlogic.gdx.utils.LittleEndianInputStream
com.badlogic.gdx.utils.Logger:
    public static final int NONE
    public static final int ERROR
    public static final int INFO
    public static final int DEBUG
    36:37:public Logger(java.lang.String)
    49:50:public void debug(java.lang.String,java.lang.Exception)
    57:58:public void info(java.lang.String,java.lang.Exception)
    61:62:public void error(java.lang.String)
    72:73:public void setLevel(int)
com.badlogic.gdx.utils.LongArray
com.badlogic.gdx.utils.LongMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private static final int EMPTY
    private float loadFactor
    private int threshold
    private int stashCapacity
    private int pushIterations
    private com.badlogic.gdx.utils.LongMap$Entries entries
    private com.badlogic.gdx.utils.LongMap$Values values
    private com.badlogic.gdx.utils.LongMap$Keys keys
    57:58:public LongMap()
    63:64:public LongMap(int)
    68:84:public LongMap(int,float)
    87:156:public java.lang.Object put(long,java.lang.Object)
    160:162:public void putAll(com.badlogic.gdx.utils.LongMap)
    166:201:private void putResize(long,java.lang.Object)
    204:270:private void push(long,java.lang.Object,int,long,int,long,int,long)
    273:285:private void putStash(long,java.lang.Object)
    288:297:public java.lang.Object get(long)
    301:310:public java.lang.Object get(long,java.lang.Object)
    314:317:private java.lang.Object getStash(long,java.lang.Object)
    386:396:public void clear()
    401:416:public boolean containsValue(java.lang.Object,boolean)
    420:429:public boolean containsKey(long)
    433:436:private boolean containsKeyStash(long)
    444:459:public long findKey(java.lang.Object,boolean,long)
    465:467:public void ensureCapacity(int)
    470:491:private void resize(int)
    533:537:public com.badlogic.gdx.utils.LongMap$Entries entries()
    543:547:public com.badlogic.gdx.utils.LongMap$Values values()
    553:557:public com.badlogic.gdx.utils.LongMap$Keys keys()
com.badlogic.gdx.utils.LongMap$Entries
com.badlogic.gdx.utils.LongMap$Entry
com.badlogic.gdx.utils.LongMap$Keys
com.badlogic.gdx.utils.LongMap$MapIterator
com.badlogic.gdx.utils.LongMap$Values
com.badlogic.gdx.utils.NumberUtils:
    19:19:public NumberUtils()
    25:25:public static int floatToRawIntBits(float)
    39:39:public static float intBitsToFloat(int)
com.badlogic.gdx.utils.ObjectIntMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private com.badlogic.gdx.utils.ObjectIntMap$Entries entries
    private com.badlogic.gdx.utils.ObjectIntMap$Values values
    private com.badlogic.gdx.utils.ObjectIntMap$Keys keys
    60:61:public ObjectIntMap(int)
    144:146:public void putAll(com.badlogic.gdx.utils.ObjectIntMap)
    291:302:public int getAndIncrement(java.lang.Object,int,int)
    306:314:private int getAndIncrementStash(java.lang.Object,int,int)
    318:343:public int remove(java.lang.Object,int)
    347:356:int removeStash(java.lang.Object,int)
    361:367:void removeStashIndex(int)
    382:385:public boolean containsValue(int)
    389:398:public boolean containsKey(java.lang.Object)
    402:405:private boolean containsKeyStash(java.lang.Object)
    411:414:public java.lang.Object findKey(int)
    420:422:public void ensureCapacity(int)
    488:492:public com.badlogic.gdx.utils.ObjectIntMap$Entries entries()
    498:502:public com.badlogic.gdx.utils.ObjectIntMap$Values values()
    508:512:public com.badlogic.gdx.utils.ObjectIntMap$Keys keys()
com.badlogic.gdx.utils.ObjectIntMap$Entries
com.badlogic.gdx.utils.ObjectIntMap$Entry
com.badlogic.gdx.utils.ObjectIntMap$Keys
com.badlogic.gdx.utils.ObjectIntMap$MapIterator
com.badlogic.gdx.utils.ObjectIntMap$Values
com.badlogic.gdx.utils.ObjectMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    154:156:public void putAll(com.badlogic.gdx.utils.ObjectMap)
    370:382:public boolean containsValue(java.lang.Object,boolean)
    410:422:public java.lang.Object findKey(java.lang.Object,boolean)
    428:430:public void ensureCapacity(int)
com.badlogic.gdx.utils.ObjectMap$Values:
    622:625:public com.badlogic.gdx.utils.Array toArray()
    630:632:public void toArray(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.utils.OrderedMap:
    32:34:public OrderedMap(int)
    37:39:public OrderedMap(int,float)
com.badlogic.gdx.utils.PauseableThread
com.badlogic.gdx.utils.Pool:
    28:29:public Pool()
    61:66:public void free(com.badlogic.gdx.utils.Array)
    70:71:public void clear()
com.badlogic.gdx.utils.PooledLinkedList
com.badlogic.gdx.utils.PooledLinkedList$1
com.badlogic.gdx.utils.PooledLinkedList$Item
com.badlogic.gdx.utils.Pools:
    61:62:private Pools()
com.badlogic.gdx.utils.ReflectionPool:
    27:29:public ReflectionPool(java.lang.Class)
    37:39:public ReflectionPool(java.lang.Class,int)
com.badlogic.gdx.utils.ScreenUtils:
    33:33:public ScreenUtils()
    78:80:public static byte[] getFrameBufferPixels(boolean)
    92:107:public static byte[] getFrameBufferPixels(int,int,int,int,boolean)
com.badlogic.gdx.utils.SerializationException:
    42:42:public boolean causedBy(java.lang.Class)
    46:49:private boolean causedBy(java.lang.Throwable,java.lang.Class)
com.badlogic.gdx.utils.SharedLibraryLoader
com.badlogic.gdx.utils.SnapshotArray:
    48:49:public SnapshotArray(com.badlogic.gdx.utils.Array)
    56:57:public SnapshotArray(boolean,int)
    60:61:public SnapshotArray(boolean,java.lang.Object[])
    64:65:public SnapshotArray(java.lang.Class)
    68:69:public SnapshotArray(int)
    72:73:public SnapshotArray(java.lang.Object[])
    107:109:public void set(int,java.lang.Object)
    112:114:public void insert(int,java.lang.Object)
    117:119:public void swap(int,int)
    142:144:public void sort()
    152:154:public void reverse()
    157:159:public void shuffle()
    162:164:public void truncate(int)
com.badlogic.gdx.utils.Sort:
    private com.badlogic.gdx.utils.ComparableTimSort comparableTimSort
    31:33:public void sort(com.badlogic.gdx.utils.Array)
    36:38:public void sort(java.lang.Object[])
    41:43:public void sort(java.lang.Object[],int,int)
    46:48:public void sort(com.badlogic.gdx.utils.Array,java.util.Comparator)
    51:53:public void sort(java.lang.Object[],java.util.Comparator)
com.badlogic.gdx.utils.SortedIntList
com.badlogic.gdx.utils.SortedIntList$Iterator
com.badlogic.gdx.utils.SortedIntList$Node
com.badlogic.gdx.utils.SortedIntList$NodePool
com.badlogic.gdx.utils.StringBuilder:
    static final int INITIAL_CAPACITY
    37:37:final char[] getValue()
    65:66:public StringBuilder(java.lang.CharSequence)
    68:72:public StringBuilder(com.badlogic.gdx.utils.StringBuilder)
    79:83:public StringBuilder(java.lang.String)
    167:167:public int capacity()
    183:197:final void delete0(int,int)
    201:209:final void deleteCharAt0(int)
    218:222:public void ensureCapacity(int)
    234:238:public void getChars(int,int,char[],int)
    241:249:final void insert0(int,char[])
    252:264:final void insert0(int,char[],int,int)
    268:275:final void insert0(int,char)
    278:291:final void insert0(int,java.lang.String)
    294:301:final void insert0(int,java.lang.CharSequence,int,int)
    311:322:private void move(int,int)
    325:351:final void replace0(int,int,java.lang.String)
    355:409:final void reverse0()
    417:421:public void setCharAt(int,char)
    449:457:public java.lang.String substring(int)
    508:508:public int indexOf(java.lang.String)
    520:551:public int indexOf(java.lang.String,int)
    563:563:public int lastIndexOf(java.lang.String)
    576:608:public int lastIndexOf(java.lang.String,int)
    616:621:public void trimToSize()
    632:635:public int codePointAt(int)
    647:650:public int codePointBefore(int)
    664:667:public int codePointCount(int,int)
    681:681:public int offsetByCodePoints(int,int)
    691:692:public com.badlogic.gdx.utils.StringBuilder append(boolean)
    735:736:public com.badlogic.gdx.utils.StringBuilder append(float)
    746:747:public com.badlogic.gdx.utils.StringBuilder append(double)
    814:818:public com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder)
    836:840:public com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder,int,int)
    850:851:public com.badlogic.gdx.utils.StringBuilder appendCodePoint(int)
    862:863:public com.badlogic.gdx.utils.StringBuilder delete(int,int)
    873:874:public com.badlogic.gdx.utils.StringBuilder deleteCharAt(int)
    886:887:public com.badlogic.gdx.utils.StringBuilder insert(int,boolean)
    899:900:public com.badlogic.gdx.utils.StringBuilder insert(int,char)
    912:913:public com.badlogic.gdx.utils.StringBuilder insert(int,int)
    925:926:public com.badlogic.gdx.utils.StringBuilder insert(int,long)
    938:939:public com.badlogic.gdx.utils.StringBuilder insert(int,float)
    951:952:public com.badlogic.gdx.utils.StringBuilder insert(int,double)
    964:965:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.Object)
    976:977:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.String)
    989:990:public com.badlogic.gdx.utils.StringBuilder insert(int,char[])
    1005:1006:public com.badlogic.gdx.utils.StringBuilder insert(int,char[],int,int)
    1019:1020:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence)
    1036:1037:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence,int,int)
    1050:1051:public com.badlogic.gdx.utils.StringBuilder replace(int,int,java.lang.String)
    1058:1059:public com.badlogic.gdx.utils.StringBuilder reverse()
com.badlogic.gdx.utils.TimSort:
    private static final int MIN_MERGE
    private static final int MIN_GALLOP
    private static final int INITIAL_TMP_STORAGE_LENGTH
    private static final boolean DEBUG
    152:171:private TimSort(java.lang.Object[],java.util.Comparator)
    179:180:static void sort(java.lang.Object[],java.util.Comparator)
    183:227:static void sort(java.lang.Object[],int,int,java.util.Comparator)
com.badlogic.gdx.utils.TimeUtils:
    21:21:public TimeUtils()
    29:29:public static long millis()
com.badlogic.gdx.utils.Timer:
    private static final int CANCELLED
    private static final int FOREVER
    41:42:public void postTask(com.badlogic.gdx.utils.Timer$Task)
    46:47:public void scheduleTask(com.badlogic.gdx.utils.Timer$Task)
    56:57:public void scheduleTask(com.badlogic.gdx.utils.Timer$Task,float,float)
    71:72:public void stop()
    76:78:public void start()
    82:85:public void clear()
    127:128:public static void post(com.badlogic.gdx.utils.Timer$Task)
    133:134:public static void schedule(com.badlogic.gdx.utils.Timer$Task)
    145:146:public static void schedule(com.badlogic.gdx.utils.Timer$Task,float,float)
    151:152:public static void schedule(com.badlogic.gdx.utils.Timer$Task,float,float,int)
com.badlogic.gdx.utils.XmlReader:
    static final int xml_start
    static final int xml_first_final
    static final int xml_error
    static final int xml_en_elementBody
    static final int xml_en_main
com.badlogic.gdx.utils.XmlReader$Element:
    450:450:public com.badlogic.gdx.utils.ObjectMap getAttributes()
    455:458:public java.lang.String getAttribute(java.lang.String)
    462:465:public java.lang.String getAttribute(java.lang.String,java.lang.String)
    474:475:public int getChildCount()
    480:481:public com.badlogic.gdx.utils.XmlReader$Element getChild(int)
    498:499:public void removeChild(int)
    502:503:public void removeChild(com.badlogic.gdx.utils.XmlReader$Element)
    506:507:public void remove()
    510:510:public com.badlogic.gdx.utils.XmlReader$Element getParent()
    558:563:public com.badlogic.gdx.utils.XmlReader$Element getChildByName(java.lang.String)
    569:576:public com.badlogic.gdx.utils.XmlReader$Element getChildByNameRecursive(java.lang.String)
    582:588:public com.badlogic.gdx.utils.Array getChildrenByName(java.lang.String)
    594:596:public com.badlogic.gdx.utils.Array getChildrenByNameRecursively(java.lang.String)
    600:606:private void getChildrenByNameRecursively(java.lang.String,com.badlogic.gdx.utils.Array)
    610:610:public float getFloatAttribute(java.lang.String)
    614:616:public float getFloatAttribute(java.lang.String,float)
    621:621:public int getIntAttribute(java.lang.String)
    625:627:public int getIntAttribute(java.lang.String,int)
    632:632:public boolean getBooleanAttribute(java.lang.String)
    636:638:public boolean getBooleanAttribute(java.lang.String,boolean)
    644:646:public java.lang.String get(java.lang.String)
    652:660:public java.lang.String get(java.lang.String,java.lang.String)
    666:668:public int getInt(java.lang.String)
    674:676:public int getInt(java.lang.String,int)
    682:684:public float getFloat(java.lang.String)
    690:692:public float getFloat(java.lang.String,float)
    698:700:public boolean getBoolean(java.lang.String)
    706:708:public boolean getBoolean(java.lang.String,boolean)
com.badlogic.gdx.utils.XmlWriter
com.badlogic.gdx.utils.compression.CRC
com.badlogic.gdx.utils.compression.ICodeProgress
com.badlogic.gdx.utils.compression.Lzma
com.badlogic.gdx.utils.compression.Lzma$CommandLine
com.badlogic.gdx.utils.compression.lz.BinTree
com.badlogic.gdx.utils.compression.lz.InWindow
com.badlogic.gdx.utils.compression.lz.OutWindow
com.badlogic.gdx.utils.compression.lzma.Base
com.badlogic.gdx.utils.compression.lzma.Decoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2
com.badlogic.gdx.utils.compression.lzma.Encoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal
com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder
com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder
com.badlogic.gdx.utils.compression.rangecoder.Decoder
com.badlogic.gdx.utils.compression.rangecoder.Encoder
com.esotericsoftware.tablelayout.BaseTableLayout:
    public static final int CENTER
    public static final int TOP
    public static final int BOTTOM
    public static final int LEFT
    public static final int RIGHT
    public abstract void invalidateHierarchy()
    150:161:public com.esotericsoftware.tablelayout.Cell columnDefaults(int)
    167:178:public void reset()
    194:198:public com.esotericsoftware.tablelayout.Cell getCell(java.lang.Object)
    207:208:public void setToolkit(com.esotericsoftware.tablelayout.Toolkit)
    246:246:public com.esotericsoftware.tablelayout.Cell defaults()
    260:265:public com.esotericsoftware.tablelayout.BaseTableLayout pad(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    270:272:public com.esotericsoftware.tablelayout.BaseTableLayout padTop(com.esotericsoftware.tablelayout.Value)
    277:279:public com.esotericsoftware.tablelayout.BaseTableLayout padLeft(com.esotericsoftware.tablelayout.Value)
    284:286:public com.esotericsoftware.tablelayout.BaseTableLayout padBottom(com.esotericsoftware.tablelayout.Value)
    291:293:public com.esotericsoftware.tablelayout.BaseTableLayout padRight(com.esotericsoftware.tablelayout.Value)
    298:303:public com.esotericsoftware.tablelayout.BaseTableLayout pad(float)
    307:312:public com.esotericsoftware.tablelayout.BaseTableLayout pad(float,float,float,float)
    346:347:public com.esotericsoftware.tablelayout.BaseTableLayout align(int)
    352:353:public com.esotericsoftware.tablelayout.BaseTableLayout center()
    358:360:public com.esotericsoftware.tablelayout.BaseTableLayout top()
    365:367:public com.esotericsoftware.tablelayout.BaseTableLayout left()
    372:374:public com.esotericsoftware.tablelayout.BaseTableLayout bottom()
    379:381:public com.esotericsoftware.tablelayout.BaseTableLayout right()
    386:388:public com.esotericsoftware.tablelayout.BaseTableLayout debug()
    393:395:public com.esotericsoftware.tablelayout.BaseTableLayout debugTable()
    400:402:public com.esotericsoftware.tablelayout.BaseTableLayout debugCell()
    407:409:public com.esotericsoftware.tablelayout.BaseTableLayout debugWidget()
    414:419:public com.esotericsoftware.tablelayout.BaseTableLayout debug(com.esotericsoftware.tablelayout.BaseTableLayout$Debug)
    423:423:public com.esotericsoftware.tablelayout.BaseTableLayout$Debug getDebug()
    427:427:public com.esotericsoftware.tablelayout.Value getPadTopValue()
    435:435:public com.esotericsoftware.tablelayout.Value getPadLeftValue()
    443:443:public com.esotericsoftware.tablelayout.Value getPadBottomValue()
    451:451:public com.esotericsoftware.tablelayout.Value getPadRightValue()
    459:459:public int getAlign()
    464:477:public int getRow(float)
com.esotericsoftware.tablelayout.Cell:
    118:119:public com.esotericsoftware.tablelayout.Cell setWidget(java.lang.Object)
    129:129:public boolean hasWidget()
    134:140:public com.esotericsoftware.tablelayout.Cell size(com.esotericsoftware.tablelayout.Value)
    145:151:public com.esotericsoftware.tablelayout.Cell size(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    156:157:public com.esotericsoftware.tablelayout.Cell size(float)
    162:163:public com.esotericsoftware.tablelayout.Cell size(float,float)
    168:171:public com.esotericsoftware.tablelayout.Cell width(com.esotericsoftware.tablelayout.Value)
    176:177:public com.esotericsoftware.tablelayout.Cell width(float)
    196:198:public com.esotericsoftware.tablelayout.Cell minSize(com.esotericsoftware.tablelayout.Value)
    203:205:public com.esotericsoftware.tablelayout.Cell minSize(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    209:210:public com.esotericsoftware.tablelayout.Cell minWidth(com.esotericsoftware.tablelayout.Value)
    214:215:public com.esotericsoftware.tablelayout.Cell minHeight(com.esotericsoftware.tablelayout.Value)
    220:222:public com.esotericsoftware.tablelayout.Cell minSize(float)
    227:229:public com.esotericsoftware.tablelayout.Cell minSize(float,float)
    233:234:public com.esotericsoftware.tablelayout.Cell minWidth(float)
    238:239:public com.esotericsoftware.tablelayout.Cell minHeight(float)
    244:246:public com.esotericsoftware.tablelayout.Cell prefSize(com.esotericsoftware.tablelayout.Value)
    251:253:public com.esotericsoftware.tablelayout.Cell prefSize(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    257:258:public com.esotericsoftware.tablelayout.Cell prefWidth(com.esotericsoftware.tablelayout.Value)
    262:263:public com.esotericsoftware.tablelayout.Cell prefHeight(com.esotericsoftware.tablelayout.Value)
    268:270:public com.esotericsoftware.tablelayout.Cell prefSize(float,float)
    275:277:public com.esotericsoftware.tablelayout.Cell prefSize(float)
    281:282:public com.esotericsoftware.tablelayout.Cell prefWidth(float)
    286:287:public com.esotericsoftware.tablelayout.Cell prefHeight(float)
    292:294:public com.esotericsoftware.tablelayout.Cell maxSize(com.esotericsoftware.tablelayout.Value)
    299:301:public com.esotericsoftware.tablelayout.Cell maxSize(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    305:306:public com.esotericsoftware.tablelayout.Cell maxWidth(com.esotericsoftware.tablelayout.Value)
    310:311:public com.esotericsoftware.tablelayout.Cell maxHeight(com.esotericsoftware.tablelayout.Value)
    316:318:public com.esotericsoftware.tablelayout.Cell maxSize(float)
    323:325:public com.esotericsoftware.tablelayout.Cell maxSize(float,float)
    329:330:public com.esotericsoftware.tablelayout.Cell maxWidth(float)
    334:335:public com.esotericsoftware.tablelayout.Cell maxHeight(float)
    340:344:public com.esotericsoftware.tablelayout.Cell space(com.esotericsoftware.tablelayout.Value)
    348:352:public com.esotericsoftware.tablelayout.Cell space(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    356:357:public com.esotericsoftware.tablelayout.Cell spaceTop(com.esotericsoftware.tablelayout.Value)
    361:362:public com.esotericsoftware.tablelayout.Cell spaceLeft(com.esotericsoftware.tablelayout.Value)
    366:367:public com.esotericsoftware.tablelayout.Cell spaceBottom(com.esotericsoftware.tablelayout.Value)
    371:372:public com.esotericsoftware.tablelayout.Cell spaceRight(com.esotericsoftware.tablelayout.Value)
    377:382:public com.esotericsoftware.tablelayout.Cell space(float)
    386:390:public com.esotericsoftware.tablelayout.Cell space(float,float,float,float)
    404:405:public com.esotericsoftware.tablelayout.Cell spaceBottom(float)
    409:410:public com.esotericsoftware.tablelayout.Cell spaceRight(float)
    415:419:public com.esotericsoftware.tablelayout.Cell pad(com.esotericsoftware.tablelayout.Value)
    423:427:public com.esotericsoftware.tablelayout.Cell pad(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    431:432:public com.esotericsoftware.tablelayout.Cell padTop(com.esotericsoftware.tablelayout.Value)
    436:437:public com.esotericsoftware.tablelayout.Cell padLeft(com.esotericsoftware.tablelayout.Value)
    441:442:public com.esotericsoftware.tablelayout.Cell padBottom(com.esotericsoftware.tablelayout.Value)
    446:447:public com.esotericsoftware.tablelayout.Cell padRight(com.esotericsoftware.tablelayout.Value)
    452:457:public com.esotericsoftware.tablelayout.Cell pad(float)
    461:465:public com.esotericsoftware.tablelayout.Cell pad(float,float,float,float)
    469:470:public com.esotericsoftware.tablelayout.Cell padTop(float)
    474:475:public com.esotericsoftware.tablelayout.Cell padLeft(float)
    479:480:public com.esotericsoftware.tablelayout.Cell padBottom(float)
    484:485:public com.esotericsoftware.tablelayout.Cell padRight(float)
    490:492:public com.esotericsoftware.tablelayout.Cell fill()
    503:504:public com.esotericsoftware.tablelayout.Cell fillY()
    508:510:public com.esotericsoftware.tablelayout.Cell fill(java.lang.Float,java.lang.Float)
    515:517:public com.esotericsoftware.tablelayout.Cell fill(boolean,boolean)
    522:524:public com.esotericsoftware.tablelayout.Cell fill(boolean)
    530:531:public com.esotericsoftware.tablelayout.Cell align(java.lang.Integer)
    536:537:public com.esotericsoftware.tablelayout.Cell center()
    542:548:public com.esotericsoftware.tablelayout.Cell top()
    553:559:public com.esotericsoftware.tablelayout.Cell left()
    564:570:public com.esotericsoftware.tablelayout.Cell bottom()
    575:581:public com.esotericsoftware.tablelayout.Cell right()
    593:594:public com.esotericsoftware.tablelayout.Cell expandX()
    599:600:public com.esotericsoftware.tablelayout.Cell expandY()
    604:606:public com.esotericsoftware.tablelayout.Cell expand(java.lang.Integer,java.lang.Integer)
    611:613:public com.esotericsoftware.tablelayout.Cell expand(boolean,boolean)
    617:618:public com.esotericsoftware.tablelayout.Cell ignore(java.lang.Boolean)
    623:624:public com.esotericsoftware.tablelayout.Cell ignore()
    632:633:public com.esotericsoftware.tablelayout.Cell colspan(java.lang.Integer)
    638:640:public com.esotericsoftware.tablelayout.Cell uniform()
    645:646:public com.esotericsoftware.tablelayout.Cell uniformX()
    651:652:public com.esotericsoftware.tablelayout.Cell uniformY()
    656:658:public com.esotericsoftware.tablelayout.Cell uniform(java.lang.Boolean,java.lang.Boolean)
    694:694:public int getColumn()
    698:698:public int getRow()
    703:703:public com.esotericsoftware.tablelayout.Value getMinWidthValue()
    707:707:public float getMinWidth()
    712:712:public com.esotericsoftware.tablelayout.Value getMinHeightValue()
    716:716:public float getMinHeight()
    721:721:public com.esotericsoftware.tablelayout.Value getPrefWidthValue()
    725:725:public float getPrefWidth()
    730:730:public com.esotericsoftware.tablelayout.Value getPrefHeightValue()
    734:734:public float getPrefHeight()
    739:739:public com.esotericsoftware.tablelayout.Value getMaxWidthValue()
    743:743:public float getMaxWidth()
    748:748:public com.esotericsoftware.tablelayout.Value getMaxHeightValue()
    752:752:public float getMaxHeight()
    757:757:public com.esotericsoftware.tablelayout.Value getSpaceTopValue()
    761:761:public float getSpaceTop()
    766:766:public com.esotericsoftware.tablelayout.Value getSpaceLeftValue()
    770:770:public float getSpaceLeft()
    775:775:public com.esotericsoftware.tablelayout.Value getSpaceBottomValue()
    779:779:public float getSpaceBottom()
    784:784:public com.esotericsoftware.tablelayout.Value getSpaceRightValue()
    788:788:public float getSpaceRight()
    793:793:public com.esotericsoftware.tablelayout.Value getPadTopValue()
    797:797:public float getPadTop()
    802:802:public com.esotericsoftware.tablelayout.Value getPadLeftValue()
    806:806:public float getPadLeft()
    811:811:public com.esotericsoftware.tablelayout.Value getPadBottomValue()
    815:815:public float getPadBottom()
    820:820:public com.esotericsoftware.tablelayout.Value getPadRightValue()
    824:824:public float getPadRight()
    829:829:public java.lang.Float getFillX()
    834:834:public java.lang.Float getFillY()
    839:839:public java.lang.Integer getAlign()
    844:844:public java.lang.Integer getExpandX()
    849:849:public java.lang.Integer getExpandY()
    854:854:public java.lang.Integer getColspan()
    859:859:public java.lang.Boolean getUniformX()
    864:864:public java.lang.Boolean getUniformY()
    869:869:public boolean isEndRow()
    874:874:public float getComputedPadTop()
    879:879:public float getComputedPadLeft()
    884:884:public float getComputedPadBottom()
    889:889:public float getComputedPadRight()
    893:893:public com.esotericsoftware.tablelayout.BaseTableLayout getLayout()
com.esotericsoftware.tablelayout.Toolkit:
    public abstract float getWidth(java.lang.Object)
    public abstract float getHeight(java.lang.Object)
    65:68:public void setWidget(com.esotericsoftware.tablelayout.BaseTableLayout,com.esotericsoftware.tablelayout.Cell,java.lang.Object)
com.esotericsoftware.tablelayout.Value:
    172:172:public static com.esotericsoftware.tablelayout.Value percentWidth(float)
    181:181:public static com.esotericsoftware.tablelayout.Value percentHeight(float)
    190:190:public static com.esotericsoftware.tablelayout.Value percentWidth(float,java.lang.Object)
    203:203:public static com.esotericsoftware.tablelayout.Value percentHeight(float,java.lang.Object)
com.esotericsoftware.tablelayout.Value$10
com.esotericsoftware.tablelayout.Value$11
com.esotericsoftware.tablelayout.Value$8
com.esotericsoftware.tablelayout.Value$9
com.esotericsoftware.tablelayout.Value$FixedValue:
    98:99:public void set(float)
com.esotericsoftware.tablelayout.Value$TableValue
com.google.ads.doubleclick.DfpAdView
com.google.ads.doubleclick.DfpInterstitialAd
com.google.ads.h:
    273:273:synchronized com.google.ads.mediation.MediationAdapter i()
    280:280:com.google.ads.e j()
    284:285:synchronized void a(android.view.View)
com.google.ads.j:
    private boolean b
    34:66:public void onReceivedAd(com.google.ads.mediation.MediationBannerAdapter)
    72:87:public void onFailedToReceiveAd(com.google.ads.mediation.MediationBannerAdapter,com.google.ads.AdRequest$ErrorCode)
    92:95:public void onPresentScreen(com.google.ads.mediation.MediationBannerAdapter)
    99:102:public void onDismissScreen(com.google.ads.mediation.MediationBannerAdapter)
    106:109:public void onLeaveApplication(com.google.ads.mediation.MediationBannerAdapter)
    113:117:public void onClick(com.google.ads.mediation.MediationBannerAdapter)
com.google.ads.k:
    29:40:public void onReceivedAd(com.google.ads.mediation.MediationInterstitialAdapter)
    45:61:public void onFailedToReceiveAd(com.google.ads.mediation.MediationInterstitialAdapter,com.google.ads.AdRequest$ErrorCode)
    66:69:public void onPresentScreen(com.google.ads.mediation.MediationInterstitialAdapter)
    74:77:public void onDismissScreen(com.google.ads.mediation.MediationInterstitialAdapter)
    81:84:public void onLeaveApplication(com.google.ads.mediation.MediationInterstitialAdapter)
com.google.ads.mediation.EmptyNetworkExtras
com.google.ads.mediation.MediationAdRequest:
    50:50:public com.google.ads.AdRequest$Gender getGender()
    57:57:public java.util.Date getBirthday()
    67:81:public java.lang.Integer getAgeInYears()
    88:92:public java.util.Set getKeywords()
    100:104:public android.location.Location getLocation()
    114:114:public boolean isTesting()
com.google.ads.mediation.MediationBannerAdapter:
    public abstract android.view.View getBannerView()
com.google.ads.mediation.MediationBannerListener:
    public abstract void onReceivedAd(com.google.ads.mediation.MediationBannerAdapter)
    public abstract void onFailedToReceiveAd(com.google.ads.mediation.MediationBannerAdapter,com.google.ads.AdRequest$ErrorCode)
    public abstract void onPresentScreen(com.google.ads.mediation.MediationBannerAdapter)
    public abstract void onDismissScreen(com.google.ads.mediation.MediationBannerAdapter)
    public abstract void onLeaveApplication(com.google.ads.mediation.MediationBannerAdapter)
    public abstract void onClick(com.google.ads.mediation.MediationBannerAdapter)
com.google.ads.mediation.MediationInterstitialListener:
    public abstract void onReceivedAd(com.google.ads.mediation.MediationInterstitialAdapter)
    public abstract void onFailedToReceiveAd(com.google.ads.mediation.MediationInterstitialAdapter,com.google.ads.AdRequest$ErrorCode)
    public abstract void onPresentScreen(com.google.ads.mediation.MediationInterstitialAdapter)
    public abstract void onDismissScreen(com.google.ads.mediation.MediationInterstitialAdapter)
    public abstract void onLeaveApplication(com.google.ads.mediation.MediationInterstitialAdapter)
com.google.ads.mediation.admob.AdMobAdapter
com.google.ads.mediation.admob.AdMobAdapter$1
com.google.ads.mediation.admob.AdMobAdapter$a
com.google.ads.mediation.admob.AdMobAdapter$b
com.google.ads.mediation.admob.AdMobAdapterExtras:
    29:36:public AdMobAdapterExtras(com.google.ads.mediation.admob.AdMobAdapterExtras)
    75:76:public com.google.ads.mediation.admob.AdMobAdapterExtras setUseExactAdSize(boolean)
    85:85:public boolean getUseExactAdSize()
    134:135:public com.google.ads.mediation.admob.AdMobAdapterExtras addExtra(java.lang.String,java.lang.Object)
com.google.ads.mediation.admob.AdMobAdapterServerParameters
com.google.ads.mediation.customevent.CustomEventAdapter
com.google.ads.mediation.customevent.CustomEventAdapter$a
com.google.ads.mediation.customevent.CustomEventAdapter$b
com.google.ads.mediation.customevent.CustomEventBanner
com.google.ads.mediation.customevent.CustomEventBannerListener
com.google.ads.mediation.customevent.CustomEventInterstitial
com.google.ads.mediation.customevent.CustomEventInterstitialListener
com.google.ads.mediation.customevent.CustomEventListener
com.google.ads.mediation.customevent.CustomEventServerParameters
com.google.ads.searchads.SearchAdRequest:
    91:92:public void setQuery(java.lang.String)
    101:108:public void setBackgroundColor(int)
    120:127:public void setBackgroundGradient(int,int)
    137:138:public void setHeaderTextColor(int)
    148:149:public void setDescriptionTextColor(int)
    159:160:public void setAnchorTextColor(int)
    168:169:public void setFontFace(java.lang.String)
    178:179:public void setHeaderTextSize(int)
    189:190:public void setBorderColor(int)
    197:198:public void setBorderType(com.google.ads.searchads.SearchAdRequest$BorderType)
    207:208:public void setBorderThickness(int)
    215:216:public void setCustomChannels(java.lang.String)
info.u250.c2d.accessors.C2dCameraAccessor:
    public static final int Zoom
    public static final int XY
    public static final int ROTATION_Z
    public static final int ROTATION_X
    public static final int ROTATION_Y
info.u250.c2d.accessors.Cb2ObjectAccessor:
    public static final int POSITION_XY
    public static final int ROTATION
info.u250.c2d.accessors.MeshMaskAccessor:
    public static final int Transparency
info.u250.c2d.accessors.SpriteAccessor:
    public static final int POSITION_XY
    public static final int SCALE_XY
    public static final int ROTATION
    public static final int OPACITY
    public static final int RGB
info.u250.c2d.engine.C2dCamera:
    private static final java.lang.String UPDATE_SHAKE_NAME
info.u250.c2d.engine.CoreProvider$CoreEvents
info.u250.c2d.engine.CoreProvider$InGameLoadingScreens:
    83:83:public CoreProvider$InGameLoadingScreens()
info.u250.c2d.engine.CoreProvider$StartupLoadingScreens:
    73:73:public CoreProvider$StartupLoadingScreens()
info.u250.c2d.engine.Engine:
    286:293:public static final void load(java.lang.String[],info.u250.c2d.engine.load.Loading$LoadingComplete)
    313:316:public static final void debugInfo(java.lang.String)
    351:352:public static final void removeUpdatable(java.lang.String,info.u250.c2d.engine.service.Updatable)
    390:390:public static final info.u250.c2d.engine.resources.LanguagesManager getLanguagesManager()
info.u250.c2d.engine.SceneGroup
info.u250.c2d.engine.events.Event:
    18:18:public java.lang.Object getSource()
info.u250.c2d.engine.events.EventManager:
    public abstract void unregister(java.lang.String,info.u250.c2d.engine.events.EventListener)
    public abstract void unregister(info.u250.c2d.engine.events.EventListener)
info.u250.c2d.engine.events.EventManagerImpl:
    25:27:public void unregister(java.lang.String,info.u250.c2d.engine.events.EventListener)
    31:34:public void unregister(info.u250.c2d.engine.events.EventListener)
info.u250.c2d.engine.load.startup.LineBlocksLoading:
    static final float OFFSET
    static final float HEIGHT
    static final float BLOCK
info.u250.c2d.engine.load.startup.LineLoading:
    static final float OFFSET
    static final float HEIGHT
info.u250.c2d.engine.resources.AliasResourceManager:
    44:50:public synchronized void unload(java.lang.String)
    59:61:public void texture(java.lang.Object,java.lang.String)
    84:86:public void skin(java.lang.Object,java.lang.String)
    144:145:public void addRule(info.u250.c2d.engine.resources.AliasResourceManager$LoadResourceRule)
info.u250.c2d.engine.resources.LanguagesManager:
    15:16:public void setLang(java.lang.String)
    19:23:public void load(java.lang.String)
    25:25:public java.lang.String getString(java.lang.String)
    28:35:private void parse(com.badlogic.gdx.utils.XmlReader$Element)
info.u250.c2d.engine.resources.MusicManager:
    18:22:public void setVolume(float)
    25:33:public void stopMusic(java.lang.String)
    36:48:public void pauseMusic(java.lang.String)
info.u250.c2d.engine.resources.SoundManager:
    17:18:public void setVolume(float)
    21:22:public void stopSound(java.lang.String)
info.u250.c2d.engine.service.Renderable
info.u250.c2d.engine.transitions.SplitAccessor:
    public static final int SplitAmount
info.u250.c2d.engine.transitions.SplitTextureRegion:
    static final int NUMBER
info.u250.c2d.engine.transitions.TransitionFactory:
    6:6:public TransitionFactory()
info.u250.c2d.graphic.AdvanceSprite:
    24:24:public boolean isVisible()
    27:28:public void setVisible(boolean)
    30:31:public AdvanceSprite(com.badlogic.gdx.graphics.Texture)
    36:37:public AdvanceSprite(com.badlogic.gdx.graphics.g2d.Sprite)
    67:67:public boolean isShadow()
    70:71:public void setShadow(boolean)
    73:73:public int getShadowNumber()
    76:81:public void setShadowNumber(int)
    83:83:public float getShadowInterval()
    86:87:public void setShadowInterval(float)
    120:123:public info.u250.c2d.graphic.AdvanceSprite enableShadow()
    126:129:public info.u250.c2d.graphic.AdvanceSprite disableShadow()
    138:141:public boolean isTouched(int,int,int,int)
info.u250.c2d.graphic.Analog
info.u250.c2d.graphic.AnimationSprite:
    146:154:public AnimationSprite(float[],com.badlogic.gdx.graphics.g2d.TextureRegion[])
    173:174:public void setAnimationSpriteListener(info.u250.c2d.graphic.AnimationSprite$AnimationSpriteListener)
    185:186:public void setAlphaModulation(float)
    193:195:public void setLoopTimes(int)
    201:202:public void play()
    208:209:public void stop()
    216:218:public void replay()
    224:228:public void setWaitingIndex(int)
    234:236:public void changeFrameDuration(float)
    243:248:public void changeFrameDuration(float[])
    295:297:public void set(info.u250.c2d.graphic.AnimationSprite)
    352:352:public info.u250.c2d.graphic.AnimationSprite$AnimationSpriteData getAnimationSpriteData()
info.u250.c2d.graphic.AnimationSpriteImage
info.u250.c2d.graphic.FadeMask:
    19:19:public com.badlogic.gdx.graphics.Color getColor()
info.u250.c2d.graphic.background.RepeatTextureBackground
info.u250.c2d.graphic.background.RepeatTextureBackground$1
info.u250.c2d.graphic.background.SimpleMeshBackground
info.u250.c2d.graphic.parallax.ParallaxGroup:
    private com.badlogic.gdx.input.GestureDetector gestureDetector
    264:264:public static info.u250.c2d.graphic.parallax.ParallaxGroup load(com.badlogic.gdx.graphics.g2d.TextureAtlas,com.badlogic.gdx.files.FileHandle)
    267:267:public static info.u250.c2d.graphic.parallax.ParallaxGroup load(com.badlogic.gdx.graphics.g2d.TextureAtlas,com.badlogic.gdx.files.FileHandle,boolean)
    289:289:public com.badlogic.gdx.input.GestureDetector getGestureDetector()
    292:294:public info.u250.c2d.graphic.parallax.ParallaxGroup enableGestureDetector()
    297:299:public info.u250.c2d.graphic.parallax.ParallaxGroup enableGeBackground(com.badlogic.gdx.input.GestureDetector,info.u250.c2d.graphic.parallax.ParallaxGroup$ParallaxGroupGestureListener)
    306:306:public info.u250.c2d.engine.C2dCamera getCamera()
    312:312:public com.badlogic.gdx.math.Vector2 getSpeed()
    320:321:public void setSpeed(float,float)
    326:326:public com.badlogic.gdx.utils.Array getLayers()
    383:431:private static com.badlogic.gdx.utils.Json getJsonLoader(com.badlogic.gdx.graphics.g2d.TextureAtlas,boolean)
    283:283:static synthetic info.u250.c2d.engine.C2dCamera access$0(info.u250.c2d.graphic.parallax.ParallaxGroup)
info.u250.c2d.graphic.parallax.ParallaxGroup$1
info.u250.c2d.graphic.parallax.ParallaxGroup$2
info.u250.c2d.graphic.parallax.ParallaxGroup$DefaultCameraController
info.u250.c2d.graphic.parallax.ParallaxGroup$DefaultParallaxGroupGestureListener
info.u250.c2d.graphic.parallax.TileParallaxLayerDrawable
info.u250.c2d.graphic.pixmap.PixmapHelper
info.u250.c2d.graphic.pixmap.PixmapHelper$PixmapChange
info.u250.c2d.graphic.surfaces.CurveSurfaces
info.u250.c2d.graphic.surfaces.CurveSurfaces$CurveSurfacesRender
info.u250.c2d.graphic.surfaces.SurfaceWorldReader
info.u250.c2d.graphic.surfaces.TriangleSurfaces
info.u250.c2d.graphic.surfaces.data.SurfaceData
info.u250.c2d.graphic.surfaces.serializers.SurfaceSerializers
info.u250.c2d.graphic.surfaces.serializers.SurfaceWorldSerializers
info.u250.c2d.graphic.surfaces.serializers.Vector2Serializers
info.u250.c2d.input.GestureRecognizerInput
info.u250.c2d.input.GestureRecognizerInput$GestureRecognizerListener
info.u250.c2d.input.GestureRecognizerInput$GestureRecognizerResult
info.u250.c2d.input.PhysicalFingerInput
info.u250.c2d.input.PhysicalFingerInput$1
info.u250.c2d.physical.box2d.Cb2Object:
    public static final float DEFAULT_restitution
    public static final float DEFAULT_angularDamping
    public static final float DEFAULT_linearDamping
    public static final float DEFAULT_friction
    public static final float DEFAULT_density
    108:108:public boolean isResizeObject()
    111:112:public void setResizeObject(boolean)
    114:114:public boolean isVisiable()
    117:118:public void setVisiable(boolean)
    128:134:public Cb2Object(info.u250.c2d.physical.box2d.loader.cbt.data.BodyData,info.u250.c2d.graphic.AdvanceSprite,info.u250.c2d.physical.box2d.Cb2Object$Cb2ObjectSetupCallback)
    136:137:public Cb2Object(info.u250.c2d.physical.box2d.loader.cbt.data.BodyData,info.u250.c2d.graphic.AdvanceSprite)
    138:157:public Cb2Object(info.u250.c2d.graphic.AdvanceSprite,boolean,info.u250.c2d.physical.box2d.Cb2Object$Cb2ObjectSetupCallback)
    159:160:public Cb2Object(info.u250.c2d.graphic.AdvanceSprite,boolean)
    162:200:protected void setup()
    217:221:public void render(float)
    232:232:public info.u250.c2d.physical.box2d.Cb2Object setPosition(com.badlogic.gdx.math.Vector2)
    239:239:public final com.badlogic.gdx.math.Vector2 getPosition()
info.u250.c2d.physical.box2d.Cb2Object$Cb2ObjectSetupCallback
info.u250.c2d.physical.box2d.Cb2ObjectGroup
info.u250.c2d.physical.box2d.Cb2TriangleSurfaces
info.u250.c2d.physical.box2d.Cb2World:
    public static final float RADIO
    private info.u250.c2d.physical.box2d.builder.BodyBuilder bodyBuilder
    private info.u250.c2d.physical.box2d.builder.FixtureDefBuilder fixtureDefBuilder
    46:46:public info.u250.c2d.physical.box2d.builder.BodyBuilder getBodyBuilder()
    49:49:public info.u250.c2d.physical.box2d.builder.FixtureDefBuilder getFixtureDefBuilder()
    70:73:public info.u250.c2d.physical.box2d.Cb2World installWorld(com.badlogic.gdx.physics.box2d.World)
    79:82:public info.u250.c2d.physical.box2d.Cb2World installDefaultWorld()
    95:95:public com.badlogic.gdx.physics.box2d.Body createScreenBox()
    98:124:public com.badlogic.gdx.physics.box2d.Body createScreenBox(com.badlogic.gdx.math.Rectangle)
    139:149:public void clear()
info.u250.c2d.physical.box2d.builder.BodyBuilder
info.u250.c2d.physical.box2d.builder.FixtureDefBuilder
info.u250.c2d.physical.box2d.controllers.B2ShapeExtensions
info.u250.c2d.physical.box2d.controllers.Box2dControllers
info.u250.c2d.physical.box2d.controllers.BuoyancyController
info.u250.c2d.physical.box2d.controllers.GravityController
info.u250.c2d.physical.box2d.loader.AbstractBox2dPhysicalObjectLoader
info.u250.c2d.physical.box2d.loader.AbstractBox2dPhysicalObjectModel
info.u250.c2d.physical.box2d.loader.JavaBox2dEditorReader
info.u250.c2d.physical.box2d.loader.JavaBox2dEditorReader$JavaBox2dEditorReaderModel
info.u250.c2d.physical.box2d.loader.PhysicsEditorPlistReader
info.u250.c2d.physical.box2d.loader.PhysicsEditorPlistReader$Box2dPhysicalObjectAdapter
info.u250.c2d.physical.box2d.loader.cbt.CbtWorldReader
info.u250.c2d.physical.box2d.loader.cbt.data.BodyData:
    public java.lang.String name
    public java.lang.String res
    public java.lang.String data
    public float density
    public float friction
    public float restitution
    public int filter_categoryBits
    public int filter_groupIndex
    public int filter_maskBits
    public boolean isSensor
    public boolean isDynamic
    public boolean isKinematic
    public float angle
    public final com.badlogic.gdx.math.Vector2 center
    16:18:public BodyData()
    public abstract boolean isFocus(com.badlogic.gdx.math.Vector2)
    public abstract void debug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)
    42:43:public void translate(float,float)
    public abstract void build()
info.u250.c2d.physical.box2d.loader.cbt.data.BoxData
info.u250.c2d.physical.box2d.loader.cbt.data.CircleData
info.u250.c2d.physical.box2d.loader.cbt.data.DebugColor
info.u250.c2d.physical.box2d.loader.cbt.data.DistanceJointData
info.u250.c2d.physical.box2d.loader.cbt.data.FrictionJointData
info.u250.c2d.physical.box2d.loader.cbt.data.JointData
info.u250.c2d.physical.box2d.loader.cbt.data.PolygonData
info.u250.c2d.physical.box2d.loader.cbt.data.PrismaticJointData
info.u250.c2d.physical.box2d.loader.cbt.data.PulleyJointData
info.u250.c2d.physical.box2d.loader.cbt.data.RevoluteJointData
info.u250.c2d.physical.box2d.loader.cbt.data.RopeJointData
info.u250.c2d.physical.box2d.loader.cbt.data.WeldJointData
info.u250.c2d.physical.box2d.loader.cbt.data.WheelJointData
info.u250.c2d.physical.box2d.loader.cbt.serializers.BoxSerializer
info.u250.c2d.physical.box2d.loader.cbt.serializers.CbtWorldSerializer
info.u250.c2d.physical.box2d.loader.cbt.serializers.CircleSerializer
info.u250.c2d.physical.box2d.loader.cbt.serializers.DistanceJointSerializer
info.u250.c2d.physical.box2d.loader.cbt.serializers.FrictionJointSerializer
info.u250.c2d.physical.box2d.loader.cbt.serializers.PolygonSerializer
info.u250.c2d.physical.box2d.loader.cbt.serializers.PrismaticJointSerializer
info.u250.c2d.physical.box2d.loader.cbt.serializers.PulleyJointSerializer
info.u250.c2d.physical.box2d.loader.cbt.serializers.RevoluteointSerializer
info.u250.c2d.physical.box2d.loader.cbt.serializers.RopeJointSerializer
info.u250.c2d.physical.box2d.loader.cbt.serializers.WeldJointSerializer
info.u250.c2d.physical.box2d.loader.cbt.serializers.WheelJointSerializer
info.u250.c2d.tools.motionwelder.MotionwelderSupport
info.u250.c2d.tools.motionwelder.MotionwelderSupport$C2dMSpriteImageLoader
info.u250.c2d.tools.motionwelder.support.MCPLReader
info.u250.c2d.tools.motionwelder.support.MPlayer
info.u250.c2d.tools.motionwelder.support.MSimpleAnimationPlayer
info.u250.c2d.tools.motionwelder.support.MSprite
info.u250.c2d.tools.motionwelder.support.MSpriteData
info.u250.c2d.tools.motionwelder.support.MSpriteImageLoader
info.u250.c2d.tools.motionwelder.support.MSpriteLoader
info.u250.c2d.updatable.Day2NightEvent
info.u250.c2d.updatable.PeriodUpdatable:
    public abstract void begin()
    public abstract void end()
    public abstract void update(float)
    39:40:public void setStart(boolean)
info.u250.c2d.updatable.SpeedCameraEvent
info.u250.c2d.updatable.ZoomCameraEvent
info.u250.c2d.utils.Box2dlUtils
info.u250.c2d.utils.ColorUtils
info.u250.c2d.utils.Mathutils
info.u250.c2d.utils.PList
info.u250.c2d.utils.SpriteUtils
info.u250.c2d.utils.UiUtils:
    8:8:public UiUtils()
info.u250.snakeonaplane.BuildConfig
info.u250.snakeonaplane.R
info.u250.snakeonaplane.R$attr
info.u250.snakeonaplane.R$drawable
info.u250.snakeonaplane.R$id
info.u250.snakeonaplane.R$layout
info.u250.snakeonaplane.R$string
info.u250.snakeonaplane.SnakeOnAPlaneEngineDrive:
    public static final java.lang.String EVENT_HOME
    public static final java.lang.String EVENT_GAME
    public static final java.lang.String EVENT_SHOW_AD
    public static final java.lang.String EVENT_HIDE_AD
info.u250.snakeonaplane.scene.LevelTools:
    8:8:public LevelTools()
    34:40:public static boolean isSoundEnabled()
    43:51:public static void enableAudio()
    53:61:public static void disableAudio()
info.u250.snakeonaplane.scene.SceneSnakeOnAPlane:
    private static final int FRAME_TIME
    private static final float BLOCK_SIZE
    private static final int MAX_LEVELS
    private static final int EMPTY
    private static final int WALL
    private static final int PELLET
    private static final int EXIT
    private static final int START
    private static final int WHITE_PELLET
    private static final int STICKY
    private static final int TELEPORT_IN
    private static final int TELEPORT_OUT
    private static final int RED_PELLET
    private static final int GRAVITY_SWITCH
